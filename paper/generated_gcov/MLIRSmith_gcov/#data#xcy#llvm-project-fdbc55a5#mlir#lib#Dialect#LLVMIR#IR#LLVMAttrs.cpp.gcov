        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/LLVMIR/IR/LLVMAttrs.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/LLVMIR/CMakeFiles/obj.MLIRLLVMDialect.dir/IR/LLVMAttrs.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/LLVMIR/CMakeFiles/obj.MLIRLLVMDialect.dir/IR/LLVMAttrs.cpp.gcda
        -:    0:Runs:116160
        -:    1://===- LLVMAttrs.cpp - LLVM Attributes registration -----------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file defines the attribute details for the LLVM IR dialect in MLIR.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Dialect/LLVMIR/LLVMAttrs.h"
        -:   14:#include "mlir/Dialect/LLVMIR/LLVMDialect.h"
        -:   15:#include "mlir/IR/Builders.h"
        -:   16:#include "mlir/IR/DialectImplementation.h"
        -:   17:#include "llvm/ADT/StringExtras.h"
        -:   18:#include "llvm/ADT/TypeSwitch.h"
        -:   19:#include "llvm/BinaryFormat/Dwarf.h"
        -:   20:
        -:   21:using namespace mlir;
        -:   22:using namespace mlir::LLVM;
        -:   23:
        -:   24:#include "mlir/Dialect/LLVMIR/LLVMOpsEnums.cpp.inc"
        -:   25:#define GET_ATTRDEF_CLASSES
        -:   26:#include "mlir/Dialect/LLVMIR/LLVMOpsAttrDefs.cpp.inc"
        -:   27:
        -:   28://===----------------------------------------------------------------------===//
        -:   29:// LLVMDialect registration
        -:   30://===----------------------------------------------------------------------===//
        -:   31:
function _ZN4mlir4LLVM11LLVMDialect18registerAttributesEv called 13198 returned 100% blocks executed 100%
    13198:   32:void LLVMDialect::registerAttributes() {
    13198:   33:  addAttributes<
        -:   34:#define GET_ATTRDEF_LIST
        -:   35:#include "mlir/Dialect/LLVMIR/LLVMOpsAttrDefs.cpp.inc"
    13198:   36:      >();
call    0 returned 100%
    13198:   37:}
        -:   38:
        -:   39://===----------------------------------------------------------------------===//
        -:   40:// DINodeAttr
        -:   41://===----------------------------------------------------------------------===//
        -:   42:
function _ZN4mlir4LLVM10DINodeAttr7classofENS_9AttributeE called 0 returned 0% blocks executed 0%
    #####:   43:bool DINodeAttr::classof(Attribute attr) {
    #####:   44:  return llvm::isa<DIBasicTypeAttr, DICompileUnitAttr, DICompositeTypeAttr,
        -:   45:                   DIDerivedTypeAttr, DIFileAttr, DILexicalBlockAttr,
        -:   46:                   DILexicalBlockFileAttr, DILocalVariableAttr,
    #####:   47:                   DISubprogramAttr, DISubroutineTypeAttr>(attr);
call    0 never executed
call    1 never executed
        -:   48:}
        -:   49:
        -:   50://===----------------------------------------------------------------------===//
        -:   51:// DIScopeAttr
        -:   52://===----------------------------------------------------------------------===//
        -:   53:
function _ZN4mlir4LLVM11DIScopeAttr7classofENS_9AttributeE called 0 returned 0% blocks executed 0%
    #####:   54:bool DIScopeAttr::classof(Attribute attr) {
    #####:   55:  return llvm::isa<DICompileUnitAttr, DIFileAttr, DILexicalBlockAttr,
    #####:   56:                   DILexicalBlockFileAttr, DISubprogramAttr>(attr);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:   57:}
        -:   58:
        -:   59://===----------------------------------------------------------------------===//
        -:   60:// DITypeAttr
        -:   61://===----------------------------------------------------------------------===//
        -:   62:
function _ZN4mlir4LLVM10DITypeAttr7classofENS_9AttributeE called 0 returned 0% blocks executed 0%
    #####:   63:bool DITypeAttr::classof(Attribute attr) {
    #####:   64:  return llvm::isa<DIBasicTypeAttr, DISubroutineTypeAttr>(attr);
call    0 never executed
call    1 never executed
call    2 never executed
        -:   65:}
        -:   66:
        -:   67://===----------------------------------------------------------------------===//
        -:   68:// DICompileUnitAttr
        -:   69://===----------------------------------------------------------------------===//
        -:   70:
function _ZNK4mlir4LLVM17DICompileUnitAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:   71:void DICompileUnitAttr::walkImmediateSubElements(
        -:   72:    function_ref<void(Attribute)> walkAttrsFn,
        -:   73:    function_ref<void(Type)> walkTypesFn) const {
    #####:   74:  walkAttrsFn(getFile());
call    0 never executed
call    1 never executed
    #####:   75:  walkAttrsFn(getProducer());
call    0 never executed
call    1 never executed
    #####:   76:}
        -:   77:
        -:   78:Attribute
function _ZNK4mlir4LLVM17DICompileUnitAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:   79:DICompileUnitAttr::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:   80:                                               ArrayRef<Type> replTypes) const {
    #####:   81:  return get(getContext(), getSourceLanguage(), replAttrs[0].cast<DIFileAttr>(),
branch  0 never executed
branch  1 never executed
    #####:   82:             replAttrs[1].cast<StringAttr>(), getIsOptimized(),
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   83:             getEmissionKind());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   84:}
        -:   85:
        -:   86://===----------------------------------------------------------------------===//
        -:   87:// DICompositeTypeAttr
        -:   88://===----------------------------------------------------------------------===//
        -:   89:
function _ZNK4mlir4LLVM19DICompositeTypeAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:   90:void DICompositeTypeAttr::walkImmediateSubElements(
        -:   91:    function_ref<void(Attribute)> walkAttrsFn,
        -:   92:    function_ref<void(Type)> walkTypesFn) const {
    #####:   93:  walkAttrsFn(getName());
call    0 never executed
    #####:   94:  walkAttrsFn(getFile());
call    0 never executed
    #####:   95:  walkAttrsFn(getScope());
call    0 never executed
    #####:   96:  for (DINodeAttr element : getElements())
branch  0 never executed
branch  1 never executed
    #####:   97:    walkAttrsFn(element);
call    0 never executed
    #####:   98:}
        -:   99:
function _ZNK4mlir4LLVM19DICompositeTypeAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  100:Attribute DICompositeTypeAttr::replaceImmediateSubElements(
        -:  101:    ArrayRef<Attribute> replAttrs, ArrayRef<Type> replTypes) const {
    #####:  102:  ArrayRef<Attribute> elements = replAttrs.drop_front(3);
call    0 never executed
    #####:  103:  return get(
    #####:  104:      getContext(), getTag(), replAttrs[0].cast<StringAttr>(),
call    0 never executed
        -:  105:      cast_or_null<DIFileAttr>(replAttrs[1]), getLine(),
        -:  106:      cast_or_null<DIScopeAttr>(replAttrs[2]), getSizeInBits(),
        -:  107:      getAlignInBits(),
    #####:  108:      ArrayRef<DINodeAttr>(static_cast<const DINodeAttr *>(elements.data()),
branch  0 never executed
branch  1 never executed
    #####:  109:                           elements.size()));
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
call    9 never executed
        -:  110:}
        -:  111:
        -:  112://===----------------------------------------------------------------------===//
        -:  113:// DIDerivedTypeAttr
        -:  114://===----------------------------------------------------------------------===//
        -:  115:
function _ZNK4mlir4LLVM17DIDerivedTypeAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  116:void DIDerivedTypeAttr::walkImmediateSubElements(
        -:  117:    function_ref<void(Attribute)> walkAttrsFn,
        -:  118:    function_ref<void(Type)> walkTypesFn) const {
    #####:  119:  walkAttrsFn(getName());
call    0 never executed
call    1 never executed
    #####:  120:  walkAttrsFn(getBaseType());
call    0 never executed
call    1 never executed
    #####:  121:}
        -:  122:
        -:  123:Attribute
function _ZNK4mlir4LLVM17DIDerivedTypeAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  124:DIDerivedTypeAttr::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:  125:                                               ArrayRef<Type> replTypes) const {
    #####:  126:  return get(getContext(), getTag(), replAttrs[0].cast<StringAttr>(),
branch  0 never executed
branch  1 never executed
    #####:  127:             replAttrs[1].cast<DITypeAttr>(), getSizeInBits(), getAlignInBits(),
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:  128:             getOffsetInBits());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:  129:}
        -:  130:
        -:  131://===----------------------------------------------------------------------===//
        -:  132:// DILexicalBlockAttr
        -:  133://===----------------------------------------------------------------------===//
        -:  134:
function _ZNK4mlir4LLVM18DILexicalBlockAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  135:void DILexicalBlockAttr::walkImmediateSubElements(
        -:  136:    function_ref<void(Attribute)> walkAttrsFn,
        -:  137:    function_ref<void(Type)> walkTypesFn) const {
    #####:  138:  walkAttrsFn(getScope());
call    0 never executed
call    1 never executed
    #####:  139:  walkAttrsFn(getFile());
call    0 never executed
call    1 never executed
    #####:  140:}
        -:  141:
function _ZNK4mlir4LLVM18DILexicalBlockAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  142:Attribute DILexicalBlockAttr::replaceImmediateSubElements(
        -:  143:    ArrayRef<Attribute> replAttrs, ArrayRef<Type> replTypes) const {
    #####:  144:  return get(replAttrs[0].cast<DIScopeAttr>(), replAttrs[1].cast<DIFileAttr>(),
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:  145:             getLine(), getColumn());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:  146:}
        -:  147:
        -:  148://===----------------------------------------------------------------------===//
        -:  149:// DILexicalBlockFileAttr
        -:  150://===----------------------------------------------------------------------===//
        -:  151:
function _ZNK4mlir4LLVM22DILexicalBlockFileAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  152:void DILexicalBlockFileAttr::walkImmediateSubElements(
        -:  153:    function_ref<void(Attribute)> walkAttrsFn,
        -:  154:    function_ref<void(Type)> walkTypesFn) const {
    #####:  155:  walkAttrsFn(getScope());
call    0 never executed
call    1 never executed
    #####:  156:  walkAttrsFn(getFile());
call    0 never executed
call    1 never executed
    #####:  157:}
        -:  158:
function _ZNK4mlir4LLVM22DILexicalBlockFileAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  159:Attribute DILexicalBlockFileAttr::replaceImmediateSubElements(
        -:  160:    ArrayRef<Attribute> replAttrs, ArrayRef<Type> replTypes) const {
    #####:  161:  return get(replAttrs[0].cast<DIScopeAttr>(), replAttrs[1].cast<DIFileAttr>(),
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:  162:             getDescriminator());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:  163:}
        -:  164:
        -:  165://===----------------------------------------------------------------------===//
        -:  166:// DILocalVariableAttr
        -:  167://===----------------------------------------------------------------------===//
        -:  168:
function _ZNK4mlir4LLVM19DILocalVariableAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  169:void DILocalVariableAttr::walkImmediateSubElements(
        -:  170:    function_ref<void(Attribute)> walkAttrsFn,
        -:  171:    function_ref<void(Type)> walkTypesFn) const {
    #####:  172:  walkAttrsFn(getScope());
call    0 never executed
    #####:  173:  walkAttrsFn(getName());
call    0 never executed
    #####:  174:  walkAttrsFn(getFile());
call    0 never executed
    #####:  175:  walkAttrsFn(getType());
call    0 never executed
    #####:  176:}
        -:  177:
function _ZNK4mlir4LLVM19DILocalVariableAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  178:Attribute DILocalVariableAttr::replaceImmediateSubElements(
        -:  179:    ArrayRef<Attribute> replAttrs, ArrayRef<Type> replTypes) const {
    #####:  180:  return get(getContext(), replAttrs[0].cast<DIScopeAttr>(),
    #####:  181:             replAttrs[1].cast<StringAttr>(), replAttrs[2].cast<DIFileAttr>(),
call    0 never executed
        -:  182:             getLine(), getArg(), getAlignInBits(),
    #####:  183:             replAttrs[3].cast<DITypeAttr>());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
        -:  184:}
        -:  185:
        -:  186://===----------------------------------------------------------------------===//
        -:  187:// DISubprogramAttr
        -:  188://===----------------------------------------------------------------------===//
        -:  189:
function _ZNK4mlir4LLVM16DISubprogramAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  190:void DISubprogramAttr::walkImmediateSubElements(
        -:  191:    function_ref<void(Attribute)> walkAttrsFn,
        -:  192:    function_ref<void(Type)> walkTypesFn) const {
    #####:  193:  walkAttrsFn(getCompileUnit());
call    0 never executed
    #####:  194:  walkAttrsFn(getScope());
call    0 never executed
    #####:  195:  walkAttrsFn(getName());
call    0 never executed
    #####:  196:  walkAttrsFn(getLinkageName());
call    0 never executed
    #####:  197:  walkAttrsFn(getFile());
call    0 never executed
    #####:  198:  walkAttrsFn(getType());
call    0 never executed
    #####:  199:}
        -:  200:
        -:  201:Attribute
function _ZNK4mlir4LLVM16DISubprogramAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  202:DISubprogramAttr::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:  203:                                              ArrayRef<Type> replTypes) const {
    #####:  204:  return get(getContext(), replAttrs[0].cast<DICompileUnitAttr>(),
    #####:  205:             replAttrs[1].cast<DIScopeAttr>(), replAttrs[2].cast<StringAttr>(),
    #####:  206:             replAttrs[3].cast<StringAttr>(), replAttrs[4].cast<DIFileAttr>(),
call    0 never executed
        -:  207:             getLine(), getScopeLine(), getSubprogramFlags(),
    #####:  208:             replAttrs[5].cast<DISubroutineTypeAttr>());
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
        -:  209:}
        -:  210:
        -:  211://===----------------------------------------------------------------------===//
        -:  212:// DISubroutineTypeAttr
        -:  213://===----------------------------------------------------------------------===//
        -:  214:
function _ZNK4mlir4LLVM20DISubroutineTypeAttr24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS3_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  215:void DISubroutineTypeAttr::walkImmediateSubElements(
        -:  216:    function_ref<void(Attribute)> walkAttrsFn,
        -:  217:    function_ref<void(Type)> walkTypesFn) const {
    #####:  218:  for (DITypeAttr type : getTypes())
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  219:    walkAttrsFn(type);
call    0 never executed
call    1 never executed
    #####:  220:}
        -:  221:
function _ZNK4mlir4LLVM20DISubroutineTypeAttr27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS3_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  222:Attribute DISubroutineTypeAttr::replaceImmediateSubElements(
        -:  223:    ArrayRef<Attribute> replAttrs, ArrayRef<Type> replTypes) const {
    #####:  224:  return get(
        -:  225:      getContext(), getCallingConvention(),
    #####:  226:      ArrayRef<DITypeAttr>(static_cast<const DITypeAttr *>(replAttrs.data()),
call    0 never executed
    #####:  227:                           replAttrs.size()));
call    0 never executed
call    1 never executed
        -:  228:}
        -:  229:
        -:  230://===----------------------------------------------------------------------===//
        -:  231:// LoopOptionsAttrBuilder
        -:  232://===----------------------------------------------------------------------===//
        -:  233:
function _ZN4mlir4LLVM22LoopOptionsAttrBuilderC2ENS0_15LoopOptionsAttrE called 0 returned 0% blocks executed 0%
    #####:  234:LoopOptionsAttrBuilder::LoopOptionsAttrBuilder(LoopOptionsAttr attr)
    #####:  235:    : options(attr.getOptions().begin(), attr.getOptions().end()) {}
call    0 never executed
        -:  236:
        -:  237:template <typename T>
    #####:  238:LoopOptionsAttrBuilder &LoopOptionsAttrBuilder::setOption(LoopOptionCase tag,
        -:  239:                                                          Optional<T> value) {
    #####:  240:  auto option = llvm::find_if(
    #####:  241:      options, [tag](auto option) { return option.first == tag; });
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
    #####:  242:  if (option != options.end()) {
    #####:  243:    if (value)
    #####:  244:      option->second = *value;
        -:  245:    else
    #####:  246:      options.erase(option);
        -:  247:  } else {
    #####:  248:    options.push_back(LoopOptionsAttr::OptionValuePair(tag, *value));
        -:  249:  }
    #####:  250:  return *this;
        -:  251:}
------------------
_ZN4mlir4LLVM22LoopOptionsAttrBuilder9setOptionImEERS1_NS0_14LoopOptionCaseEN4llvm8OptionalIT_EE:
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder9setOptionImEERS1_NS0_14LoopOptionCaseEN4llvm8OptionalIT_EE called 0 returned 0% blocks executed 0%
    #####:  238:LoopOptionsAttrBuilder &LoopOptionsAttrBuilder::setOption(LoopOptionCase tag,
        -:  239:                                                          Optional<T> value) {
    #####:  240:  auto option = llvm::find_if(
    #####:  241:      options, [tag](auto option) { return option.first == tag; });
branch  0 never executed
branch  1 never executed
    #####:  242:  if (option != options.end()) {
branch  0 never executed
branch  1 never executed
    #####:  243:    if (value)
branch  0 never executed
branch  1 never executed
    #####:  244:      option->second = *value;
        -:  245:    else
    #####:  246:      options.erase(option);
call    0 never executed
        -:  247:  } else {
    #####:  248:    options.push_back(LoopOptionsAttr::OptionValuePair(tag, *value));
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  249:  }
    #####:  250:  return *this;
        -:  251:}
------------------
_ZN4mlir4LLVM22LoopOptionsAttrBuilder9setOptionIbEERS1_NS0_14LoopOptionCaseEN4llvm8OptionalIT_EE:
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder9setOptionIbEERS1_NS0_14LoopOptionCaseEN4llvm8OptionalIT_EE called 0 returned 0% blocks executed 0%
    #####:  238:LoopOptionsAttrBuilder &LoopOptionsAttrBuilder::setOption(LoopOptionCase tag,
        -:  239:                                                          Optional<T> value) {
    #####:  240:  auto option = llvm::find_if(
    #####:  241:      options, [tag](auto option) { return option.first == tag; });
branch  0 never executed
branch  1 never executed
    #####:  242:  if (option != options.end()) {
branch  0 never executed
branch  1 never executed
    #####:  243:    if (value)
branch  0 never executed
branch  1 never executed
    #####:  244:      option->second = *value;
        -:  245:    else
    #####:  246:      options.erase(option);
call    0 never executed
        -:  247:  } else {
    #####:  248:    options.push_back(LoopOptionsAttr::OptionValuePair(tag, *value));
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  249:  }
    #####:  250:  return *this;
        -:  251:}
------------------
        -:  252:
        -:  253:LoopOptionsAttrBuilder &
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder14setDisableLICMEN4llvm8OptionalIbEE called 0 returned 0% blocks executed 0%
    #####:  254:LoopOptionsAttrBuilder::setDisableLICM(Optional<bool> value) {
    #####:  255:  return setOption(LoopOptionCase::disable_licm, value);
call    0 never executed
        -:  256:}
        -:  257:
        -:  258:/// Set the `interleave_count` option to the provided value. If no value
        -:  259:/// is provided the option is deleted.
        -:  260:LoopOptionsAttrBuilder &
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder18setInterleaveCountEN4llvm8OptionalImEE called 0 returned 0% blocks executed 0%
    #####:  261:LoopOptionsAttrBuilder::setInterleaveCount(Optional<uint64_t> count) {
    #####:  262:  return setOption(LoopOptionCase::interleave_count, count);
call    0 never executed
        -:  263:}
        -:  264:
        -:  265:/// Set the `disable_unroll` option to the provided value. If no value
        -:  266:/// is provided the option is deleted.
        -:  267:LoopOptionsAttrBuilder &
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder16setDisableUnrollEN4llvm8OptionalIbEE called 0 returned 0% blocks executed 0%
    #####:  268:LoopOptionsAttrBuilder::setDisableUnroll(Optional<bool> value) {
    #####:  269:  return setOption(LoopOptionCase::disable_unroll, value);
call    0 never executed
        -:  270:}
        -:  271:
        -:  272:/// Set the `disable_pipeline` option to the provided value. If no value
        -:  273:/// is provided the option is deleted.
        -:  274:LoopOptionsAttrBuilder &
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder18setDisablePipelineEN4llvm8OptionalIbEE called 0 returned 0% blocks executed 0%
    #####:  275:LoopOptionsAttrBuilder::setDisablePipeline(Optional<bool> value) {
    #####:  276:  return setOption(LoopOptionCase::disable_pipeline, value);
call    0 never executed
        -:  277:}
        -:  278:
        -:  279:/// Set the `pipeline_initiation_interval` option to the provided value.
        -:  280:/// If no value is provided the option is deleted.
function _ZN4mlir4LLVM22LoopOptionsAttrBuilder29setPipelineInitiationIntervalEN4llvm8OptionalImEE called 0 returned 0% blocks executed 0%
    #####:  281:LoopOptionsAttrBuilder &LoopOptionsAttrBuilder::setPipelineInitiationInterval(
        -:  282:    Optional<uint64_t> count) {
    #####:  283:  return setOption(LoopOptionCase::pipeline_initiation_interval, count);
call    0 never executed
        -:  284:}
        -:  285:
        -:  286://===----------------------------------------------------------------------===//
        -:  287:// LoopOptionsAttr
        -:  288://===----------------------------------------------------------------------===//
        -:  289:
        -:  290:template <typename T>
        -:  291:static Optional<T>
    #####:  292:getOption(ArrayRef<std::pair<LoopOptionCase, int64_t>> options,
        -:  293:          LoopOptionCase option) {
        -:  294:  auto it =
    #####:  295:      lower_bound(options, option, [](auto optionPair, LoopOptionCase option) {
        -:  296:        return optionPair.first < option;
        -:  297:      });
    #####:  298:  if (it == options.end())
    #####:  299:    return {};
    #####:  300:  return static_cast<T>(it->second);
        -:  301:}
------------------
_Z9getOptionIlEN4llvm8OptionalIT_EENS0_8ArrayRefISt4pairIN4mlir4LLVM14LoopOptionCaseElEEES8_:
function _Z9getOptionIlEN4llvm8OptionalIT_EENS0_8ArrayRefISt4pairIN4mlir4LLVM14LoopOptionCaseElEEES8_ called 0 returned 0% blocks executed 0%
    #####:  292:getOption(ArrayRef<std::pair<LoopOptionCase, int64_t>> options,
        -:  293:          LoopOptionCase option) {
        -:  294:  auto it =
    #####:  295:      lower_bound(options, option, [](auto optionPair, LoopOptionCase option) {
branch  0 never executed
branch  1 never executed
        -:  296:        return optionPair.first < option;
        -:  297:      });
    #####:  298:  if (it == options.end())
branch  0 never executed
branch  1 never executed
    #####:  299:    return {};
    #####:  300:  return static_cast<T>(it->second);
        -:  301:}
------------------
_Z9getOptionIbEN4llvm8OptionalIT_EENS0_8ArrayRefISt4pairIN4mlir4LLVM14LoopOptionCaseElEEES8_:
function _Z9getOptionIbEN4llvm8OptionalIT_EENS0_8ArrayRefISt4pairIN4mlir4LLVM14LoopOptionCaseElEEES8_ called 0 returned 0% blocks executed 0%
    #####:  292:getOption(ArrayRef<std::pair<LoopOptionCase, int64_t>> options,
        -:  293:          LoopOptionCase option) {
        -:  294:  auto it =
    #####:  295:      lower_bound(options, option, [](auto optionPair, LoopOptionCase option) {
branch  0 never executed
branch  1 never executed
        -:  296:        return optionPair.first < option;
        -:  297:      });
    #####:  298:  if (it == options.end())
branch  0 never executed
branch  1 never executed
    #####:  299:    return {};
    #####:  300:  return static_cast<T>(it->second);
        -:  301:}
------------------
        -:  302:
function _ZN4mlir4LLVM15LoopOptionsAttr13disableUnrollEv called 0 returned 0% blocks executed 0%
    #####:  303:Optional<bool> LoopOptionsAttr::disableUnroll() {
    #####:  304:  return getOption<bool>(getOptions(), LoopOptionCase::disable_unroll);
call    0 never executed
        -:  305:}
        -:  306:
function _ZN4mlir4LLVM15LoopOptionsAttr11disableLICMEv called 0 returned 0% blocks executed 0%
    #####:  307:Optional<bool> LoopOptionsAttr::disableLICM() {
    #####:  308:  return getOption<bool>(getOptions(), LoopOptionCase::disable_licm);
call    0 never executed
        -:  309:}
        -:  310:
function _ZN4mlir4LLVM15LoopOptionsAttr15interleaveCountEv called 0 returned 0% blocks executed 0%
    #####:  311:Optional<int64_t> LoopOptionsAttr::interleaveCount() {
    #####:  312:  return getOption<int64_t>(getOptions(), LoopOptionCase::interleave_count);
call    0 never executed
        -:  313:}
        -:  314:
        -:  315:/// Build the LoopOptions Attribute from a sorted array of individual options.
function _ZN4mlir4LLVM15LoopOptionsAttr3getEPNS_11MLIRContextEN4llvm8ArrayRefISt4pairINS0_14LoopOptionCaseElEEE called 0 returned 0% blocks executed 0%
    #####:  316:LoopOptionsAttr LoopOptionsAttr::get(
        -:  317:    MLIRContext *context,
        -:  318:    ArrayRef<std::pair<LoopOptionCase, int64_t>> sortedOptions) {
    #####:  319:  assert(llvm::is_sorted(sortedOptions, llvm::less_first()) &&
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
        -:  320:         "LoopOptionsAttr ctor expects a sorted options array");
    #####:  321:  return Base::get(context, sortedOptions);
call    0 never executed
        -:  322:}
        -:  323:
        -:  324:/// Build the LoopOptions Attribute from a sorted array of individual options.
function _ZN4mlir4LLVM15LoopOptionsAttr3getEPNS_11MLIRContextERNS0_22LoopOptionsAttrBuilderE called 0 returned 0% blocks executed 0%
    #####:  325:LoopOptionsAttr LoopOptionsAttr::get(MLIRContext *context,
        -:  326:                                     LoopOptionsAttrBuilder &optionBuilders) {
    #####:  327:  llvm::sort(optionBuilders.options, llvm::less_first());
call    0 never executed
    #####:  328:  return Base::get(context, optionBuilders.options);
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
        -:  329:}
        -:  330:
function _ZNK4mlir4LLVM15LoopOptionsAttr5printERNS_10AsmPrinterE called 0 returned 0% blocks executed 0%
    #####:  331:void LoopOptionsAttr::print(AsmPrinter &printer) const {
    #####:  332:  printer << "<";
call    0 never executed
function _ZZNK4mlir4LLVM15LoopOptionsAttr5printERNS_10AsmPrinterEENKUlT_E_clISt4pairINS0_14LoopOptionCaseElEEEDaS4_.isra.0 called 0 returned 0% blocks executed 0%
    #####:  333:  llvm::interleaveComma(getOptions(), printer, [&](auto option) {
call    0 never executed
    #####:  334:    printer << stringifyEnum(option.first) << " = ";
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  335:    switch (option.first) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
    #####:  336:    case LoopOptionCase::disable_licm:
        -:  337:    case LoopOptionCase::disable_unroll:
        -:  338:    case LoopOptionCase::disable_pipeline:
    #####:  339:      printer << (option.second ? "true" : "false");
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
    #####:  340:      break;
    #####:  341:    case LoopOptionCase::interleave_count:
call    0 never executed
        -:  342:    case LoopOptionCase::pipeline_initiation_interval:
    #####:  343:      printer << option.second;
        -:  344:      break;
        -:  345:    }
    #####:  346:  });
    #####:  347:  printer << ">";
call    0 never executed
    #####:  348:}
        -:  349:
function _ZN4mlir4LLVM15LoopOptionsAttr5parseERNS_9AsmParserENS_4TypeE called 0 returned 0% blocks executed 0%
    #####:  350:Attribute LoopOptionsAttr::parse(AsmParser &parser, Type type) {
    #####:  351:  if (failed(parser.parseLess()))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  352:    return {};
        -:  353:
    #####:  354:  SmallVector<std::pair<LoopOptionCase, int64_t>> options;
call    0 never executed
    #####:  355:  llvm::SmallDenseSet<LoopOptionCase> seenOptions;
call    0 never executed
branch  1 never executed
branch  2 never executed
function _ZZN4mlir4LLVM15LoopOptionsAttr5parseERNS_9AsmParserENS_4TypeEENKUlvE_clEv called 0 returned 0% blocks executed 0%
    #####:  356:  auto parseLoopOptions = [&]() -> ParseResult {
    #####:  357:    StringRef optionName;
    #####:  358:    if (parser.parseKeyword(&optionName))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  359:      return failure();
        -:  360:
    #####:  361:    auto option = symbolizeLoopOptionCase(optionName);
call    0 never executed
    #####:  362:    if (!option)
branch  0 never executed
branch  1 never executed
    #####:  363:      return parser.emitError(parser.getNameLoc(), "unknown loop option: ")
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  364:             << optionName;
call    0 never executed
call    1 never executed
    #####:  365:    if (!seenOptions.insert(*option).second)
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  366:      return parser.emitError(parser.getNameLoc(), "loop option present twice");
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  367:    if (failed(parser.parseEqual()))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  368:      return failure();
        -:  369:
    #####:  370:    int64_t value;
    #####:  371:    switch (*option) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:  372:    case LoopOptionCase::disable_licm:
    #####:  373:    case LoopOptionCase::disable_unroll:
    #####:  374:    case LoopOptionCase::disable_pipeline:
    #####:  375:      if (succeeded(parser.parseOptionalKeyword("true")))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  376:        value = 1;
    #####:  377:      else if (succeeded(parser.parseOptionalKeyword("false")))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  378:        value = 0;
        -:  379:      else {
    #####:  380:        return parser.emitError(parser.getNameLoc(),
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  381:                                "expected boolean value 'true' or 'false'");
call    0 never executed
call    1 never executed
        -:  382:      }
        -:  383:      break;
    #####:  384:    case LoopOptionCase::interleave_count:
    #####:  385:    case LoopOptionCase::pipeline_initiation_interval:
    #####:  386:      if (failed(parser.parseInteger(value)))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  387:        return parser.emitError(parser.getNameLoc(), "expected integer value");
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:  388:      break;
        -:  389:    }
    #####:  390:    options.push_back(std::make_pair(*option, value));
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:  391:    return success();
    #####:  392:  };
    #####:  393:  if (parser.parseCommaSeparatedList(parseLoopOptions) || parser.parseGreater())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  394:    return {};
        -:  395:
    #####:  396:  llvm::sort(options, llvm::less_first());
call    0 never executed
    #####:  397:  return get(parser.getContext(), options);
call    0 never executed
call    1 never executed
        -:  398:}
