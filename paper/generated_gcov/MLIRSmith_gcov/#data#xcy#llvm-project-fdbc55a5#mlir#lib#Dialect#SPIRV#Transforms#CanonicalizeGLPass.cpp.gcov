        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/SPIRV/Transforms/CanonicalizeGLPass.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/SPIRV/Transforms/CMakeFiles/obj.MLIRSPIRVTransforms.dir/CanonicalizeGLPass.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/SPIRV/Transforms/CMakeFiles/obj.MLIRSPIRVTransforms.dir/CanonicalizeGLPass.cpp.gcda
        -:    0:Runs:116161
        -:    1://===- CanonicalizeGLPass.cpp - GLSL Related Canonicalization Pass ------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/SPIRV/Transforms/Passes.h"
        -:   10:
        -:   11:#include "mlir/Dialect/SPIRV/IR/SPIRVGLCanonicalization.h"
        -:   12:#include "mlir/Dialect/SPIRV/IR/SPIRVOps.h"
        -:   13:#include "mlir/Pass/Pass.h"
        -:   14:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   15:
        -:   16:namespace mlir {
        -:   17:namespace spirv {
        -:   18:#define GEN_PASS_DEF_SPIRVCANONICALIZEGL
        -:   19:#include "mlir/Dialect/SPIRV/Transforms/Passes.h.inc"
        -:   20:} // namespace spirv
        -:   21:} // namespace mlir
        -:   22:
        -:   23:using namespace mlir;
        -:   24:
        -:   25:namespace {
  116701*:   26:class CanonicalizeGLPass final
call    0 never executed
call    1 returned 100%
        -:   27:    : public spirv::impl::SPIRVCanonicalizeGLBase<CanonicalizeGLPass> {
        -:   28:public:
function _ZN12_GLOBAL__N_118CanonicalizeGLPass14runOnOperationEv called 406 returned 100% blocks executed 69%
      406:   29:  void runOnOperation() override {
      812:   30:    RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      406:   31:    spirv::populateSPIRVGLCanonicalizationPatterns(patterns);
call    0 returned 100%
      406:   32:    if (failed(
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
      406:   33:            applyPatternsAndFoldGreedily(getOperation(), std::move(patterns))))
call    0 returned 100%
    #####:   34:      return signalPassFailure();
call    0 never executed
call    1 never executed
        -:   35:  }
        -:   36:};
        -:   37:} // namespace
        -:   38:
function _ZN4mlir5spirv24createCanonicalizeGLPassEv called 116701 returned 100% blocks executed 100%
   116701:   39:std::unique_ptr<OperationPass<>> spirv::createCanonicalizeGLPass() {
   116701:   40:  return std::make_unique<CanonicalizeGLPass>();
call    0 returned 100%
        -:   41:}
