        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/test/lib/Dialect/GPU/TestConvertGPUKernelToHsaco.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/GPU/CMakeFiles/MLIRGPUTestPasses.dir/TestConvertGPUKernelToHsaco.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/GPU/CMakeFiles/MLIRGPUTestPasses.dir/TestConvertGPUKernelToHsaco.cpp.gcda
        -:    0:Runs:116161
        -:    1://===- TestConvertGPUKernelToHsaco.cpp - Test gpu kernel hsaco lowering ---===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/GPU/Transforms/Passes.h"
        -:   10:#include "mlir/Pass/Pass.h"
        -:   11:#include "mlir/Target/LLVMIR/Dialect/ROCDL/ROCDLToLLVMIRTranslation.h"
        -:   12:#include "mlir/Target/LLVMIR/Export.h"
        -:   13:#include "llvm/Support/TargetSelect.h"
        -:   14:
        -:   15:using namespace mlir;
        -:   16:
        -:   17:#if MLIR_ROCM_CONVERSIONS_ENABLED
        -:   18:namespace {
    #####:   19:class TestSerializeToHsacoPass
call    0 never executed
        -:   20:    : public PassWrapper<TestSerializeToHsacoPass, gpu::SerializeToBlobPass> {
        -:   21:public:
function _ZN12_GLOBAL__N_124TestSerializeToHsacoPass13resolveTypeIDEv called 116161 returned 100% blocks executed 100%
   116161:   22:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestSerializeToHsacoPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   23:
function _ZNK12_GLOBAL__N_124TestSerializeToHsacoPass11getArgumentEv called 116161 returned 100% blocks executed 100%
   116161:   24:  StringRef getArgument() const final { return "test-gpu-to-hsaco"; }
function _ZNK12_GLOBAL__N_124TestSerializeToHsacoPass14getDescriptionEv called 116161 returned 100% blocks executed 100%
   116161:   25:  StringRef getDescription() const final {
   116161:   26:    return "Lower GPU kernel function to HSAco binary annotations";
        -:   27:  }
        -:   28:  TestSerializeToHsacoPass();
        -:   29:
        -:   30:private:
        -:   31:  void getDependentDialects(DialectRegistry &registry) const override;
        -:   32:
        -:   33:  // Serializes ROCDL IR to HSACO.
        -:   34:  std::unique_ptr<std::vector<char>>
        -:   35:  serializeISA(const std::string &isa) override;
        -:   36:};
        -:   37:} // namespace
        -:   38:
function _ZN12_GLOBAL__N_124TestSerializeToHsacoPassC2Ev called 116161 returned 100% blocks executed 100%
   116161:   39:TestSerializeToHsacoPass::TestSerializeToHsacoPass() {
call    0 returned 100%
   116161:   40:  this->triple = "amdgcn-amd-amdhsa";
call    0 returned 100%
   116161:   41:  this->chip = "gfx900";
call    0 returned 100%
   116161:   42:}
        -:   43:
function _ZNK12_GLOBAL__N_124TestSerializeToHsacoPass20getDependentDialectsERN4mlir15DialectRegistryE called 0 returned 0% blocks executed 0%
    #####:   44:void TestSerializeToHsacoPass::getDependentDialects(
        -:   45:    DialectRegistry &registry) const {
    #####:   46:  registerROCDLDialectTranslation(registry);
call    0 never executed
    #####:   47:  gpu::SerializeToBlobPass::getDependentDialects(registry);
call    0 never executed
    #####:   48:}
        -:   49:
        -:   50:std::unique_ptr<std::vector<char>>
function _ZN12_GLOBAL__N_124TestSerializeToHsacoPass12serializeISAERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   51:TestSerializeToHsacoPass::serializeISA(const std::string &) {
    #####:   52:  std::string data = "HSACO";
call    0 never executed
    #####:   53:  return std::make_unique<std::vector<char>>(data.begin(), data.end());
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   54:}
        -:   55:
        -:   56:namespace mlir {
        -:   57:namespace test {
        -:   58:// Register test pass to serialize GPU module to a HSAco binary annotation.
function _ZN4mlir4test35registerTestGpuSerializeToHsacoPassEv called 116161 returned 100% blocks executed 100%
   116161:   59:void registerTestGpuSerializeToHsacoPass() {
function _ZZN4mlir4test35registerTestGpuSerializeToHsacoPassEvENKUlvE_clEv.isra.0 called 116161 returned 100% blocks executed 100%
   232322:   60:  PassRegistration<TestSerializeToHsacoPass>([] {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        -:   61:    // Initialize LLVM AMDGPU backend.
   116161:   62:    LLVMInitializeAMDGPUTarget();
call    0 returned 100%
   116161:   63:    LLVMInitializeAMDGPUTargetInfo();
call    0 returned 100%
   116161:   64:    LLVMInitializeAMDGPUTargetMC();
call    0 returned 100%
   116161:   65:    LLVMInitializeAMDGPUAsmPrinter();
call    0 returned 100%
        -:   66:
   116161:   67:    return std::make_unique<TestSerializeToHsacoPass>();
call    0 returned 100%
        -:   68:  });
   116161:   69:}
        -:   70:} // namespace test
        -:   71:} // namespace mlir
        -:   72:#endif // MLIR_ROCM_CONVERSIONS_ENABLED
