        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/test/lib/Dialect/Test/TestTraits.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/Test/CMakeFiles/MLIRTestDialect.dir/TestTraits.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/Test/CMakeFiles/MLIRTestDialect.dir/TestTraits.cpp.gcda
        -:    0:Runs:116163
        -:    1://===- TestTraits.cpp - Test trait folding --------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "TestDialect.h"
        -:   10:#include "mlir/Pass/Pass.h"
        -:   11:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   12:
        -:   13:using namespace mlir;
        -:   14:using namespace test;
        -:   15:
        -:   16://===----------------------------------------------------------------------===//
        -:   17:// Trait Folder.
        -:   18://===----------------------------------------------------------------------===//
        -:   19:
function _ZN4test43TestInvolutionTraitFailingOperationFolderOp4foldEN4llvm8ArrayRefIN4mlir9AttributeEEE called 0 returned 0% blocks executed 0%
    #####:   20:OpFoldResult TestInvolutionTraitFailingOperationFolderOp::fold(
        -:   21:    ArrayRef<Attribute> operands) {
        -:   22:  // This failure should cause the trait fold to run instead.
    #####:   23:  return {};
        -:   24:}
        -:   25:
function _ZN4test45TestInvolutionTraitSuccesfulOperationFolderOp4foldEN4llvm8ArrayRefIN4mlir9AttributeEEE called 0 returned 0% blocks executed 0%
    #####:   26:OpFoldResult TestInvolutionTraitSuccesfulOperationFolderOp::fold(
        -:   27:    ArrayRef<Attribute> operands) {
    #####:   28:  auto argumentOp = getOperand();
call    0 never executed
        -:   29:  // The success case should cause the trait fold to be supressed.
    #####:   30:  return argumentOp.getDefiningOp() ? argumentOp : OpFoldResult{};
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   31:}
        -:   32:
        -:   33:namespace {
   141613:   34:struct TestTraitFolder
call    0 returned 100%
call    1 returned 100%
        -:   35:    : public PassWrapper<TestTraitFolder, OperationPass<func::FuncOp>> {
function _ZN12_GLOBAL__N_115TestTraitFolder13resolveTypeIDEv called 116629 returned 100% blocks executed 100%
   116629:   36:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestTraitFolder)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   37:
function _ZNK12_GLOBAL__N_115TestTraitFolder11getArgumentEv called 116171 returned 100% blocks executed 100%
   116171:   38:  StringRef getArgument() const final { return "test-trait-folder"; }
function _ZNK12_GLOBAL__N_115TestTraitFolder14getDescriptionEv called 116163 returned 100% blocks executed 100%
   116163:   39:  StringRef getDescription() const final { return "Run trait folding"; }
function _ZN12_GLOBAL__N_115TestTraitFolder14runOnOperationEv called 372 returned 100% blocks executed 100%
      372:   40:  void runOnOperation() override {
      371:   41:    (void)applyPatternsAndFoldGreedily(getOperation(),
call    0 returned 100%
      743:   42:                                       RewritePatternSet(&getContext()));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
      371:   43:  }
        -:   44:};
        -:   45:} // namespace
        -:   46:
        -:   47:namespace mlir {
function _ZN4mlir22registerTestTraitsPassEv called 116163 returned 100% blocks executed 100%
   116163:   48:void registerTestTraitsPass() { PassRegistration<TestTraitFolder>(); }
call    0 returned 100%
        -:   49:} // namespace mlir
