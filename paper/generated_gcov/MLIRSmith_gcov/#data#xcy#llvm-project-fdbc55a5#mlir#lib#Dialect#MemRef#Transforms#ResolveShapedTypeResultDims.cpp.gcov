        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/MemRef/Transforms/ResolveShapedTypeResultDims.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/MemRef/Transforms/CMakeFiles/obj.MLIRMemRefTransforms.dir/ResolveShapedTypeResultDims.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/MemRef/Transforms/CMakeFiles/obj.MLIRMemRefTransforms.dir/ResolveShapedTypeResultDims.cpp.gcda
        -:    0:Runs:116161
        -:    1://===- ResolveShapedTypeResultDims.cpp - Resolve dim ops of result values -===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This pass resolves `memref.dim` operations of result values in terms of
        -:   10:// shapes of their operands using the `InferShapedTypeOpInterface`.
        -:   11://
        -:   12://===----------------------------------------------------------------------===//
        -:   13:
        -:   14:#include "mlir/Dialect/MemRef/Transforms/Passes.h"
        -:   15:
        -:   16:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   17:#include "mlir/Dialect/Arith/IR/Arith.h"
        -:   18:#include "mlir/Dialect/MemRef/IR/MemRef.h"
        -:   19:#include "mlir/Dialect/Tensor/IR/Tensor.h"
        -:   20:#include "mlir/Interfaces/InferTypeOpInterface.h"
        -:   21:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   22:
        -:   23:namespace mlir {
        -:   24:namespace memref {
        -:   25:#define GEN_PASS_DEF_RESOLVERANKEDSHAPETYPERESULTDIMS
        -:   26:#define GEN_PASS_DEF_RESOLVESHAPEDTYPERESULTDIMS
        -:   27:#include "mlir/Dialect/MemRef/Transforms/Passes.h.inc"
        -:   28:} // namespace memref
        -:   29:} // namespace mlir
        -:   30:
        -:   31:using namespace mlir;
        -:   32:
        -:   33:namespace {
        -:   34:/// Fold dim of an operation that implements the InferShapedTypeOpInterface
        -:   35:template <typename OpTy>
        -:   36:struct DimOfShapedTypeOpInterface : public OpRewritePattern<OpTy> {
        -:   37:  using OpRewritePattern<OpTy>::OpRewritePattern;
        -:   38:
    #####:   39:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   40:                                PatternRewriter &rewriter) const override {
    #####:   41:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
    #####:   42:    if (!dimValue)
    #####:   43:      return failure();
        -:   44:    auto shapedTypeOp =
    #####:   45:        dyn_cast<InferShapedTypeOpInterface>(dimValue.getOwner());
    #####:   46:    if (!shapedTypeOp)
    #####:   47:      return failure();
        -:   48:
    #####:   49:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
    #####:   50:    if (!dimIndex)
    #####:   51:      return failure();
        -:   52:
    #####:   53:    SmallVector<Value> reifiedResultShapes;
    #####:   54:    if (failed(shapedTypeOp.reifyReturnTypeShapes(
        -:   55:            rewriter, shapedTypeOp->getOperands(), reifiedResultShapes)))
    #####:   56:      return failure();
        -:   57:
    #####:   58:    if (reifiedResultShapes.size() != shapedTypeOp->getNumResults())
    #####:   59:      return failure();
        -:   60:
    #####:   61:    Value resultShape = reifiedResultShapes[dimValue.getResultNumber()];
    #####:   62:    auto resultShapeType = resultShape.getType().dyn_cast<RankedTensorType>();
    #####:   63:    if (!resultShapeType || !resultShapeType.getElementType().isa<IndexType>())
    #####:   64:      return failure();
        -:   65:
    #####:   66:    Location loc = dimOp->getLoc();
    #####:   67:    rewriter.replaceOpWithNewOp<tensor::ExtractOp>(
        -:   68:        dimOp, resultShape,
    #####:   69:        rewriter.createOrFold<arith::ConstantIndexOp>(loc, *dimIndex));
    #####:   70:    return success();
        -:   71:  }
------------------
_ZNK12_GLOBAL__N_126DimOfShapedTypeOpInterfaceIN4mlir6memref5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE:
function _ZNK12_GLOBAL__N_126DimOfShapedTypeOpInterfaceIN4mlir6memref5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   39:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   40:                                PatternRewriter &rewriter) const override {
    #####:   41:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
call    0 never executed
call    1 never executed
    #####:   42:    if (!dimValue)
branch  0 never executed
branch  1 never executed
    #####:   43:      return failure();
        -:   44:    auto shapedTypeOp =
    #####:   45:        dyn_cast<InferShapedTypeOpInterface>(dimValue.getOwner());
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   46:    if (!shapedTypeOp)
branch  0 never executed
branch  1 never executed
    #####:   47:      return failure();
        -:   48:
    #####:   49:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   50:    if (!dimIndex)
branch  0 never executed
branch  1 never executed
    #####:   51:      return failure();
        -:   52:
    #####:   53:    SmallVector<Value> reifiedResultShapes;
    #####:   54:    if (failed(shapedTypeOp.reifyReturnTypeShapes(
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
        -:   55:            rewriter, shapedTypeOp->getOperands(), reifiedResultShapes)))
    #####:   56:      return failure();
        -:   57:
    #####:   58:    if (reifiedResultShapes.size() != shapedTypeOp->getNumResults())
branch  0 never executed
branch  1 never executed
    #####:   59:      return failure();
        -:   60:
    #####:   61:    Value resultShape = reifiedResultShapes[dimValue.getResultNumber()];
branch  0 never executed
branch  1 never executed
    #####:   62:    auto resultShapeType = resultShape.getType().dyn_cast<RankedTensorType>();
call    0 never executed
    #####:   63:    if (!resultShapeType || !resultShapeType.getElementType().isa<IndexType>())
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   64:      return failure();
        -:   65:
    #####:   66:    Location loc = dimOp->getLoc();
branch  0 never executed
branch  1 never executed
    #####:   67:    rewriter.replaceOpWithNewOp<tensor::ExtractOp>(
call    0 never executed
        -:   68:        dimOp, resultShape,
    #####:   69:        rewriter.createOrFold<arith::ConstantIndexOp>(loc, *dimIndex));
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   70:    return success();
branch  0 never executed
branch  1 never executed
        -:   71:  }
------------------
_ZNK12_GLOBAL__N_126DimOfShapedTypeOpInterfaceIN4mlir6tensor5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE:
function _ZNK12_GLOBAL__N_126DimOfShapedTypeOpInterfaceIN4mlir6tensor5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   39:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   40:                                PatternRewriter &rewriter) const override {
    #####:   41:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
call    0 never executed
call    1 never executed
    #####:   42:    if (!dimValue)
branch  0 never executed
branch  1 never executed
    #####:   43:      return failure();
        -:   44:    auto shapedTypeOp =
    #####:   45:        dyn_cast<InferShapedTypeOpInterface>(dimValue.getOwner());
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   46:    if (!shapedTypeOp)
branch  0 never executed
branch  1 never executed
    #####:   47:      return failure();
        -:   48:
    #####:   49:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   50:    if (!dimIndex)
branch  0 never executed
branch  1 never executed
    #####:   51:      return failure();
        -:   52:
    #####:   53:    SmallVector<Value> reifiedResultShapes;
    #####:   54:    if (failed(shapedTypeOp.reifyReturnTypeShapes(
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
        -:   55:            rewriter, shapedTypeOp->getOperands(), reifiedResultShapes)))
    #####:   56:      return failure();
        -:   57:
    #####:   58:    if (reifiedResultShapes.size() != shapedTypeOp->getNumResults())
branch  0 never executed
branch  1 never executed
    #####:   59:      return failure();
        -:   60:
    #####:   61:    Value resultShape = reifiedResultShapes[dimValue.getResultNumber()];
branch  0 never executed
branch  1 never executed
    #####:   62:    auto resultShapeType = resultShape.getType().dyn_cast<RankedTensorType>();
call    0 never executed
    #####:   63:    if (!resultShapeType || !resultShapeType.getElementType().isa<IndexType>())
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   64:      return failure();
        -:   65:
    #####:   66:    Location loc = dimOp->getLoc();
branch  0 never executed
branch  1 never executed
    #####:   67:    rewriter.replaceOpWithNewOp<tensor::ExtractOp>(
call    0 never executed
        -:   68:        dimOp, resultShape,
    #####:   69:        rewriter.createOrFold<arith::ConstantIndexOp>(loc, *dimIndex));
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   70:    return success();
branch  0 never executed
branch  1 never executed
        -:   71:  }
------------------
        -:   72:};
        -:   73:
        -:   74:/// Fold dim of an operation that implements the InferShapedTypeOpInterface
        -:   75:template <typename OpTy>
        -:   76:struct DimOfReifyRankedShapedTypeOpInterface : public OpRewritePattern<OpTy> {
        -:   77:  using OpRewritePattern<OpTy>::OpRewritePattern;
        -:   78:
        -:   79:  void initialize() { OpRewritePattern<OpTy>::setHasBoundedRewriteRecursion(); }
        -:   80:
    #####:   81:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   82:                                PatternRewriter &rewriter) const override {
    #####:   83:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
    #####:   84:    if (!dimValue)
    #####:   85:      return failure();
        -:   86:    auto rankedShapeTypeOp =
    #####:   87:        dyn_cast<ReifyRankedShapedTypeOpInterface>(dimValue.getOwner());
    #####:   88:    if (!rankedShapeTypeOp)
    #####:   89:      return failure();
        -:   90:
    #####:   91:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
    #####:   92:    if (!dimIndex)
    #####:   93:      return failure();
        -:   94:
    #####:   95:    SmallVector<SmallVector<Value>> reifiedResultShapes;
    #####:   96:    if (failed(
        -:   97:            rankedShapeTypeOp.reifyResultShapes(rewriter, reifiedResultShapes)))
    #####:   98:      return failure();
        -:   99:
    #####:  100:    if (reifiedResultShapes.size() != rankedShapeTypeOp->getNumResults())
    #####:  101:      return failure();
        -:  102:
    #####:  103:    unsigned resultNumber = dimValue.getResultNumber();
    #####:  104:    auto sourceType = dimValue.getType().dyn_cast<RankedTensorType>();
    #####:  105:    if (reifiedResultShapes[resultNumber].size() !=
    #####:  106:        static_cast<size_t>(sourceType.getRank()))
    #####:  107:      return failure();
        -:  108:
    #####:  109:    rewriter.replaceOp(dimOp, reifiedResultShapes[resultNumber][*dimIndex]);
    #####:  110:    return success();
        -:  111:  }
------------------
_ZNK12_GLOBAL__N_137DimOfReifyRankedShapedTypeOpInterfaceIN4mlir6memref5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE:
function _ZNK12_GLOBAL__N_137DimOfReifyRankedShapedTypeOpInterfaceIN4mlir6memref5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   81:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   82:                                PatternRewriter &rewriter) const override {
    #####:   83:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
call    0 never executed
call    1 never executed
    #####:   84:    if (!dimValue)
branch  0 never executed
branch  1 never executed
    #####:   85:      return failure();
        -:   86:    auto rankedShapeTypeOp =
    #####:   87:        dyn_cast<ReifyRankedShapedTypeOpInterface>(dimValue.getOwner());
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   88:    if (!rankedShapeTypeOp)
branch  0 never executed
branch  1 never executed
    #####:   89:      return failure();
        -:   90:
    #####:   91:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   92:    if (!dimIndex)
branch  0 never executed
branch  1 never executed
    #####:   93:      return failure();
        -:   94:
    #####:   95:    SmallVector<SmallVector<Value>> reifiedResultShapes;
    #####:   96:    if (failed(
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   97:            rankedShapeTypeOp.reifyResultShapes(rewriter, reifiedResultShapes)))
    #####:   98:      return failure();
        -:   99:
    #####:  100:    if (reifiedResultShapes.size() != rankedShapeTypeOp->getNumResults())
branch  0 never executed
branch  1 never executed
    #####:  101:      return failure();
        -:  102:
    #####:  103:    unsigned resultNumber = dimValue.getResultNumber();
    #####:  104:    auto sourceType = dimValue.getType().dyn_cast<RankedTensorType>();
call    0 never executed
    #####:  105:    if (reifiedResultShapes[resultNumber].size() !=
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  106:        static_cast<size_t>(sourceType.getRank()))
call    0 never executed
    #####:  107:      return failure();
        -:  108:
    #####:  109:    rewriter.replaceOp(dimOp, reifiedResultShapes[resultNumber][*dimIndex]);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
    #####:  110:    return success();
call    0 never executed
        -:  111:  }
------------------
_ZNK12_GLOBAL__N_137DimOfReifyRankedShapedTypeOpInterfaceIN4mlir6tensor5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE:
function _ZNK12_GLOBAL__N_137DimOfReifyRankedShapedTypeOpInterfaceIN4mlir6tensor5DimOpEE15matchAndRewriteES3_RNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   81:  LogicalResult matchAndRewrite(OpTy dimOp,
        -:   82:                                PatternRewriter &rewriter) const override {
    #####:   83:    OpResult dimValue = dimOp.getSource().template dyn_cast<OpResult>();
call    0 never executed
call    1 never executed
    #####:   84:    if (!dimValue)
branch  0 never executed
branch  1 never executed
    #####:   85:      return failure();
        -:   86:    auto rankedShapeTypeOp =
    #####:   87:        dyn_cast<ReifyRankedShapedTypeOpInterface>(dimValue.getOwner());
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   88:    if (!rankedShapeTypeOp)
branch  0 never executed
branch  1 never executed
    #####:   89:      return failure();
        -:   90:
    #####:   91:    Optional<int64_t> dimIndex = dimOp.getConstantIndex();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   92:    if (!dimIndex)
branch  0 never executed
branch  1 never executed
    #####:   93:      return failure();
        -:   94:
    #####:   95:    SmallVector<SmallVector<Value>> reifiedResultShapes;
    #####:   96:    if (failed(
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   97:            rankedShapeTypeOp.reifyResultShapes(rewriter, reifiedResultShapes)))
    #####:   98:      return failure();
        -:   99:
    #####:  100:    if (reifiedResultShapes.size() != rankedShapeTypeOp->getNumResults())
branch  0 never executed
branch  1 never executed
    #####:  101:      return failure();
        -:  102:
    #####:  103:    unsigned resultNumber = dimValue.getResultNumber();
    #####:  104:    auto sourceType = dimValue.getType().dyn_cast<RankedTensorType>();
call    0 never executed
    #####:  105:    if (reifiedResultShapes[resultNumber].size() !=
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  106:        static_cast<size_t>(sourceType.getRank()))
call    0 never executed
    #####:  107:      return failure();
        -:  108:
    #####:  109:    rewriter.replaceOp(dimOp, reifiedResultShapes[resultNumber][*dimIndex]);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
    #####:  110:    return success();
call    0 never executed
        -:  111:  }
------------------
        -:  112:};
        -:  113:} // namespace
        -:  114:
        -:  115://===----------------------------------------------------------------------===//
        -:  116:// Pass registration
        -:  117://===----------------------------------------------------------------------===//
        -:  118:
        -:  119:namespace {
  116711*:  120:struct ResolveRankedShapeTypeResultDimsPass final
call    0 never executed
call    1 returned 100%
        -:  121:    : public memref::impl::ResolveRankedShapeTypeResultDimsBase<
        -:  122:          ResolveRankedShapeTypeResultDimsPass> {
        -:  123:  void runOnOperation() override;
        -:  124:};
        -:  125:
  116690*:  126:struct ResolveShapedTypeResultDimsPass final
call    0 never executed
call    1 returned 100%
        -:  127:    : public memref::impl::ResolveShapedTypeResultDimsBase<
        -:  128:          ResolveShapedTypeResultDimsPass> {
        -:  129:  void runOnOperation() override;
        -:  130:};
        -:  131:
        -:  132:} // namespace
        -:  133:
function _ZN4mlir6memref48populateResolveRankedShapeTypeResultDimsPatternsERNS_17RewritePatternSetE called 0 returned 0% blocks executed 0%
     835*:  134:void memref::populateResolveRankedShapeTypeResultDimsPatterns(
        -:  135:    RewritePatternSet &patterns) {
     835*:  136:  patterns.add<DimOfReifyRankedShapedTypeOpInterface<memref::DimOp>,
        -:  137:               DimOfReifyRankedShapedTypeOpInterface<tensor::DimOp>>(
    #####:  138:      patterns.getContext());
call    0 never executed
    #####:  139:}
        -:  140:
function _ZN4mlir6memref43populateResolveShapedTypeResultDimsPatternsERNS_17RewritePatternSetE called 0 returned 0% blocks executed 0%
     417*:  141:void memref::populateResolveShapedTypeResultDimsPatterns(
        -:  142:    RewritePatternSet &patterns) {
        -:  143:  // TODO: Move tensor::DimOp pattern to the Tensor dialect.
     417*:  144:  patterns.add<DimOfShapedTypeOpInterface<memref::DimOp>,
        -:  145:               DimOfShapedTypeOpInterface<tensor::DimOp>>(
    #####:  146:      patterns.getContext());
call    0 never executed
    #####:  147:}
        -:  148:
function _ZN12_GLOBAL__N_136ResolveRankedShapeTypeResultDimsPass14runOnOperationEv called 418 returned 100% blocks executed 72%
      418:  149:void ResolveRankedShapeTypeResultDimsPass::runOnOperation() {
      836:  150:  RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      418:  151:  memref::populateResolveRankedShapeTypeResultDimsPatterns(patterns);
call    0 returned 100%
      836:  152:  if (failed(applyPatternsAndFoldGreedily(getOperation()->getRegions(),
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
      418:  153:                                          std::move(patterns))))
call    0 returned 100%
    #####:  154:    return signalPassFailure();
call    0 never executed
call    1 never executed
        -:  155:}
        -:  156:
function _ZN12_GLOBAL__N_131ResolveShapedTypeResultDimsPass14runOnOperationEv called 417 returned 100% blocks executed 74%
      417:  157:void ResolveShapedTypeResultDimsPass::runOnOperation() {
      834:  158:  RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      417:  159:  memref::populateResolveRankedShapeTypeResultDimsPatterns(patterns);
call    0 returned 100%
      417:  160:  memref::populateResolveShapedTypeResultDimsPatterns(patterns);
call    0 returned 100%
      834:  161:  if (failed(applyPatternsAndFoldGreedily(getOperation()->getRegions(),
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
      417:  162:                                          std::move(patterns))))
call    0 returned 100%
    #####:  163:    return signalPassFailure();
call    0 never executed
call    1 never executed
        -:  164:}
        -:  165:
function _ZN4mlir6memref37createResolveShapedTypeResultDimsPassEv called 116690 returned 100% blocks executed 100%
   116690:  166:std::unique_ptr<Pass> memref::createResolveShapedTypeResultDimsPass() {
   116690:  167:  return std::make_unique<ResolveShapedTypeResultDimsPass>();
call    0 returned 100%
        -:  168:}
        -:  169:
function _ZN4mlir6memref42createResolveRankedShapeTypeResultDimsPassEv called 116711 returned 100% blocks executed 100%
   116711:  170:std::unique_ptr<Pass> memref::createResolveRankedShapeTypeResultDimsPass() {
   116711:  171:  return std::make_unique<ResolveRankedShapeTypeResultDimsPass>();
call    0 returned 100%
        -:  172:}
