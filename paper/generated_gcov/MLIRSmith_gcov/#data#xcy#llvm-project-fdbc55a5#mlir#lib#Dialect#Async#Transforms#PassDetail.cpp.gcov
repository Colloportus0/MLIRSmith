        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/Async/Transforms/PassDetail.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Async/Transforms/CMakeFiles/obj.MLIRAsyncTransforms.dir/PassDetail.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Async/Transforms/CMakeFiles/obj.MLIRAsyncTransforms.dir/PassDetail.cpp.gcda
        -:    0:Runs:116157
        -:    1://===- PassDetail.cpp - Async Pass class details ----------------*- C++ -*-===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "PassDetail.h"
        -:   10:#include "mlir/IR/Builders.h"
        -:   11:#include "mlir/Transforms/RegionUtils.h"
        -:   12:
        -:   13:using namespace mlir;
        -:   14:
function _ZN4mlir5async27cloneConstantsIntoTheRegionERNS_6RegionE called 6 returned 100% blocks executed 100%
        6:   15:void mlir::async::cloneConstantsIntoTheRegion(Region &region) {
        6:   16:  OpBuilder builder(&region);
call    0 returned 100%
        6:   17:  cloneConstantsIntoTheRegion(region, builder);
call    0 returned 100%
        6:   18:}
        -:   19:
function _ZN4mlir5async27cloneConstantsIntoTheRegionERNS_6RegionERNS_9OpBuilderE called 419 returned 100% blocks executed 96%
      419:   20:void mlir::async::cloneConstantsIntoTheRegion(Region &region,
        -:   21:                                              OpBuilder &builder) {
        -:   22:  // Values implicitly captured by the region.
      419:   23:  llvm::SetVector<Value> captures;
call    0 returned 100%
      419:   24:  getUsedValuesDefinedAbove(region, region, captures);
call    0 returned 100%
        -:   25:
      838:   26:  OpBuilder::InsertionGuard guard(builder);
call    0 returned 100%
call    1 returned 100%
      419:   27:  builder.setInsertionPointToStart(&region.front());
call    0 returned 100%
        -:   28:
        -:   29:  // Clone ConstantLike operations into the region.
    15537:   30:  for (Value capture : captures) {
branch  0 taken 97% (fallthrough)
branch  1 taken 3%
call    2 returned 100%
    15118:   31:    Operation *op = capture.getDefiningOp();
call    0 returned 100%
    29989:   32:    if (!op || !op->hasTrait<OpTrait::ConstantLike>())
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
branch  2 taken 48% (fallthrough)
branch  3 taken 52%
     7333:   33:      continue;
        -:   34:
     7785:   35:    Operation *cloned = builder.clone(*op);
call    0 returned 100%
        -:   36:
    31140:   37:    for (auto tuple : llvm::zip(op->getResults(), cloned->getResults())) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 50% (fallthrough)
branch  5 taken 50%
     7785:   38:      Value orig = std::get<0>(tuple);
call    0 returned 100%
     7785:   39:      Value replacement = std::get<1>(tuple);
call    0 returned 100%
     7785:   40:      replaceAllUsesInRegionWith(orig, replacement, region);
call    0 returned 100%
        -:   41:    }
        -:   42:  }
      419:   43:}
