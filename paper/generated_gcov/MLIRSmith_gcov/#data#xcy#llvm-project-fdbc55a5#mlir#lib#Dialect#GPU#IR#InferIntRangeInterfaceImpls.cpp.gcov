        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/GPU/IR/InferIntRangeInterfaceImpls.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/GPU/CMakeFiles/obj.MLIRGPUOps.dir/IR/InferIntRangeInterfaceImpls.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/GPU/CMakeFiles/obj.MLIRGPUOps.dir/IR/InferIntRangeInterfaceImpls.cpp.gcda
        -:    0:Runs:116158
        -:    1://===- InferIntRangeInterfaceImpls.cpp - Integer range impls for gpu -===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/GPU/IR/GPUDialect.h"
        -:   10:#include "mlir/Interfaces/InferIntRangeInterface.h"
        -:   11:
        -:   12:using namespace mlir;
        -:   13:using namespace mlir::gpu;
        -:   14:
        -:   15:// Maximum grid and block dimensions of all known GPUs are less than 2^32.
        -:   16:static constexpr uint64_t kMaxDim = std::numeric_limits<uint32_t>::max();
        -:   17:// Maximum subgroups are no larger than 128.
        -:   18:static constexpr uint64_t kMaxSubgroupSize = 128;
        -:   19:
function _ZL13getIndexRangemm called 0 returned 0% blocks executed 0%
    #####:   20:static ConstantIntRanges getIndexRange(uint64_t umin, uint64_t umax) {
    #####:   21:  unsigned width = IndexType::kInternalStorageBitWidth;
    #####:   22:  return ConstantIntRanges::fromUnsigned(APInt(width, umin),
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   23:                                         APInt(width, umax));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   24:}
        -:   25:
function _ZN4mlir3gpu10BlockDimOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   26:void BlockDimOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   27:                                   SetIntRangeFn setResultRange) {
    #####:   28:  setResultRange(getResult(), getIndexRange(1, kMaxDim));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   29:}
        -:   30:
function _ZN4mlir3gpu9BlockIdOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   31:void BlockIdOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   32:                                  SetIntRangeFn setResultRange) {
    #####:   33:  setResultRange(getResult(), getIndexRange(0, kMaxDim - 1));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   34:}
        -:   35:
function _ZN4mlir3gpu9GridDimOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   36:void GridDimOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   37:                                  SetIntRangeFn setResultRange) {
    #####:   38:  setResultRange(getResult(), getIndexRange(1, kMaxDim));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   39:}
        -:   40:
function _ZN4mlir3gpu10ThreadIdOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   41:void ThreadIdOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   42:                                   SetIntRangeFn setResultRange) {
    #####:   43:  setResultRange(getResult(), getIndexRange(0, kMaxDim - 1));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   44:}
        -:   45:
function _ZN4mlir3gpu8LaneIdOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   46:void LaneIdOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   47:                                 SetIntRangeFn setResultRange) {
    #####:   48:  setResultRange(getResult(), getIndexRange(0, kMaxSubgroupSize - 1));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   49:}
        -:   50:
function _ZN4mlir3gpu12SubgroupIdOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   51:void SubgroupIdOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   52:                                     SetIntRangeFn setResultRange) {
    #####:   53:  setResultRange(getResult(), getIndexRange(0, kMaxDim - 1));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   54:}
        -:   55:
function _ZN4mlir3gpu10GlobalIdOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   56:void GlobalIdOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   57:                                   SetIntRangeFn setResultRange) {
    #####:   58:  setResultRange(getResult(),
call    0 never executed
    #####:   59:                 getIndexRange(0, std::numeric_limits<int64_t>::max()));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   60:}
        -:   61:
function _ZN4mlir3gpu14NumSubgroupsOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   62:void NumSubgroupsOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   63:                                       SetIntRangeFn setResultRange) {
    #####:   64:  setResultRange(getResult(), getIndexRange(1, kMaxDim));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   65:}
        -:   66:
function _ZN4mlir3gpu14SubgroupSizeOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   67:void SubgroupSizeOp::inferResultRanges(ArrayRef<ConstantIntRanges>,
        -:   68:                                       SetIntRangeFn setResultRange) {
    #####:   69:  setResultRange(getResult(), getIndexRange(1, kMaxSubgroupSize));
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   70:}
        -:   71:
function _ZN4mlir3gpu8LaunchOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEE called 0 returned 0% blocks executed 0%
    #####:   72:void LaunchOp::inferResultRanges(ArrayRef<ConstantIntRanges> argRanges,
        -:   73:                                 SetIntRangeFn setResultRange) {
function _ZZN4mlir3gpu8LaunchOp17inferResultRangesEN4llvm8ArrayRefINS_17ConstantIntRangesEEENS2_12function_refIFvNS_5ValueERKS4_EEEENKUlS9_S7_S7_E_clES9_S7_S7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   74:  auto setRange = [&](const ConstantIntRanges &argRange, Value dimResult,
        -:   75:                      Value idxResult) {
    #####:   76:    if (argRange.umin().getBitWidth() != IndexType::kInternalStorageBitWidth)
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   77:      return;
    #####:   78:    ConstantIntRanges dimRange =
    #####:   79:        argRange.intersection(getIndexRange(1, kMaxDim));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   80:    setResultRange(dimResult, dimRange);
call    0 never executed
    #####:   81:    ConstantIntRanges idxRange =
    #####:   82:        getIndexRange(0, dimRange.umax().getZExtValue() - 1);
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   83:    setResultRange(idxResult, idxRange);
call    0 never executed
call    1 never executed
    #####:   84:  };
        -:   85:
    #####:   86:  argRanges = argRanges.drop_front(getAsyncDependencies().size());
call    0 never executed
call    1 never executed
    #####:   87:  KernelDim3 gridDims = getGridSize();
call    0 never executed
    #####:   88:  KernelDim3 blockIds = getBlockIds();
call    0 never executed
    #####:   89:  setRange(argRanges[0], gridDims.x, blockIds.x);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   90:  setRange(argRanges[1], gridDims.y, blockIds.y);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   91:  setRange(argRanges[2], gridDims.z, blockIds.z);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   92:  KernelDim3 blockDims = getBlockSize();
call    0 never executed
    #####:   93:  KernelDim3 threadIds = getThreadIds();
call    0 never executed
    #####:   94:  setRange(argRanges[3], blockDims.x, threadIds.x);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   95:  setRange(argRanges[4], blockDims.y, threadIds.y);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   96:  setRange(argRanges[5], blockDims.z, threadIds.z);
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   97:}
