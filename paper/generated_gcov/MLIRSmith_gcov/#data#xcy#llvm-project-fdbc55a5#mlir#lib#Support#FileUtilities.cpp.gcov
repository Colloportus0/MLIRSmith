        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Support/FileUtilities.cpp
        -:    0:Graph:../tools/mlir/lib/Support/CMakeFiles/obj.MLIRSupport.dir/FileUtilities.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Support/CMakeFiles/obj.MLIRSupport.dir/FileUtilities.cpp.gcda
        -:    0:Runs:116163
        -:    1://===- FileUtilities.cpp - utilities for working with files ---------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// Definitions of common utilities for working with files.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Support/FileUtilities.h"
        -:   14:#include "mlir/Support/LLVM.h"
        -:   15:#include "llvm/Support/FileUtilities.h"
        -:   16:#include "llvm/Support/MemoryBuffer.h"
        -:   17:#include "llvm/Support/ToolOutputFile.h"
        -:   18:
        -:   19:using namespace mlir;
        -:   20:
        -:   21:std::unique_ptr<llvm::MemoryBuffer>
function _ZN4mlir13openInputFileEN4llvm9StringRefEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 94572 returned 100% blocks executed 25%
    94572:   22:mlir::openInputFile(StringRef inputFilename, std::string *errorMessage) {
    94572:   23:  auto fileOrErr = llvm::MemoryBuffer::getFileOrSTDIN(inputFilename);
call    0 returned 100%
call    1 returned 100%
   189144:   24:  if (std::error_code error = fileOrErr.getError()) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:   25:    if (errorMessage)
branch  0 never executed
branch  1 never executed
    #####:   26:      *errorMessage = "cannot open input file '" + inputFilename.str() +
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
    #####:   27:                      "': " + error.message();
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:   28:    return nullptr;
        -:   29:  }
        -:   30:
    94572:   31:  return std::move(*fileOrErr);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        -:   32:}
        -:   33:
        -:   34:std::unique_ptr<llvm::ToolOutputFile>
function _ZN4mlir14openOutputFileEN4llvm9StringRefEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 94975 returned 100% blocks executed 16%
    94975:   35:mlir::openOutputFile(StringRef outputFilename, std::string *errorMessage) {
    94975:   36:  std::error_code error;
call    0 returned 100%
    94975:   37:  auto result = std::make_unique<llvm::ToolOutputFile>(outputFilename, error,
    94975:   38:                                                       llvm::sys::fs::OF_None);
call    0 returned 100%
    94975:   39:  if (error) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   40:    if (errorMessage)
branch  0 never executed
branch  1 never executed
    #####:   41:      *errorMessage = "cannot open output file '" + outputFilename.str() +
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
    #####:   42:                      "': " + error.message();
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:   43:    return nullptr;
        -:   44:  }
        -:   45:
    94975:   46:  return result;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   47:}
