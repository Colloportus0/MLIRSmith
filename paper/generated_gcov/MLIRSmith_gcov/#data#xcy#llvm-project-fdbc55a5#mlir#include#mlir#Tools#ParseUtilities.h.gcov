        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/include/mlir/Tools/ParseUtilities.h
        -:    0:Graph:../tools/mlir/lib/Tools/mlir-opt/CMakeFiles/obj.MLIROptLib.dir/MlirOptMain.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Tools/mlir-opt/CMakeFiles/obj.MLIROptLib.dir/MlirOptMain.cpp.gcda
        -:    0:Runs:116163
        -:    1://===- ParseUtilities.h - MLIR Tool Parse Utilities -------------*- C++ -*-===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file containts common utilities for implementing the file-parsing
        -:   10:// behaviour for MLIR tools.
        -:   11://
        -:   12://===----------------------------------------------------------------------===//
        -:   13:
        -:   14:#ifndef MLIR_TOOLS_PARSEUTILITIES_H
        -:   15:#define MLIR_TOOLS_PARSEUTILITIES_H
        -:   16:
        -:   17:#include "mlir/IR/BuiltinOps.h"
        -:   18:#include "mlir/Parser/Parser.h"
        -:   19:
        -:   20:namespace mlir {
        -:   21:/// This parses the file specified by the indicated SourceMgr. If parsing was
        -:   22:/// not successful, null is returned and an error message is emitted through the
        -:   23:/// error handler registered in the context.
        -:   24:/// If 'insertImplicitModule' is true a top-level 'builtin.module' op will be
        -:   25:/// inserted that contains the parsed IR, unless one exists already.
        -:   26:inline OwningOpRef<Operation *>
function _ZN4mlir22parseSourceFileForToolERN4llvm9SourceMgrERKNS_12ParserConfigEb called 94572 returned 100% blocks executed 100%
    94572:   27:parseSourceFileForTool(llvm::SourceMgr &sourceMgr, const ParserConfig &config,
        -:   28:                       bool insertImplicitModule) {
    94572:   29:  if (insertImplicitModule) {
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -:   30:    // TODO: Move implicit module logic out of 'parseSourceFile' and into here.
    93972:   31:    return parseSourceFile<ModuleOp>(sourceMgr, config);
call    0 returned 100%
        -:   32:  }
      600:   33:  return parseSourceFile(sourceMgr, config);
call    0 returned 100%
        -:   34:}
        -:   35:} // namespace mlir
        -:   36:
        -:   37:#endif // MLIR_TOOLS_PARSEUTILITIES_H
