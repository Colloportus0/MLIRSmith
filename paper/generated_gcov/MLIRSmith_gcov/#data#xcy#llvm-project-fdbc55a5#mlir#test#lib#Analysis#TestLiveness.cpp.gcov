        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/test/lib/Analysis/TestLiveness.cpp
        -:    0:Graph:../tools/mlir/test/lib/Analysis/CMakeFiles/MLIRTestAnalysis.dir/TestLiveness.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Analysis/CMakeFiles/MLIRTestAnalysis.dir/TestLiveness.cpp.gcda
        -:    0:Runs:116161
        -:    1://===- TestLiveness.cpp - Test liveness construction and information ------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file contains test passes for constructing and resolving liveness
        -:   10:// information.
        -:   11://
        -:   12://===----------------------------------------------------------------------===//
        -:   13:
        -:   14:#include "mlir/Analysis/Liveness.h"
        -:   15:#include "mlir/IR/SymbolTable.h"
        -:   16:#include "mlir/Pass/Pass.h"
        -:   17:
        -:   18:using namespace mlir;
        -:   19:
        -:   20:namespace {
        -:   21:
  116161*:   22:struct TestLivenessPass
call    0 never executed
call    1 returned 100%
        -:   23:    : public PassWrapper<TestLivenessPass, InterfacePass<SymbolOpInterface>> {
function _ZN12_GLOBAL__N_116TestLivenessPass13resolveTypeIDEv called 116161 returned 100% blocks executed 100%
   116161:   24:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestLivenessPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   25:
function _ZNK12_GLOBAL__N_116TestLivenessPass11getArgumentEv called 116161 returned 100% blocks executed 100%
   116161:   26:  StringRef getArgument() const final { return "test-print-liveness"; }
function _ZNK12_GLOBAL__N_116TestLivenessPass14getDescriptionEv called 116161 returned 100% blocks executed 100%
   116161:   27:  StringRef getDescription() const final {
   116161:   28:    return "Print the contents of a constructed liveness information.";
        -:   29:  }
function _ZN12_GLOBAL__N_116TestLivenessPass14runOnOperationEv called 0 returned 0% blocks executed 0%
    #####:   30:  void runOnOperation() override {
    #####:   31:    llvm::errs() << "Testing : " << getOperation().getName() << "\n";
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
    #####:   32:    getAnalysis<Liveness>().print(llvm::errs());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   33:  }
        -:   34:};
        -:   35:
        -:   36:} // namespace
        -:   37:
        -:   38:namespace mlir {
        -:   39:namespace test {
function _ZN4mlir4test24registerTestLivenessPassEv called 116161 returned 100% blocks executed 100%
   116161:   40:void registerTestLivenessPass() { PassRegistration<TestLivenessPass>(); }
call    0 returned 100%
        -:   41:} // namespace test
        -:   42:} // namespace mlir
