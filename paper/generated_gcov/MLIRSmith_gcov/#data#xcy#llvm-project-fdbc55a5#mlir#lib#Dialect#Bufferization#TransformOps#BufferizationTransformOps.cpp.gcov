        -:    0:Source:/data/xcy/llvm-project-fdbc55a5/mlir/lib/Dialect/Bufferization/TransformOps/BufferizationTransformOps.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Bufferization/TransformOps/CMakeFiles/obj.MLIRBufferizationTransformOps.dir/BufferizationTransformOps.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Bufferization/TransformOps/CMakeFiles/obj.MLIRBufferizationTransformOps.dir/BufferizationTransformOps.cpp.gcda
        -:    0:Runs:116157
        -:    1://===- BufferizationTransformOps.h - Bufferization transform ops ----------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/Bufferization/TransformOps/BufferizationTransformOps.h"
        -:   10:
        -:   11:#include "mlir/Dialect/Bufferization/IR/Bufferization.h"
        -:   12:#include "mlir/Dialect/Bufferization/Transforms/OneShotAnalysis.h"
        -:   13:#include "mlir/Dialect/Bufferization/Transforms/OneShotModuleBufferize.h"
        -:   14:#include "mlir/Dialect/MemRef/IR/MemRef.h"
        -:   15:#include "mlir/Dialect/PDL/IR/PDL.h"
        -:   16:#include "mlir/Dialect/PDL/IR/PDLTypes.h"
        -:   17:#include "mlir/Dialect/Transform/IR/TransformDialect.h"
        -:   18:
        -:   19:using namespace mlir;
        -:   20:using namespace mlir::bufferization;
        -:   21:using namespace mlir::transform;
        -:   22:
        -:   23://===----------------------------------------------------------------------===//
        -:   24:// OneShotBufferizeOp
        -:   25://===----------------------------------------------------------------------===//
        -:   26:
        -:   27:DiagnosedSilenceableFailure
function _ZN4mlir9transform18OneShotBufferizeOp5applyERNS0_16TransformResultsERNS0_14TransformStateE called 0 returned 0% blocks executed 0%
    #####:   28:transform::OneShotBufferizeOp::apply(TransformResults &transformResults,
        -:   29:                                     TransformState &state) {
    #####:   30:  OneShotBufferizationOptions options;
call    0 never executed
    #####:   31:  options.allowReturnAllocs = getAllowReturnAllocs();
call    0 never executed
    #####:   32:  options.allowUnknownOps = getAllowUnknownOps();
call    0 never executed
    #####:   33:  options.bufferizeFunctionBoundaries = getBufferizeFunctionBoundaries();
call    0 never executed
    #####:   34:  options.createDeallocs = getCreateDeallocs();
call    0 never executed
    #####:   35:  options.testAnalysisOnly = getTestAnalysisOnly();
call    0 never executed
    #####:   36:  options.printConflicts = getPrintConflicts();
call    0 never executed
        -:   37:
    #####:   38:  ArrayRef<Operation *> payloadOps = state.getPayloadOps(getTarget());
call    0 never executed
call    1 never executed
    #####:   39:  for (Operation *target : payloadOps) {
branch  0 never executed
branch  1 never executed
    #####:   40:    auto moduleOp = dyn_cast<ModuleOp>(target);
call    0 never executed
    #####:   41:    if (getTargetIsModule() && !moduleOp)
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:   42:      return emitSilenceableError() << "expected ModuleOp target";
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
    #####:   43:    if (options.bufferizeFunctionBoundaries) {
branch  0 never executed
branch  1 never executed
    #####:   44:      if (!moduleOp)
branch  0 never executed
branch  1 never executed
    #####:   45:        return emitSilenceableError() << "expected ModuleOp target";
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
    #####:   46:      if (failed(bufferization::runOneShotModuleBufferize(moduleOp, options)))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   47:        return emitSilenceableError() << "bufferization failed";
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:   48:    } else {
    #####:   49:      if (failed(bufferization::runOneShotBufferize(target, options)))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   50:        return emitSilenceableError() << "bufferization failed";
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:   51:    }
        -:   52:  }
        -:   53:
    #####:   54:  return DiagnosedSilenceableFailure::success();
        -:   55:}
        -:   56:
function _ZN4mlir9transform18OneShotBufferizeOp10getEffectsERN4llvm15SmallVectorImplINS_11SideEffects14EffectInstanceINS_13MemoryEffects6EffectEEEEE called 0 returned 0% blocks executed 0%
    #####:   57:void transform::OneShotBufferizeOp::getEffects(
        -:   58:    SmallVectorImpl<MemoryEffects::EffectInstance> &effects) {
    #####:   59:  effects.emplace_back(MemoryEffects::Read::get(), getTarget(),
    #####:   60:                       TransformMappingResource::get());
call    0 never executed
call    1 never executed
call    2 never executed
        -:   61:
        -:   62:  // Handles that are not modules are not longer usable.
    #####:   63:  if (!getTargetIsModule())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   64:    effects.emplace_back(MemoryEffects::Free::get(), getTarget(),
    #####:   65:                         TransformMappingResource::get());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   66:}
        -:   67://===----------------------------------------------------------------------===//
        -:   68:// Transform op registration
        -:   69://===----------------------------------------------------------------------===//
        -:   70:
        -:   71:namespace {
        -:   72:/// Registers new ops and declares PDL as dependent dialect since the additional
        -:   73:/// ops are using PDL types for operands and results.
   210726:   74:class BufferizationTransformDialectExtension
call    0 returned 100%
call    1 returned 100%
        -:   75:    : public transform::TransformDialectExtension<
        -:   76:          BufferizationTransformDialectExtension> {
        -:   77:public:
        -:   78:  using Base::Base;
        -:   79:
function _ZN12_GLOBAL__N_138BufferizationTransformDialectExtension4initEv called 116157 returned 100% blocks executed 100%
   116157:   80:  void init() {
   116157:   81:    declareDependentDialect<pdl::PDLDialect>();
call    0 returned 100%
        -:   82:
   116157:   83:    declareGeneratedDialect<bufferization::BufferizationDialect>();
call    0 returned 100%
   116157:   84:    declareGeneratedDialect<memref::MemRefDialect>();
call    0 returned 100%
        -:   85:
   116157:   86:    registerTransformOps<
        -:   87:#define GET_OP_LIST
        -:   88:#include "mlir/Dialect/Bufferization/TransformOps/BufferizationTransformOps.cpp.inc"
   116157:   89:        >();
call    0 returned 100%
   116157:   90:  }
        -:   91:};
        -:   92:} // namespace
        -:   93:
        -:   94:#define GET_OP_CLASSES
        -:   95:#include "mlir/Dialect/Bufferization/TransformOps/BufferizationTransformOps.cpp.inc"
        -:   96:
function _ZN4mlir13bufferization33registerTransformDialectExtensionERNS_15DialectRegistryE called 116157 returned 100% blocks executed 100%
   116157:   97:void mlir::bufferization::registerTransformDialectExtension(
        -:   98:    DialectRegistry &registry) {
   116157:   99:  registry.addExtensions<BufferizationTransformDialectExtension>();
call    0 returned 100%
   116157:  100:}
