        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Conversion/TosaToTensor/TosaToTensorPass.cpp
        -:    0:Graph:../tools/mlir/lib/Conversion/TosaToTensor/CMakeFiles/obj.MLIRTosaToTensor.dir/TosaToTensorPass.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Conversion/TosaToTensor/CMakeFiles/obj.MLIRTosaToTensor.dir/TosaToTensorPass.cpp.gcda
        -:    0:Runs:128636
        -:    1://===- TosaToTensorPass.cpp - Lowering Tosa to Tensor Dialect -------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This transformation pass legalizes Tosa operations to the Tensor dialect.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Conversion/TosaToTensor/TosaToTensor.h"
        -:   14:
        -:   15:#include "mlir/Dialect/Arith/IR/Arith.h"
        -:   16:#include "mlir/Dialect/Tensor/IR/Tensor.h"
        -:   17:#include "mlir/Dialect/Tosa/IR/TosaOps.h"
        -:   18:#include "mlir/Dialect/Tosa/Transforms/Passes.h"
        -:   19:#include "mlir/IR/PatternMatch.h"
        -:   20:#include "mlir/Pass/PassManager.h"
        -:   21:#include "mlir/Transforms/DialectConversion.h"
        -:   22:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   23:
        -:   24:namespace mlir {
        -:   25:#define GEN_PASS_DEF_TOSATOTENSOR
        -:   26:#include "mlir/Conversion/Passes.h.inc"
        -:   27:} // namespace mlir
        -:   28:
        -:   29:using namespace mlir;
        -:   30:using namespace tosa;
        -:   31:
        -:   32:namespace {
  129208*:   33:struct TosaToTensor : public impl::TosaToTensorBase<TosaToTensor> {
call    0 never executed
call    1 returned 100%
        -:   34:public:
function _ZN12_GLOBAL__N_112TosaToTensor14runOnOperationEv called 494 returned 100% blocks executed 89%
      494:   35:  void runOnOperation() override {
      494:   36:    RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      988:   37:    ConversionTarget target(getContext());
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
      494:   38:    target.addIllegalOp<tosa::SliceOp>();
call    0 returned 100%
      494:   39:    target.addLegalDialect<arith::ArithDialect>();
call    0 returned 100%
      494:   40:    target.addLegalDialect<tensor::TensorDialect>();
call    0 returned 100%
        -:   41:
      494:   42:    mlir::tosa::populateTosaToTensorConversionPatterns(&patterns);
call    0 returned 100%
        -:   43:
      988:   44:    if (failed(applyPartialConversion(getOperation(), target,
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
      494:   45:                                      std::move(patterns))))
call    0 returned 100%
    #####:   46:      signalPassFailure();
call    0 never executed
      494:   47:  }
        -:   48:};
        -:   49:} // namespace
        -:   50:
function _ZN4mlir4tosa18createTosaToTensorEv called 129208 returned 100% blocks executed 100%
   129208:   51:std::unique_ptr<Pass> mlir::tosa::createTosaToTensor() {
   129208:   52:  return std::make_unique<TosaToTensor>();
call    0 returned 100%
        -:   53:}
