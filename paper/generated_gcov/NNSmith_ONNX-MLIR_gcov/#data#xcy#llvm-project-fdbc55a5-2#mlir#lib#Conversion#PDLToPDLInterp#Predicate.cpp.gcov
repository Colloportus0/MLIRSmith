        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Conversion/PDLToPDLInterp/Predicate.cpp
        -:    0:Graph:../tools/mlir/lib/Conversion/PDLToPDLInterp/CMakeFiles/obj.MLIRPDLToPDLInterp.dir/Predicate.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Conversion/PDLToPDLInterp/CMakeFiles/obj.MLIRPDLToPDLInterp.dir/Predicate.cpp.gcda
        -:    0:Runs:128636
        -:    1://===- Predicate.cpp - Pattern predicates ---------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "Predicate.h"
        -:   10:
        -:   11:using namespace mlir;
        -:   12:using namespace mlir::pdl_to_pdl_interp;
        -:   13:
        -:   14://===----------------------------------------------------------------------===//
        -:   15:// Positions
        -:   16://===----------------------------------------------------------------------===//
        -:   17:
        -:   18:Position::~Position() = default;
        -:   19:
        -:   20:/// Returns the depth of the first ancestor operation position.
function _ZNK4mlir17pdl_to_pdl_interp8Position17getOperationDepthEv called 1546 returned 100% blocks executed 67%
     1546:   21:unsigned Position::getOperationDepth() const {
    1546*:   22:  if (const auto *operationPos = dyn_cast<OperationPosition>(this))
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     1546:   23:    return operationPos->getDepth();
    #####:   24:  return parent ? parent->getOperationDepth() : 0;
branch  0 never executed
branch  1 never executed
        -:   25:}
        -:   26:
        -:   27://===----------------------------------------------------------------------===//
        -:   28:// AttributePosition
        -:   29:
function _ZN4mlir17pdl_to_pdl_interp17AttributePositionC2ERKSt4pairIPNS0_17OperationPositionENS_10StringAttrEE called 0 returned 0% blocks executed 0%
    #####:   30:AttributePosition::AttributePosition(const KeyTy &key) : Base(key) {
    #####:   31:  parent = key.first;
    #####:   32:}
        -:   33:
        -:   34://===----------------------------------------------------------------------===//
        -:   35:// OperandPosition
        -:   36:
function _ZN4mlir17pdl_to_pdl_interp15OperandPositionC2ERKSt4pairIPNS0_17OperationPositionEjE called 0 returned 0% blocks executed 0%
    #####:   37:OperandPosition::OperandPosition(const KeyTy &key) : Base(key) {
    #####:   38:  parent = key.first;
    #####:   39:}
        -:   40:
        -:   41://===----------------------------------------------------------------------===//
        -:   42:// OperandGroupPosition
        -:   43:
function _ZN4mlir17pdl_to_pdl_interp20OperandGroupPositionC2ERKSt5tupleIJPNS0_17OperationPositionEN4llvm8OptionalIjEEbEE called 512 returned 100% blocks executed 100%
      512:   44:OperandGroupPosition::OperandGroupPosition(const KeyTy &key) : Base(key) {
      512:   45:  parent = std::get<0>(key);
      512:   46:}
        -:   47:
        -:   48://===----------------------------------------------------------------------===//
        -:   49:// OperationPosition
        -:   50:
function _ZNK4mlir17pdl_to_pdl_interp17OperationPosition19isOperandDefiningOpEv called 0 returned 0% blocks executed 0%
    #####:   51:bool OperationPosition::isOperandDefiningOp() const {
    #####:   52:  return isa_and_nonnull<OperandPosition, OperandGroupPosition>(parent);
branch  0 never executed
branch  1 never executed
        -:   53:}
