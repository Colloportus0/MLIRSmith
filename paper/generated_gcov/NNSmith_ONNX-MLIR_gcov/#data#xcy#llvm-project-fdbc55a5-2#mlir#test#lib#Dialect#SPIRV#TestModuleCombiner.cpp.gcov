        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/test/lib/Dialect/SPIRV/TestModuleCombiner.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/SPIRV/CMakeFiles/MLIRSPIRVTestPasses.dir/TestModuleCombiner.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/SPIRV/CMakeFiles/MLIRSPIRVTestPasses.dir/TestModuleCombiner.cpp.gcda
        -:    0:Runs:128636
        -:    1://===- TestModuleCombiner.cpp - Pass to test SPIR-V module combiner lib ---===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/SPIRV/IR/SPIRVOps.h"
        -:   10:#include "mlir/Dialect/SPIRV/IR/SPIRVTypes.h"
        -:   11:#include "mlir/Dialect/SPIRV/Linking/ModuleCombiner.h"
        -:   12:#include "mlir/IR/Builders.h"
        -:   13:#include "mlir/IR/BuiltinOps.h"
        -:   14:#include "mlir/Pass/Pass.h"
        -:   15:
        -:   16:using namespace mlir;
        -:   17:
        -:   18:namespace {
        -:   19:class TestModuleCombinerPass
        -:   20:    : public PassWrapper<TestModuleCombinerPass,
        -:   21:                         OperationPass<mlir::ModuleOp>> {
        -:   22:public:
function _ZN12_GLOBAL__N_122TestModuleCombinerPass13resolveTypeIDEv called 128636 returned 100% blocks executed 100%
   128636:   23:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestModuleCombinerPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   24:
function _ZNK12_GLOBAL__N_122TestModuleCombinerPass11getArgumentEv called 128636 returned 100% blocks executed 100%
   128636:   25:  StringRef getArgument() const final { return "test-spirv-module-combiner"; }
function _ZNK12_GLOBAL__N_122TestModuleCombinerPass14getDescriptionEv called 128636 returned 100% blocks executed 100%
   128636:   26:  StringRef getDescription() const final {
   128636:   27:    return "Tests SPIR-V module combiner library";
        -:   28:  }
   128636:   29:  TestModuleCombinerPass() = default;
call    0 returned 100%
        -:   30:  TestModuleCombinerPass(const TestModuleCombinerPass &) {}
        -:   31:  void runOnOperation() override;
        -:   32:};
        -:   33:} // namespace
        -:   34:
function _ZN12_GLOBAL__N_122TestModuleCombinerPass14runOnOperationEv called 0 returned 0% blocks executed 0%
    #####:   35:void TestModuleCombinerPass::runOnOperation() {
    #####:   36:  auto modules = llvm::to_vector<4>(getOperation().getOps<spirv::ModuleOp>());
call    0 never executed
call    1 never executed
call    2 never executed
        -:   37:
    #####:   38:  OpBuilder combinedModuleBuilder(modules[0]);
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:   39:
function _ZZN12_GLOBAL__N_122TestModuleCombinerPass14runOnOperationEvENKUlN4mlir5spirv8ModuleOpEN4llvm9StringRefES5_E_clES3_S5_S5_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   40:  auto listener = [](spirv::ModuleOp originalModule, StringRef oldSymbol,
        -:   41:                     StringRef newSymbol) {
    #####:   42:    llvm::outs() << "[" << originalModule.getName() << "] " << oldSymbol
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
    #####:   43:                 << " -> " << newSymbol << "\n";
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   44:  };
        -:   45:
    #####:   46:  OwningOpRef<spirv::ModuleOp> combinedModule =
    #####:   47:      spirv::combine(modules, combinedModuleBuilder, listener);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   48:
    #####:   49:  for (spirv::ModuleOp module : modules)
branch  0 never executed
branch  1 never executed
    #####:   50:    module.erase();
call    0 never executed
    #####:   51:  combinedModule.release();
branch  0 never executed
branch  1 never executed
    #####:   52:}
        -:   53:
        -:   54:namespace mlir {
function _ZN4mlir35registerTestSpirvModuleCombinerPassEv called 128636 returned 100% blocks executed 100%
   128636:   55:void registerTestSpirvModuleCombinerPass() {
   128636:   56:  PassRegistration<TestModuleCombinerPass>();
call    0 returned 100%
   128636:   57:}
        -:   58:} // namespace mlir
