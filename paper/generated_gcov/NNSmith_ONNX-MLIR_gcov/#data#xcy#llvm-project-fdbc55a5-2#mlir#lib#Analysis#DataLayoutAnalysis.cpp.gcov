        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Analysis/DataLayoutAnalysis.cpp
        -:    0:Graph:../tools/mlir/lib/Analysis/CMakeFiles/obj.MLIRAnalysis.dir/DataLayoutAnalysis.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Analysis/CMakeFiles/obj.MLIRAnalysis.dir/DataLayoutAnalysis.cpp.gcda
        -:    0:Runs:128638
        -:    1://===- DataLayoutAnalysis.cpp ---------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Analysis/DataLayoutAnalysis.h"
        -:   10:#include "mlir/IR/BuiltinOps.h"
        -:   11:#include "mlir/IR/Operation.h"
        -:   12:#include "mlir/Interfaces/DataLayoutInterfaces.h"
        -:   13:
        -:   14:using namespace mlir;
        -:   15:
function _ZN4mlir18DataLayoutAnalysisC2EPNS_9OperationE called 2054 returned 100% blocks executed 58%
     2054:   16:DataLayoutAnalysis::DataLayoutAnalysis(Operation *root)
     2054:   17:    : defaultLayout(std::make_unique<DataLayout>(DataLayoutOpInterface())) {
call    0 returned 100%
call    1 returned 100%
        -:   18:  // Construct a DataLayout if possible from the op.
function _ZZN4mlir18DataLayoutAnalysisC4EPNS_9OperationEENKUlS2_E_clES2_.isra.0 called 1400860 returned 100% blocks executed 55%
 1400860*:   19:  auto computeLayout = [this](Operation *op) {
  1400860:   20:    if (auto iface = dyn_cast<DataLayoutOpInterface>(op))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   21:      layouts[op] = std::make_unique<DataLayout>(iface);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
  1400860:   22:    if (auto module = dyn_cast<ModuleOp>(op))
call    0 returned 100%
branch  1 taken 1% (fallthrough)
branch  2 taken 100%
     2067:   23:      layouts[op] = std::make_unique<DataLayout>(module);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
  1402914:   24:  };
        -:   25:
        -:   26:  // Compute layouts for both ancestors and descendants.
     2054:   27:  root->walk(computeLayout);
call    0 returned 100%
    4108*:   28:  for (Operation *ancestor = root->getParentOp(); ancestor != nullptr;
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:   29:       ancestor = ancestor->getParentOp()) {
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   30:    computeLayout(ancestor);
call    0 never executed
        -:   31:  }
     2054:   32:}
        -:   33:
function _ZNK4mlir18DataLayoutAnalysis8getAboveEPNS_9OperationE called 0 returned 0% blocks executed 0%
    #####:   34:const DataLayout &DataLayoutAnalysis::getAbove(Operation *operation) const {
    #####:   35:  for (Operation *ancestor = operation->getParentOp(); ancestor != nullptr;
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   36:       ancestor = ancestor->getParentOp()) {
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   37:    auto it = layouts.find(ancestor);
call    0 never executed
    #####:   38:    if (it != layouts.end())
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   39:      return *it->getSecond();
call    0 never executed
        -:   40:  }
        -:   41:
        -:   42:  // Fallback to the default layout.
    #####:   43:  return *defaultLayout;
        -:   44:}
        -:   45:
function _ZNK4mlir18DataLayoutAnalysis12getAtOrAboveEPNS_9OperationE called 2054 returned 100% blocks executed 88%
     2054:   46:const DataLayout &DataLayoutAnalysis::getAtOrAbove(Operation *operation) const {
     2054:   47:  auto it = layouts.find(operation);
call    0 returned 100%
     2054:   48:  if (it != layouts.end())
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
     2054:   49:    return *it->getSecond();
call    0 returned 100%
    #####:   50:  return getAbove(operation);
call    0 never executed
        -:   51:}
