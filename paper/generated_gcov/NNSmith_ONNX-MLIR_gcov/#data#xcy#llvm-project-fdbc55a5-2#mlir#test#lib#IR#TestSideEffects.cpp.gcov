        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/test/lib/IR/TestSideEffects.cpp
        -:    0:Graph:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestSideEffects.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestSideEffects.cpp.gcda
        -:    0:Runs:128637
        -:    1://===- TestSidEffects.cpp - Pass to test side effects ---------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "TestDialect.h"
        -:   10:#include "mlir/Pass/Pass.h"
        -:   11:
        -:   12:using namespace mlir;
        -:   13:
        -:   14:namespace {
  129199*:   15:struct SideEffectsPass
call    0 never executed
call    1 returned 100%
        -:   16:    : public PassWrapper<SideEffectsPass, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_115SideEffectsPass13resolveTypeIDEv called 129199 returned 100% blocks executed 100%
   129199:   17:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(SideEffectsPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   18:
function _ZNK12_GLOBAL__N_115SideEffectsPass11getArgumentEv called 128663 returned 100% blocks executed 100%
   128663:   19:  StringRef getArgument() const final { return "test-side-effects"; }
function _ZNK12_GLOBAL__N_115SideEffectsPass14getDescriptionEv called 128637 returned 100% blocks executed 100%
   128637:   20:  StringRef getDescription() const final {
   128637:   21:    return "Test side effects interfaces";
        -:   22:  }
function _ZN12_GLOBAL__N_115SideEffectsPass14runOnOperationEv called 491 returned 100% blocks executed 75%
      491:   23:  void runOnOperation() override {
      491:   24:    auto module = getOperation();
call    0 returned 100%
        -:   25:
        -:   26:    // Walk operations detecting side effects.
      491:   27:    SmallVector<MemoryEffects::EffectInstance, 8> effects;
call    0 returned 100%
function _ZZN12_GLOBAL__N_115SideEffectsPass14runOnOperationEvENKUlN4mlir23MemoryEffectOpInterfaceEE_clES2_.isra.0 called 357008 returned 100% blocks executed 81%
      491:   28:    module.walk([&](MemoryEffectOpInterface op) {
call    0 returned 100%
   357008:   29:      effects.clear();
call    0 returned 100%
   357008:   30:      op.getEffects(effects);
call    0 returned 100%
        -:   31:
        -:   32:      // Check to see if this operation has any memory effects.
   357008:   33:      if (effects.empty()) {
branch  0 taken 92% (fallthrough)
branch  1 taken 8%
   326903:   34:        op.emitRemark() << "operation has no memory effects";
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
   326903:   35:        return;
        -:   36:      }
        -:   37:
    60210:   38:      for (MemoryEffects::EffectInstance instance : effects) {
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
    30105:   39:        auto diag = op.emitRemark() << "found an instance of ";
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
        -:   40:
    30105:   41:        if (isa<MemoryEffects::Allocate>(instance.getEffect()))
call    0 returned 100%
branch  1 taken 5% (fallthrough)
branch  2 taken 95%
     1398:   42:          diag << "'allocate'";
call    0 returned 100%
    28707:   43:        else if (isa<MemoryEffects::Free>(instance.getEffect()))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   44:          diag << "'free'";
call    0 never executed
    28707:   45:        else if (isa<MemoryEffects::Read>(instance.getEffect()))
call    0 returned 100%
branch  1 taken 48% (fallthrough)
branch  2 taken 52%
    13848:   46:          diag << "'read'";
call    0 returned 100%
    14859:   47:        else if (isa<MemoryEffects::Write>(instance.getEffect()))
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
    14859:   48:          diag << "'write'";
call    0 returned 100%
        -:   49:
    60210:   50:        if (instance.getValue())
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
    30105:   51:          diag << " on a value,";
call    0 returned 100%
    #####:   52:        else if (SymbolRefAttr symbolRef = instance.getSymbolRef())
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   53:          diag << " on a symbol '" << symbolRef << "',";
call    0 never executed
call    1 never executed
call    2 never executed
        -:   54:
    30105:   55:        diag << " on resource '" << instance.getResource()->getName() << "'";
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
        -:   56:      }
        -:   57:    });
        -:   58:
      982:   59:    SmallVector<TestEffects::EffectInstance, 1> testEffects;
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
function _ZZN12_GLOBAL__N_115SideEffectsPass14runOnOperationEvENKUlN4mlir21TestEffectOpInterfaceEE0_clES2_.isra.0 called 0 returned 0% blocks executed 0%
     491*:   60:    module.walk([&](TestEffectOpInterface op) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   61:      testEffects.clear();
call    0 never executed
    #####:   62:      op.getEffects(testEffects);
call    0 never executed
        -:   63:
    #####:   64:      if (testEffects.empty())
branch  0 never executed
branch  1 never executed
        -:   65:        return;
        -:   66:
    #####:   67:      for (const TestEffects::EffectInstance &instance : testEffects) {
branch  0 never executed
branch  1 never executed
    #####:   68:        op.emitRemark() << "found a parametric effect with "
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   69:                        << instance.getParameters();
call    0 never executed
call    1 never executed
        -:   70:      }
        -:   71:    });
      491:   72:  }
        -:   73:};
        -:   74:} // namespace
        -:   75:
        -:   76:namespace mlir {
function _ZN4mlir28registerSideEffectTestPassesEv called 128637 returned 100% blocks executed 100%
   128637:   77:void registerSideEffectTestPasses() { PassRegistration<SideEffectsPass>(); }
call    0 returned 100%
        -:   78:} // namespace mlir
