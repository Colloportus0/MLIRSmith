        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Dialect/Bufferization/Transforms/EmptyTensorToAllocTensor.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Bufferization/Transforms/CMakeFiles/obj.MLIRBufferizationTransforms.dir/EmptyTensorToAllocTensor.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Bufferization/Transforms/CMakeFiles/obj.MLIRBufferizationTransforms.dir/EmptyTensorToAllocTensor.cpp.gcda
        -:    0:Runs:128624
        -:    1://===- InitTensorToAllocTensor.cpp - Lower tensor.empty to alloc_tensor ---===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/Bufferization/Transforms/Passes.h"
        -:   10:
        -:   11:#include "mlir/Dialect/Bufferization/IR/Bufferization.h"
        -:   12:#include "mlir/Dialect/Tensor/IR/Tensor.h"
        -:   13:#include "mlir/Pass/Pass.h"
        -:   14:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   15:
        -:   16:namespace mlir {
        -:   17:namespace bufferization {
        -:   18:#define GEN_PASS_DEF_EMPTYTENSORTOALLOCTENSOR
        -:   19:#include "mlir/Dialect/Bufferization/Transforms/Passes.h.inc"
        -:   20:} // namespace bufferization
        -:   21:} // namespace mlir
        -:   22:
        -:   23:using namespace mlir;
        -:   24:using namespace mlir::bufferization;
        -:   25:using namespace mlir::tensor;
        -:   26:
        -:   27:namespace {
        -:   28:struct EmptyTensorLoweringPattern : public OpRewritePattern<tensor::EmptyOp> {
        -:   29:  using OpRewritePattern<tensor::EmptyOp>::OpRewritePattern;
        -:   30:
function _ZNK12_GLOBAL__N_126EmptyTensorLoweringPattern15matchAndRewriteEN4mlir6tensor7EmptyOpERNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   31:  LogicalResult matchAndRewrite(tensor::EmptyOp op,
        -:   32:                                PatternRewriter &rewriter) const override {
    #####:   33:    rewriter.replaceOpWithNewOp<bufferization::AllocTensorOp>(
    #####:   34:        op, op.getType(), op.getDynamicSizes());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   35:    return success();
        -:   36:  }
        -:   37:};
        -:   38:
    #####:   39:struct EmptyTensorToAllocTensor
call    0 never executed
        -:   40:    : public bufferization::impl::EmptyTensorToAllocTensorBase<
        -:   41:          EmptyTensorToAllocTensor> {
   129257:   42:  EmptyTensorToAllocTensor() = default;
call    0 returned 100%
        -:   43:
        -:   44:  void runOnOperation() override;
        -:   45:
function _ZNK12_GLOBAL__N_124EmptyTensorToAllocTensor20getDependentDialectsERN4mlir15DialectRegistryE called 633 returned 100% blocks executed 100%
      633:   46:  void getDependentDialects(DialectRegistry &registry) const override {
      633:   47:    registry
call    0 returned 100%
      633:   48:        .insert<tensor::TensorDialect, bufferization::BufferizationDialect>();
      633:   49:  }
        -:   50:};
        -:   51:} // namespace
        -:   52:
function _ZN12_GLOBAL__N_124EmptyTensorToAllocTensor14runOnOperationEv called 549 returned 100% blocks executed 85%
      549:   53:void EmptyTensorToAllocTensor::runOnOperation() {
      549:   54:  Operation *op = getOperation();
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
      549:   55:  RewritePatternSet patterns(op->getContext());
call    0 returned 100%
call    1 returned 100%
      549:   56:  patterns.insert<EmptyTensorLoweringPattern>(op->getContext());
call    0 returned 100%
call    1 returned 100%
      549:   57:  if (failed(applyPatternsAndFoldGreedily(op, std::move(patterns))))
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
    #####:   58:    signalPassFailure();
call    0 never executed
      549:   59:}
        -:   60:
        -:   61:std::unique_ptr<Pass>
function _ZN4mlir13bufferization34createEmptyTensorToAllocTensorPassEv called 129257 returned 100% blocks executed 100%
   129257:   62:mlir::bufferization::createEmptyTensorToAllocTensorPass() {
   129257:   63:  return std::make_unique<EmptyTensorToAllocTensor>();
call    0 returned 100%
        -:   64:}
