        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Dialect/Tosa/Transforms/TosaOptionalDecompositions.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Tosa/Transforms/CMakeFiles/obj.MLIRTosaTransforms.dir/TosaOptionalDecompositions.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Tosa/Transforms/CMakeFiles/obj.MLIRTosaTransforms.dir/TosaOptionalDecompositions.cpp.gcda
        -:    0:Runs:128633
        -:    1://===- TosaOptionalDecompositions.cpp -------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// Pass to apply the Tosa operations decompositions
        -:   10:// exposed as populate functions in
        -:   11:// include/mlir/Dialect/Tosa/Transforms/Passes.h
        -:   12://
        -:   13://===----------------------------------------------------------------------===//
        -:   14:
        -:   15:#include "mlir/Dialect/Tosa/Transforms/Passes.h"
        -:   16:
        -:   17:#include "mlir/Dialect/Func/IR/FuncOps.h"
        -:   18:#include "mlir/Dialect/Tosa/IR/TosaOps.h"
        -:   19:#include "mlir/Pass/Pass.h"
        -:   20:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   21:
        -:   22:namespace mlir {
        -:   23:namespace tosa {
        -:   24:#define GEN_PASS_DEF_TOSAOPTIONALDECOMPOSITIONS
        -:   25:#include "mlir/Dialect/Tosa/Transforms/Passes.h.inc"
        -:   26:} // namespace tosa
        -:   27:} // namespace mlir
        -:   28:
        -:   29:using namespace mlir;
        -:   30:
        -:   31:namespace {
        -:   32:
   166903:   33:struct TosaOptionalDecompositions
call    0 returned 100%
call    1 returned 100%
        -:   34:    : public tosa::impl::TosaOptionalDecompositionsBase<
        -:   35:          TosaOptionalDecompositions> {
function _ZN12_GLOBAL__N_126TosaOptionalDecompositions14runOnOperationEv called 0 returned 0% blocks executed 0%
    #####:   36:  void runOnOperation() override {
    #####:   37:    auto *ctx = &getContext();
call    0 never executed
    #####:   38:    RewritePatternSet patterns(ctx);
call    0 never executed
    #####:   39:    auto func = getOperation();
call    0 never executed
        -:   40:
    #####:   41:    mlir::tosa::populateTosaDecomposeConv2D(ctx, patterns);
call    0 never executed
    #####:   42:    mlir::tosa::populateTosaDecomposeTransposeConv(ctx, patterns);
call    0 never executed
    #####:   43:    mlir::tosa::populateTosaDecomposeDepthwise(ctx, patterns);
call    0 never executed
        -:   44:
    #####:   45:    if (applyPatternsAndFoldGreedily(func, std::move(patterns)).failed())
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   46:      signalPassFailure();
call    0 never executed
    #####:   47:  }
        -:   48:};
        -:   49:
        -:   50:} // namespace
        -:   51:
function _ZN4mlir4tosa32createTosaOptionalDecompositionsEv called 129247 returned 100% blocks executed 100%
   129247:   52:std::unique_ptr<Pass> mlir::tosa::createTosaOptionalDecompositions() {
   129247:   53:  return std::make_unique<TosaOptionalDecompositions>();
call    0 returned 100%
        -:   54:}
