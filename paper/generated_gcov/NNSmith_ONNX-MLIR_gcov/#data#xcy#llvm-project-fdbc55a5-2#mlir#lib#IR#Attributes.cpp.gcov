        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/IR/Attributes.cpp
        -:    0:Graph:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/Attributes.cpp.gcno
        -:    0:Data:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/Attributes.cpp.gcda
        -:    0:Runs:128638
        -:    1://===- Attributes.cpp - MLIR Affine Expr Classes --------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/IR/Attributes.h"
        -:   10:#include "mlir/IR/Dialect.h"
        -:   11:
        -:   12:using namespace mlir;
        -:   13:using namespace mlir::detail;
        -:   14:
        -:   15://===----------------------------------------------------------------------===//
        -:   16:// Attribute
        -:   17://===----------------------------------------------------------------------===//
        -:   18:
        -:   19:/// Return the context this attribute belongs to.
function _ZNK4mlir9Attribute10getContextEv called 1261228143 returned 100% blocks executed 67%
1261228143:   20:MLIRContext *Attribute::getContext() const { return getDialect().getContext(); }
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   21:
        -:   22://===----------------------------------------------------------------------===//
        -:   23:// NamedAttribute
        -:   24://===----------------------------------------------------------------------===//
        -:   25:
function _ZN4mlir14NamedAttributeC2ENS_10StringAttrENS_9AttributeE called 68652885 returned 100% blocks executed 71%
 68652885:   26:NamedAttribute::NamedAttribute(StringAttr name, Attribute value)
 68652885:   27:    : name(name), value(value) {
68652885*:   28:  assert(name && value && "expected valid attribute name and value");
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
call    4 never executed
68652885*:   29:  assert(name.size() != 0 && "expected valid attribute name");
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 never executed
 68652885:   30:}
        -:   31:
function _ZNK4mlir14NamedAttribute7getNameEv called 2116253061 returned 100% blocks executed 100%
2116253061*:   32:StringAttr NamedAttribute::getName() const { return name.cast<StringAttr>(); }
call    0 returned 100%
        -:   33:
function _ZNK4mlir14NamedAttribute14getNameDialectEv called 484384881 returned 100% blocks executed 100%
484384881:   34:Dialect *NamedAttribute::getNameDialect() const {
484384881:   35:  return getName().getReferencedDialect();
call    0 returned 100%
call    1 returned 100%
        -:   36:}
        -:   37:
function _ZN4mlir14NamedAttribute7setNameENS_10StringAttrE called 0 returned 0% blocks executed 0%
    #####:   38:void NamedAttribute::setName(StringAttr newName) {
    #####:   39:  assert(name && "expected valid attribute name");
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   40:  name = newName;
    #####:   41:}
        -:   42:
function _ZNK4mlir14NamedAttributeltERKS0_ called 65873536 returned 100% blocks executed 100%
 65873536:   43:bool NamedAttribute::operator<(const NamedAttribute &rhs) const {
 65873536:   44:  return getName().compare(rhs.getName()) < 0;
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   45:}
        -:   46:
function _ZNK4mlir14NamedAttributeltEN4llvm9StringRefE called 0 returned 0% blocks executed 0%
    #####:   47:bool NamedAttribute::operator<(StringRef rhs) const {
    #####:   48:  return getName().getValue().compare(rhs) < 0;
call    0 never executed
call    1 never executed
        -:   49:}
