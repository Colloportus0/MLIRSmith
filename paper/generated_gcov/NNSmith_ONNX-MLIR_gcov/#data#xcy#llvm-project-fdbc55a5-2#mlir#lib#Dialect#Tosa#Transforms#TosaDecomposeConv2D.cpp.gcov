        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-2/mlir/lib/Dialect/Tosa/Transforms/TosaDecomposeConv2D.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Tosa/Transforms/CMakeFiles/obj.MLIRTosaTransforms.dir/TosaDecomposeConv2D.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Tosa/Transforms/CMakeFiles/obj.MLIRTosaTransforms.dir/TosaDecomposeConv2D.cpp.gcda
        -:    0:Runs:128633
        -:    1://===- TosaDecomposeConv2D.cpp --------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// Decompose TOSA Conv2D operation to a series of TOSA Ops specifically
        -:   10:// (1) Convert a 1x1 Convolution to a Reshape->FC->Reshape
        -:   11://
        -:   12://===----------------------------------------------------------------------===//
        -:   13:
        -:   14:#include "mlir/Dialect/Tosa/IR/TosaOps.h"
        -:   15:#include "mlir/Dialect/Tosa/Transforms/Passes.h"
        -:   16:
        -:   17:using namespace mlir;
        -:   18:using namespace mlir::tosa;
        -:   19:
        -:   20:namespace {
        -:   21:
    #####:   22:SmallVector<int64_t> ConvertFromMlirShape(ArrayRef<int64_t> shape) {
    #####:   23:  return to_vector(llvm::map_range(shape, [](int64_t dim) {
    #####:   24:    return ShapedType::isDynamic(dim) ? -1 : dim;
branch  0 never executed
branch  1 never executed
    #####:   25:  }));
call    0 never executed
call    1 never executed
call    2 never executed
        -:   26:}
        -:   27:
        -:   28:struct Conv2DIsFullyConnected : public OpRewritePattern<tosa::Conv2DOp> {
function _ZN12_GLOBAL__N_122Conv2DIsFullyConnectedC2EPN4mlir11MLIRContextE called 0 returned 0% blocks executed 0%
    #####:   29:  explicit Conv2DIsFullyConnected(MLIRContext *context)
    #####:   30:      : OpRewritePattern(context) {}
call    0 never executed
call    1 never executed
        -:   31:
function _ZNK12_GLOBAL__N_122Conv2DIsFullyConnected15matchAndRewriteEN4mlir4tosa8Conv2DOpERNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   32:  LogicalResult matchAndRewrite(tosa::Conv2DOp op,
        -:   33:                                PatternRewriter &rewriter) const override {
    #####:   34:    Value input = op.getInput();
call    0 never executed
    #####:   35:    Value weight = op.getWeight();
call    0 never executed
    #####:   36:    ShapedType inputType = input.getType().cast<ShapedType>();
call    0 never executed
    #####:   37:    ShapedType weightType = weight.getType().cast<ShapedType>();
call    0 never executed
    #####:   38:    ShapedType resultType = op.getType().cast<ShapedType>();
call    0 never executed
        -:   39:
    #####:   40:    auto numDynamic =
    #####:   41:        llvm::count_if(inputType.getShape(), ShapedType::isDynamic);
call    0 never executed
    #####:   42:    if (numDynamic > 1)
branch  0 never executed
branch  1 never executed
    #####:   43:      return rewriter.notifyMatchFailure(
    #####:   44:          op, "at most one dim in input may be dynamic");
call    0 never executed
    #####:   45:    if (!weightType.hasRank())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   46:      return rewriter.notifyMatchFailure(op, "unranked weight input");
call    0 never executed
        -:   47:
        -:   48:    // Stride must be 1 for this optimization.
    #####:   49:    for (APInt stride : op.getStride().getAsValueRange<IntegerAttr>()) {
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
    #####:   50:      if (!stride.isOne())
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   51:        return failure();
branch  0 never executed
branch  1 never executed
        -:   52:    }
        -:   53:
        -:   54:    // Only works for a 1x1 kernel.
    #####:   55:    ArrayRef<int64_t> weightShape = weightType.getShape();
call    0 never executed
    #####:   56:    if (weightShape[1] != 1 || weightShape[2] != 1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:   57:      return failure();
        -:   58:
        -:   59:    // Reshape input to [N,IH,IW,IC] -> [N * IH * IW, IC].
    #####:   60:    ArrayRef<int64_t> inputShape = inputType.getShape();
call    0 never executed
    #####:   61:    int64_t combined = ShapedType::kDynamicSize;
    #####:   62:    if (numDynamic == 0)
branch  0 never executed
branch  1 never executed
    #####:   63:      combined = inputShape[0] * inputShape[1] * inputShape[2];
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   64:    llvm::SmallVector<int64_t, 2> revisedInputShape{combined, inputShape[3]};
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   65:    auto revisedInputShapeType =
    #####:   66:        RankedTensorType::get(revisedInputShape, inputType.getElementType());
call    0 never executed
call    1 never executed
    #####:   67:    auto reshapedInput = rewriter
    #####:   68:                             .create<tosa::ReshapeOp>(
        -:   69:                                 op.getLoc(), revisedInputShapeType, input,
    #####:   70:                                 rewriter.getI64ArrayAttr(
    #####:   71:                                     ConvertFromMlirShape(revisedInputShape)))
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   72:                             .getResult();
branch  0 never executed
branch  1 never executed
        -:   73:
        -:   74:    // Reshape kernel to [OC,KH,KW,IC] -> [OC, IC].
    #####:   75:    llvm::SmallVector<int64_t, 2> revisedWeightShape{weightShape[0],
branch  0 never executed
branch  1 never executed
    #####:   76:                                                     weightShape[3]};
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   77:    auto revisedWeightShapeType = RankedTensorType::get(
        -:   78:        revisedWeightShape,
    #####:   79:        weight.getType().dyn_cast<RankedTensorType>().getElementType());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   80:    auto reshapedWeight = rewriter
    #####:   81:                              .create<tosa::ReshapeOp>(
        -:   82:                                  op.getLoc(), revisedWeightShapeType, weight,
    #####:   83:                                  rewriter.getI64ArrayAttr(
    #####:   84:                                      ConvertFromMlirShape(revisedWeightShape)))
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   85:                              .getResult();
branch  0 never executed
branch  1 never executed
        -:   86:
        -:   87:    // Perform a fully connected network over the reshaped input and weight.
    #####:   88:    llvm::SmallVector<int64_t, 2> fullyConnectedShape{combined, weightShape[0]};
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   89:    auto fullyConnectedShapeType =
    #####:   90:        RankedTensorType::get(fullyConnectedShape, resultType.getElementType());
call    0 never executed
call    1 never executed
        -:   91:
    #####:   92:    Value fullyConnectedValue;
    #####:   93:    if (op.getQuantizationInfo()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   94:      fullyConnectedValue =
        -:   95:          rewriter
    #####:   96:              .create<tosa::FullyConnectedOp>(
        -:   97:                  op.getLoc(), fullyConnectedShapeType, reshapedInput,
    #####:   98:                  reshapedWeight, op.getBias(), *op.getQuantizationInfo())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   99:              .getResult();
        -:  100:    } else {
    #####:  101:      fullyConnectedValue = rewriter
    #####:  102:                                .create<tosa::FullyConnectedOp>(
        -:  103:                                    op.getLoc(), fullyConnectedShapeType,
    #####:  104:                                    reshapedInput, reshapedWeight, op.getBias())
call    0 never executed
call    1 never executed
    #####:  105:                                .getResult();
        -:  106:    }
        -:  107:
        -:  108:    // Reshape output to [N, IH, IW, OC].
    #####:  109:    llvm::SmallVector<int64_t, 4> outputShape{inputShape[0], inputShape[1],
call    0 never executed
    #####:  110:                                              inputShape[2], weightShape[0]};
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  111:    rewriter.replaceOpWithNewOp<tosa::ReshapeOp>(
        -:  112:        op, resultType, fullyConnectedValue,
    #####:  113:        rewriter.getI64ArrayAttr(ConvertFromMlirShape(outputShape)));
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:  114:    return success();
branch  0 never executed
branch  1 never executed
        -:  115:  }
        -:  116:};
        -:  117:
        -:  118:} // namespace
        -:  119:
function _ZN4mlir4tosa27populateTosaDecomposeConv2DEPNS_11MLIRContextERNS_17RewritePatternSetE called 0 returned 0% blocks executed 0%
    #####:  120:void mlir::tosa::populateTosaDecomposeConv2D(MLIRContext *ctx,
        -:  121:                                             RewritePatternSet &patterns) {
    #####:  122:  patterns.add<Conv2DIsFullyConnected>(ctx);
call    0 never executed
    #####:  123:}
