        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/Dialect/GPU/TestGpuRewrite.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/GPU/CMakeFiles/MLIRGPUTestPasses.dir/TestGpuRewrite.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/GPU/CMakeFiles/MLIRGPUTestPasses.dir/TestGpuRewrite.cpp.gcda
        -:    0:Runs:325560
        -:    1://===- TestAllReduceLowering.cpp - Test gpu.all_reduce lowering -----------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file contains test passes for lowering the gpu.all_reduce op.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Dialect/Arith/IR/Arith.h"
        -:   14:#include "mlir/Dialect/Func/IR/FuncOps.h"
        -:   15:#include "mlir/Dialect/GPU/Transforms/Passes.h"
        -:   16:#include "mlir/Dialect/MemRef/IR/MemRef.h"
        -:   17:#include "mlir/Pass/Pass.h"
        -:   18:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   19:
        -:   20:using namespace mlir;
        -:   21:
        -:   22:namespace {
  326558*:   23:struct TestGpuRewritePass
call    0 never executed
call    1 returned 100%
        -:   24:    : public PassWrapper<TestGpuRewritePass, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_118TestGpuRewritePass13resolveTypeIDEv called 326558 returned 100% blocks executed 100%
   326558:   25:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestGpuRewritePass)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   26:
function _ZNK12_GLOBAL__N_118TestGpuRewritePass20getDependentDialectsERN4mlir15DialectRegistryE called 998 returned 100% blocks executed 100%
      998:   27:  void getDependentDialects(DialectRegistry &registry) const override {
      998:   28:    registry.insert<arith::ArithDialect, func::FuncDialect,
      998:   29:                    memref::MemRefDialect>();
call    0 returned 100%
      998:   30:  }
function _ZNK12_GLOBAL__N_118TestGpuRewritePass11getArgumentEv called 325587 returned 100% blocks executed 100%
   325587:   31:  StringRef getArgument() const final { return "test-gpu-rewrite"; }
function _ZNK12_GLOBAL__N_118TestGpuRewritePass14getDescriptionEv called 325560 returned 100% blocks executed 100%
   325560:   32:  StringRef getDescription() const final {
   325560:   33:    return "Applies all rewrite patterns within the GPU dialect.";
        -:   34:  }
function _ZN12_GLOBAL__N_118TestGpuRewritePass14runOnOperationEv called 852 returned 100% blocks executed 100%
      852:   35:  void runOnOperation() override {
      852:   36:    RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      852:   37:    populateGpuRewritePatterns(patterns);
call    0 returned 100%
      852:   38:    (void)applyPatternsAndFoldGreedily(getOperation(), std::move(patterns));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
      852:   39:  }
        -:   40:};
        -:   41:} // namespace
        -:   42:
        -:   43:namespace mlir {
function _ZN4mlir33registerTestAllReduceLoweringPassEv called 325560 returned 100% blocks executed 100%
   325560:   44:void registerTestAllReduceLoweringPass() {
   325560:   45:  PassRegistration<TestGpuRewritePass>();
call    0 returned 100%
   325560:   46:}
        -:   47:} // namespace mlir
