        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/IR/TestBuiltinAttributeInterfaces.cpp
        -:    0:Graph:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestBuiltinAttributeInterfaces.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestBuiltinAttributeInterfaces.cpp.gcda
        -:    0:Runs:325561
        -:    1://===- TestBuiltinAttributeInterfaces.cpp ---------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "TestAttributes.h"
        -:   10:#include "mlir/IR/BuiltinOps.h"
        -:   11:#include "mlir/Pass/Pass.h"
        -:   12:#include "llvm/ADT/TypeSwitch.h"
        -:   13:#include "llvm/Support/FormatVariadic.h"
        -:   14:
        -:   15:using namespace mlir;
        -:   16:using namespace test;
        -:   17:
        -:   18:// Helper to print one scalar value, force int8_t to print as integer instead of
        -:   19:// char.
        -:   20:template <typename T>
     160*:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
     160*:   22:  os << llvm::formatv("{0}", value).str();
     160*:   23:}
------------------
_Z15printOneElementIN4mlir11IntegerAttrEEvRNS0_18InFlightDiagnosticET_:
function _Z15printOneElementIN4mlir11IntegerAttrEEvRNS0_18InFlightDiagnosticET_ called 28 returned 100% blocks executed 67%
       28:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 returned 100%
       28:   22:  os << llvm::formatv("{0}", value).str();
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
       28:   23:}
------------------
_Z15printOneElementIN4llvm5APIntEEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIN4llvm5APIntEEvRN4mlir18InFlightDiagnosticET_ called 28 returned 100% blocks executed 67%
       28:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 returned 100%
       28:   22:  os << llvm::formatv("{0}", value).str();
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
       28:   23:}
------------------
_Z15printOneElementImEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementImEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
_Z15printOneElementIdEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIdEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
_Z15printOneElementIfEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIfEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
_Z15printOneElementIlEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIlEvRN4mlir18InFlightDiagnosticET_ called 104 returned 100% blocks executed 67%
      104:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 returned 100%
      104:   22:  os << llvm::formatv("{0}", value).str();
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
      104:   23:}
------------------
_Z15printOneElementIiEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIiEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
_Z15printOneElementIsEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIsEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
_Z15printOneElementIbEvRN4mlir18InFlightDiagnosticET_:
function _Z15printOneElementIbEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   21:static void printOneElement(InFlightDiagnostic &os, T value) {
call    0 never executed
    #####:   22:  os << llvm::formatv("{0}", value).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   23:}
------------------
        -:   24:template <>
function _Z15printOneElementIaEvRN4mlir18InFlightDiagnosticET_ called 0 returned 0% blocks executed 0%
    #####:   25:void printOneElement<int8_t>(InFlightDiagnostic &os, int8_t value) {
    #####:   26:  os << llvm::formatv("{0}", static_cast<int64_t>(value)).str();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   27:}
        -:   28:
        -:   29:namespace {
  325875*:   30:struct TestElementsAttrInterface
call    0 never executed
call    1 returned 100%
        -:   31:    : public PassWrapper<TestElementsAttrInterface, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_125TestElementsAttrInterface13resolveTypeIDEv called 325875 returned 100% blocks executed 100%
   325875:   32:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestElementsAttrInterface)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   33:
function _ZNK12_GLOBAL__N_125TestElementsAttrInterface11getArgumentEv called 325581 returned 100% blocks executed 100%
   325581:   34:  StringRef getArgument() const final { return "test-elements-attr-interface"; }
function _ZNK12_GLOBAL__N_125TestElementsAttrInterface14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:   35:  StringRef getDescription() const final {
   325561:   36:    return "Test ElementsAttr interface support.";
        -:   37:  }
function _ZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEv called 251 returned 100% blocks executed 100%
      251:   38:  void runOnOperation() override {
function _ZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_.isra.0 called 2112 returned 100% blocks executed 100%
     2363:   39:    getOperation().walk([&](Operation *op) {
call    0 returned 100%
call    1 returned 100%
     3988:   40:      for (NamedAttribute attr : op->getAttrs()) {
call    0 returned 100%
branch  1 taken 47% (fallthrough)
branch  2 taken 53%
     1876:   41:        auto elementsAttr = attr.getValue().dyn_cast<ElementsAttr>();
call    0 returned 100%
     1876:   42:        if (!elementsAttr)
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
     1865:   43:          continue;
       43:   44:        if (auto concreteAttr = attr.getValue().dyn_cast<DenseArrayAttr>()) {
call    0 returned 100%
branch  1 taken 74% (fallthrough)
branch  2 taken 26%
       32:   45:          llvm::TypeSwitch<DenseArrayAttr>(concreteAttr)
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIbEEE_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   46:              .Case([&](DenseBoolArrayAttr attr) {
    #####:   47:                testElementsAttrIteration<bool>(op, attr, "bool");
call    0 never executed
call    1 never executed
      32*:   48:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIaEEE0_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   49:              .Case([&](DenseI8ArrayAttr attr) {
    #####:   50:                testElementsAttrIteration<int8_t>(op, attr, "int8_t");
call    0 never executed
call    1 never executed
      32*:   51:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIsEEE1_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   52:              .Case([&](DenseI16ArrayAttr attr) {
    #####:   53:                testElementsAttrIteration<int16_t>(op, attr, "int16_t");
call    0 never executed
call    1 never executed
      32*:   54:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIiEEE2_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   55:              .Case([&](DenseI32ArrayAttr attr) {
    #####:   56:                testElementsAttrIteration<int32_t>(op, attr, "int32_t");
call    0 never executed
call    1 never executed
      32*:   57:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIlEEE3_clES7_.isra.0 called 32 returned 100% blocks executed 100%
       32:   58:              .Case([&](DenseI64ArrayAttr attr) {
       32:   59:                testElementsAttrIteration<int64_t>(op, attr, "int64_t");
call    0 returned 100%
call    1 returned 100%
       32:   60:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIfEEE4_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   61:              .Case([&](DenseF32ArrayAttr attr) {
    #####:   62:                testElementsAttrIteration<float>(op, attr, "float");
call    0 never executed
call    1 never executed
      32*:   63:              })
call    0 returned 100%
function _ZZZN12_GLOBAL__N_125TestElementsAttrInterface14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_ENKUlNS1_6detail18DenseArrayAttrImplIdEEE5_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   64:              .Case([&](DenseF64ArrayAttr attr) {
    #####:   65:                testElementsAttrIteration<double>(op, attr, "double");
call    0 never executed
call    1 never executed
      32*:   66:              });
call    0 returned 100%
       32:   67:          testElementsAttrIteration<int64_t>(op, elementsAttr, "int64_t");
call    0 returned 100%
       32:   68:          continue;
        -:   69:        }
       11:   70:        testElementsAttrIteration<int64_t>(op, elementsAttr, "int64_t");
call    0 returned 100%
       11:   71:        testElementsAttrIteration<uint64_t>(op, elementsAttr, "uint64_t");
call    0 returned 100%
       11:   72:        testElementsAttrIteration<APInt>(op, elementsAttr, "APInt");
call    0 returned 100%
       11:   73:        testElementsAttrIteration<IntegerAttr>(op, elementsAttr, "IntegerAttr");
call    0 returned 100%
        -:   74:      }
     2112:   75:    });
      251:   76:  }
        -:   77:
        -:   78:  template <typename T>
        -:   79:  void testElementsAttrIteration(Operation *op, ElementsAttr attr,
        -:   80:                                 StringRef type) {
        -:   81:    InFlightDiagnostic diag = op->emitError()
        -:   82:                              << "Test iterating `" << type << "`: ";
        -:   83:
        -:   84:    auto values = attr.tryGetValues<T>();
        -:   85:    if (!values) {
        -:   86:      diag << "unable to iterate type";
        -:   87:      return;
        -:   88:    }
        -:   89:
        -:   90:    llvm::interleaveComma(*values, diag,
function _ZZN12_GLOBAL__N_125TestElementsAttrInterface25testElementsAttrIterationIN4llvm5APIntEEEvPN4mlir9OperationENS4_12ElementsAttrENS2_9StringRefEENKUlS3_E_clES3_.isra.0 called 28 returned 100% blocks executed 67%
     188*:   91:                          [&](T value) { printOneElement(diag, value); });
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
call    4 returned 100%
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
call   11 returned 100%
call   12 returned 100%
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
        -:   92:  }
        -:   93:};
        -:   94:} // namespace
        -:   95:
        -:   96:namespace mlir {
        -:   97:namespace test {
function _ZN4mlir4test38registerTestBuiltinAttributeInterfacesEv called 325561 returned 100% blocks executed 100%
   325561:   98:void registerTestBuiltinAttributeInterfaces() {
   325561:   99:  PassRegistration<TestElementsAttrInterface>();
call    0 returned 100%
   325561:  100:}
        -:  101:} // namespace test
        -:  102:} // namespace mlir
