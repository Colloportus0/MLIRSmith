        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/Analysis/TestSlice.cpp
        -:    0:Graph:../tools/mlir/test/lib/Analysis/CMakeFiles/MLIRTestAnalysis.dir/TestSlice.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Analysis/CMakeFiles/MLIRTestAnalysis.dir/TestSlice.cpp.gcda
        -:    0:Runs:325560
        -:    1://===------------- TestSlice.cpp - Test slice related analisis ------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Analysis/SliceAnalysis.h"
        -:   10:#include "mlir/IR/SymbolTable.h"
        -:   11:#include "mlir/Pass/Pass.h"
        -:   12:
        -:   13:using namespace mlir;
        -:   14:
        -:   15:static const StringLiteral kOrderMarker = "__test_sort_original_idx__";
        -:   16:
        -:   17:namespace {
        -:   18:
  325560*:   19:struct TestTopologicalSortPass
call    0 never executed
call    1 returned 100%
        -:   20:    : public PassWrapper<TestTopologicalSortPass,
        -:   21:                         InterfacePass<SymbolOpInterface>> {
function _ZN12_GLOBAL__N_123TestTopologicalSortPass13resolveTypeIDEv called 325560 returned 100% blocks executed 100%
   325560:   22:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestTopologicalSortPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   23:
function _ZNK12_GLOBAL__N_123TestTopologicalSortPass11getArgumentEv called 325560 returned 100% blocks executed 100%
   325560:   24:  StringRef getArgument() const final { return "test-print-topological-sort"; }
function _ZNK12_GLOBAL__N_123TestTopologicalSortPass14getDescriptionEv called 325560 returned 100% blocks executed 100%
   325560:   25:  StringRef getDescription() const final {
   325560:   26:    return "Print operations in topological order";
        -:   27:  }
function _ZN12_GLOBAL__N_123TestTopologicalSortPass14runOnOperationEv called 0 returned 0% blocks executed 0%
    #####:   28:  void runOnOperation() override {
    #####:   29:    std::map<int, Operation *> ops;
call    0 never executed
function _ZZN12_GLOBAL__N_123TestTopologicalSortPass14runOnOperationEvENKUlPN4mlir9OperationEE_clES3_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   30:    getOperation().walk([&ops](Operation *op) {
call    0 never executed
call    1 never executed
    #####:   31:      if (auto originalOrderAttr = op->getAttrOfType<IntegerAttr>(kOrderMarker))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   32:        ops[originalOrderAttr.getInt()] = op;
call    0 never executed
call    1 never executed
    #####:   33:    });
    #####:   34:    SetVector<Operation *> sortedOp;
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   35:    for (auto op : ops)
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   36:      sortedOp.insert(op.second);
call    0 never executed
    #####:   37:    sortedOp = topologicalSort(sortedOp);
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   38:    llvm::errs() << "Testing : " << getOperation().getName() << "\n";
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
    #####:   39:    for (Operation *op : sortedOp) {
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   40:      op->print(llvm::errs());
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   41:      llvm::errs() << "\n";
call    0 never executed
call    1 never executed
        -:   42:    }
    #####:   43:  }
        -:   44:};
        -:   45:
        -:   46:} // namespace
        -:   47:
        -:   48:namespace mlir {
        -:   49:namespace test {
function _ZN4mlir4test29registerTestSliceAnalysisPassEv called 325560 returned 100% blocks executed 100%
   325560:   50:void registerTestSliceAnalysisPass() {
   325560:   51:  PassRegistration<TestTopologicalSortPass>();
call    0 returned 100%
   325560:   52:}
        -:   53:} // namespace test
        -:   54:} // namespace mlir
