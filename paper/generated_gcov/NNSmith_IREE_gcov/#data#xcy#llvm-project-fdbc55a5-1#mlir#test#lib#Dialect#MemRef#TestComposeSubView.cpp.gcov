        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/Dialect/MemRef/TestComposeSubView.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/MemRef/CMakeFiles/MLIRMemRefTestPasses.dir/TestComposeSubView.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/MemRef/CMakeFiles/MLIRMemRefTestPasses.dir/TestComposeSubView.cpp.gcda
        -:    0:Runs:325560
        -:    1://===- TestComposeSubView.cpp - Test composed subviews --------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file implements a pass to test the composed subview patterns.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   14:#include "mlir/Dialect/MemRef/Transforms/ComposeSubView.h"
        -:   15:#include "mlir/Pass/Pass.h"
        -:   16:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   17:
        -:   18:using namespace mlir;
        -:   19:
        -:   20:namespace {
  326623*:   21:struct TestComposeSubViewPass
call    0 never executed
call    1 returned 100%
        -:   22:    : public PassWrapper<TestComposeSubViewPass, OperationPass<>> {
function _ZN12_GLOBAL__N_122TestComposeSubViewPass13resolveTypeIDEv called 326623 returned 100% blocks executed 100%
   326623:   23:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestComposeSubViewPass)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   24:
function _ZNK12_GLOBAL__N_122TestComposeSubViewPass11getArgumentEv called 325599 returned 100% blocks executed 100%
   325599:   25:  StringRef getArgument() const final { return "test-compose-subview"; }
function _ZNK12_GLOBAL__N_122TestComposeSubViewPass14getDescriptionEv called 325560 returned 100% blocks executed 100%
   325560:   26:  StringRef getDescription() const final {
   325560:   27:    return "Test combining composed subviews";
        -:   28:  }
        -:   29:  void runOnOperation() override;
        -:   30:  void getDependentDialects(DialectRegistry &registry) const override;
        -:   31:};
        -:   32:
function _ZNK12_GLOBAL__N_122TestComposeSubViewPass20getDependentDialectsERN4mlir15DialectRegistryE called 1063 returned 100% blocks executed 100%
     1063:   33:void TestComposeSubViewPass::getDependentDialects(
        -:   34:    DialectRegistry &registry) const {
     1063:   35:  registry.insert<AffineDialect>();
call    0 returned 100%
     1063:   36:}
        -:   37:
function _ZN12_GLOBAL__N_122TestComposeSubViewPass14runOnOperationEv called 839 returned 100% blocks executed 91%
      839:   38:void TestComposeSubViewPass::runOnOperation() {
      839:   39:  RewritePatternSet patterns(&getContext());
call    0 returned 100%
call    1 returned 100%
      839:   40:  memref::populateComposeSubViewPatterns(patterns, &getContext());
call    0 returned 100%
call    1 returned 100%
      839:   41:  (void)applyPatternsAndFoldGreedily(getOperation(), std::move(patterns));
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
      839:   42:}
        -:   43:} // namespace
        -:   44:
        -:   45:namespace mlir {
        -:   46:namespace test {
function _ZN4mlir4test26registerTestComposeSubViewEv called 325560 returned 100% blocks executed 100%
   325560:   47:void registerTestComposeSubView() {
   325560:   48:  PassRegistration<TestComposeSubViewPass>();
call    0 returned 100%
   325560:   49:}
        -:   50:} // namespace test
        -:   51:} // namespace mlir
