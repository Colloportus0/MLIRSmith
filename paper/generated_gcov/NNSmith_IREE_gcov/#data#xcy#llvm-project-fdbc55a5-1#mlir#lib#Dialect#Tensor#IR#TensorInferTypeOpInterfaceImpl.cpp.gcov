        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/Tensor/IR/TensorInferTypeOpInterfaceImpl.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Tensor/IR/CMakeFiles/obj.MLIRTensorInferTypeOpInterfaceImpl.dir/TensorInferTypeOpInterfaceImpl.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Tensor/IR/CMakeFiles/obj.MLIRTensorInferTypeOpInterfaceImpl.dir/TensorInferTypeOpInterfaceImpl.cpp.gcda
        -:    0:Runs:325554
        -:    1://===- InferTypeOpImpl.cpp - InferType Interface external models *- C++ -*-===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/Tensor/IR/TensorInferTypeOpInterfaceImpl.h"
        -:   10:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   11:#include "mlir/Dialect/Tensor/IR/Tensor.h"
        -:   12:#include "mlir/Dialect/Utils/StaticValueUtils.h"
        -:   13:#include "mlir/Interfaces/InferTypeOpInterface.h"
        -:   14:
        -:   15:using namespace mlir;
        -:   16:using namespace mlir::tensor;
        -:   17:
        -:   18:/// Compute a map that for a given dimension of the expanded type gives the
        -:   19:/// dimension in the collapsed type it maps to. Essentially its the inverse of
        -:   20:/// the `reassocation` maps.
        -:   21:static llvm::DenseMap<int64_t, int64_t>
function _ZL31getExpandedDimToCollapsedDimMapN4llvm8ArrayRefIN4mlir9AffineMapEEE called 0 returned 0% blocks executed 0%
    #####:   22:getExpandedDimToCollapsedDimMap(ArrayRef<AffineMap> reassociation) {
    #####:   23:  llvm::DenseMap<int64_t, int64_t> expandedDimToCollapsedDim;
call    0 never executed
    #####:   24:  for (const auto &map : enumerate(reassociation)) {
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   25:    unsigned startPos =
    #####:   26:        map.value().getResults().front().cast<AffineDimExpr>().getPosition();
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   27:    unsigned endPos =
    #####:   28:        map.value().getResults().back().cast<AffineDimExpr>().getPosition();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   29:    for (auto dim : llvm::seq_inclusive(startPos, endPos)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   30:      expandedDimToCollapsedDim[dim] = map.index();
call    0 never executed
call    1 never executed
        -:   31:    }
        -:   32:  }
    #####:   33:  return expandedDimToCollapsedDim;
        -:   34:}
        -:   35:
        -:   36:/// For reshape op compute the shape at dimension `dimIndex` of the output in
        -:   37:/// terms of shape of the `src`, when the reshape op is a collapsing
        -:   38:/// operation. It is the product of the shape of the collapsed dimensions of the
        -:   39:/// `src`.
        -:   40:static OpFoldResult
function _ZL35getCollapsedOutputDimFromInputShapeRN4mlir9OpBuilderENS_8LocationElNS_5ValueEN4llvm8ArrayRefINS_9AffineMapEEE called 0 returned 0% blocks executed 0%
    #####:   41:getCollapsedOutputDimFromInputShape(OpBuilder &builder, Location loc,
        -:   42:                                    int64_t dimIndex, Value src,
        -:   43:                                    ArrayRef<AffineMap> reassociationMap) {
    #####:   44:  AffineMap map = reassociationMap[dimIndex];
branch  0 never executed
branch  1 never executed
    #####:   45:  unsigned startPos =
    #####:   46:      map.getResults().front().cast<AffineDimExpr>().getPosition();
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   47:  unsigned endPos = map.getResults().back().cast<AffineDimExpr>().getPosition();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   48:  AffineExpr expr;
    #####:   49:  SmallVector<Value, 2> dynamicDims;
call    0 never executed
    #####:   50:  for (auto dim : llvm::seq_inclusive(startPos, endPos)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   51:    dynamicDims.push_back(builder.createOrFold<tensor::DimOp>(loc, src, dim));
call    0 never executed
call    1 never executed
    #####:   52:    AffineExpr currExpr = builder.getAffineSymbolExpr(dim - startPos);
call    0 never executed
    #####:   53:    expr = (expr ? expr * currExpr : currExpr);
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:   54:  }
    #####:   55:  return applyMapToValues(builder, loc,
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   56:                          AffineMap::get(0, endPos - startPos + 1, expr),
call    0 never executed
    #####:   57:                          dynamicDims)[0];
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   58:}
        -:   59:
        -:   60:/// Given the `src` of a collapsing reshape op and its reassociation maps,
        -:   61:/// compute the shape of the result of the reshape.
        -:   62:static SmallVector<OpFoldResult, 4> getCollapsedOutputShapeFromInputShape(
        -:   63:    OpBuilder &builder, Location loc, Value src,
        -:   64:    ArrayRef<int64_t> dstStaticShape, ArrayRef<AffineMap> reassociation) {
        -:   65:  return llvm::to_vector<4>(llvm::map_range(
    #####:   66:      llvm::seq<int64_t>(0, dstStaticShape.size()), [&](int64_t dim) {
    #####:   67:        return getCollapsedOutputDimFromInputShape(builder, loc, dim, src,
    #####:   68:                                                   reassociation);
call    0 never executed
        -:   69:      }));
        -:   70:}
        -:   71:
        -:   72:/// For an expanding reshape op, compute the value for a dimension of the output
        -:   73:/// from the shape of the input.
function _ZL34getExpandedOutputDimFromInputShapeRN4mlir9OpBuilderENS_8LocationElNS_5ValueEN4llvm8ArrayRefIlEENS5_INS_9AffineMapEEERNS4_8DenseMapIllNS4_12DenseMapInfoIlvEENS4_6detail12DenseMapPairIllEEEE called 0 returned 0% blocks executed 0%
    #####:   74:static OpFoldResult getExpandedOutputDimFromInputShape(
        -:   75:    OpBuilder &builder, Location loc, int64_t dimIndex, Value src,
        -:   76:    ArrayRef<int64_t> dstStaticShape, ArrayRef<AffineMap> reassociation,
        -:   77:    llvm::DenseMap<int64_t, int64_t> &expandedDimToCollapsedDim) {
    #####:   78:  if (!ShapedType::isDynamic(dstStaticShape[dimIndex])) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   79:    return builder.getI64IntegerAttr(dstStaticShape[dimIndex]);
call    0 never executed
call    1 never executed
        -:   80:  }
    #####:   81:  unsigned sourceDimPos = expandedDimToCollapsedDim[dimIndex];
call    0 never executed
    #####:   82:  unsigned startPos = reassociation[sourceDimPos]
branch  0 never executed
branch  1 never executed
    #####:   83:                          .getResults()
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   84:                          .front()
    #####:   85:                          .cast<AffineDimExpr>()
call    0 never executed
    #####:   86:                          .getPosition();
call    0 never executed
    #####:   87:  unsigned endPos = reassociation[sourceDimPos]
branch  0 never executed
branch  1 never executed
    #####:   88:                        .getResults()
call    0 never executed
    #####:   89:                        .back()
call    0 never executed
    #####:   90:                        .cast<AffineDimExpr>()
call    0 never executed
    #####:   91:                        .getPosition();
call    0 never executed
    #####:   92:  int64_t linearizedStaticDim = 1;
    #####:   93:  for (auto &d :
    #####:   94:       llvm::enumerate(dstStaticShape.slice(startPos, endPos - startPos + 1))) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   95:    if (d.index() + startPos == static_cast<unsigned>(dimIndex))
branch  0 never executed
branch  1 never executed
    #####:   96:      continue;
    #####:   97:    assert(!ShapedType::isDynamic(d.value()) &&
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:   98:           "single dimension cannot be expanded into multiple dynamic "
        -:   99:           "dimensions");
    #####:  100:    linearizedStaticDim *= d.value();
        -:  101:  }
    #####:  102:  Value sourceDim = builder.create<tensor::DimOp>(loc, src, sourceDimPos);
call    0 never executed
call    1 never executed
    #####:  103:  return applyMapToValues(
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  104:      builder, loc,
        -:  105:      AffineMap::get(
    #####:  106:          0, 1, builder.getAffineSymbolExpr(0).floorDiv(linearizedStaticDim)),
call    0 never executed
    #####:  107:      sourceDim)[0];
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  108:}
        -:  109:
        -:  110:/// Given the `src` of an expanding reshape op, the reassociation maps and the
        -:  111:/// result type, compute the shape of the result of the reshape.
function _ZL36getExpandedOutputShapeFromInputShapeRN4mlir9OpBuilderENS_8LocationENS_5ValueEN4llvm8ArrayRefIlEENS5_INS_9AffineMapEEE called 0 returned 0% blocks executed 0%
    #####:  112:static SmallVector<OpFoldResult, 4> getExpandedOutputShapeFromInputShape(
        -:  113:    OpBuilder &builder, Location loc, Value src,
        -:  114:    ArrayRef<int64_t> dstStaticShape, ArrayRef<AffineMap> reassociation) {
    #####:  115:  llvm::DenseMap<int64_t, int64_t> expandedDimToCollapsedDim =
    #####:  116:      getExpandedDimToCollapsedDimMap(reassociation);
call    0 never executed
    #####:  117:  return llvm::to_vector<4>(llvm::map_range(
function _ZZL36getExpandedOutputShapeFromInputShapeRN4mlir9OpBuilderENS_8LocationENS_5ValueEN4llvm8ArrayRefIlEENS5_INS_9AffineMapEEEENKUllE_clEl called 0 returned 0% blocks executed 0%
    #####:  118:      llvm::seq<int64_t>(0, dstStaticShape.size()), [&](int64_t dim) {
call    0 never executed
    #####:  119:        return getExpandedOutputDimFromInputShape(builder, loc, dim, src,
    #####:  120:                                                  dstStaticShape, reassociation,
    #####:  121:                                                  expandedDimToCollapsedDim);
call    0 never executed
    #####:  122:      }));
call    0 never executed
call    1 never executed
call    2 never executed
        -:  123:}
        -:  124:
        -:  125:static SmallVector<OpFoldResult, 4>
function _ZL35getReshapeOutputShapeFromInputShapeRN4mlir9OpBuilderENS_8LocationENS_5ValueEN4llvm8ArrayRefIlEENS5_INS_9AffineMapEEE called 0 returned 0% blocks executed 0%
    #####:  126:getReshapeOutputShapeFromInputShape(OpBuilder &builder, Location loc, Value src,
        -:  127:                                    ArrayRef<int64_t> dstStaticShape,
        -:  128:                                    ArrayRef<AffineMap> reassocation) {
    #####:  129:  return dstStaticShape.size() >
call    0 never executed
    #####:  130:                 static_cast<size_t>(src.getType().cast<ShapedType>().getRank())
call    0 never executed
call    1 never executed
        -:  131:             ? getExpandedOutputShapeFromInputShape(
        -:  132:                   builder, loc, src, dstStaticShape, reassocation)
        -:  133:             : getCollapsedOutputShapeFromInputShape(
    #####:  134:                   builder, loc, src, dstStaticShape, reassocation);
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:  135:}
        -:  136:
        -:  137:template <typename OpTy>
   524200:  138:struct ReifyExpandOrCollapseShapeOp
call    0 returned 100%
call    1 returned 100%
        -:  139:    : public ReifyRankedShapedTypeOpInterface::ExternalModel<
        -:  140:          ReifyExpandOrCollapseShapeOp<OpTy>, OpTy> {
        -:  141:  LogicalResult
    #####:  142:  reifyResultShapes(Operation *op, OpBuilder &b,
        -:  143:                    ReifiedRankedShapedTypeDims &reifiedReturnShapes) const {
    #####:  144:    auto loc = op->getLoc();
    #####:  145:    auto reshapeOp = cast<OpTy>(op);
    #####:  146:    auto resultShape = getReshapeOutputShapeFromInputShape(
    #####:  147:        b, loc, reshapeOp.getSrc(), reshapeOp.getResultType().getShape(),
        -:  148:        reshapeOp.getReassociationMaps());
    #####:  149:    reifiedReturnShapes.push_back(getAsValues(b, loc, resultShape));
    #####:  150:    return success();
        -:  151:  }
------------------
_ZNK28ReifyExpandOrCollapseShapeOpIN4mlir6tensor15CollapseShapeOpEE17reifyResultShapesEPNS0_9OperationERNS0_9OpBuilderERN4llvm11SmallVectorINS9_INS0_5ValueELj6EEELj1EEE:
function _ZNK28ReifyExpandOrCollapseShapeOpIN4mlir6tensor15CollapseShapeOpEE17reifyResultShapesEPNS0_9OperationERNS0_9OpBuilderERN4llvm11SmallVectorINS9_INS0_5ValueELj6EEELj1EEE called 0 returned 0% blocks executed 0%
    #####:  142:  reifyResultShapes(Operation *op, OpBuilder &b,
        -:  143:                    ReifiedRankedShapedTypeDims &reifiedReturnShapes) const {
    #####:  144:    auto loc = op->getLoc();
call    0 never executed
    #####:  145:    auto reshapeOp = cast<OpTy>(op);
call    0 never executed
    #####:  146:    auto resultShape = getReshapeOutputShapeFromInputShape(
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  147:        b, loc, reshapeOp.getSrc(), reshapeOp.getResultType().getShape(),
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  148:        reshapeOp.getReassociationMaps());
    #####:  149:    reifiedReturnShapes.push_back(getAsValues(b, loc, resultShape));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  150:    return success();
branch  0 never executed
branch  1 never executed
        -:  151:  }
------------------
_ZNK28ReifyExpandOrCollapseShapeOpIN4mlir6tensor13ExpandShapeOpEE17reifyResultShapesEPNS0_9OperationERNS0_9OpBuilderERN4llvm11SmallVectorINS9_INS0_5ValueELj6EEELj1EEE:
function _ZNK28ReifyExpandOrCollapseShapeOpIN4mlir6tensor13ExpandShapeOpEE17reifyResultShapesEPNS0_9OperationERNS0_9OpBuilderERN4llvm11SmallVectorINS9_INS0_5ValueELj6EEELj1EEE called 0 returned 0% blocks executed 0%
    #####:  142:  reifyResultShapes(Operation *op, OpBuilder &b,
        -:  143:                    ReifiedRankedShapedTypeDims &reifiedReturnShapes) const {
    #####:  144:    auto loc = op->getLoc();
call    0 never executed
    #####:  145:    auto reshapeOp = cast<OpTy>(op);
call    0 never executed
    #####:  146:    auto resultShape = getReshapeOutputShapeFromInputShape(
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    #####:  147:        b, loc, reshapeOp.getSrc(), reshapeOp.getResultType().getShape(),
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  148:        reshapeOp.getReassociationMaps());
    #####:  149:    reifiedReturnShapes.push_back(getAsValues(b, loc, resultShape));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  150:    return success();
branch  0 never executed
branch  1 never executed
        -:  151:  }
------------------
        -:  152:};
        -:  153:
        -:  154:namespace {
        -:  155:
   262100:  156:struct ReifyPadOp
call    0 returned 100%
        -:  157:    : public ReifyRankedShapedTypeOpInterface::ExternalModel<ReifyPadOp,
        -:  158:                                                             PadOp> {
        -:  159:  LogicalResult
        -:  160:  reifyResultShapes(Operation *op, OpBuilder &b,
        -:  161:                    ReifiedRankedShapedTypeDims &reifiedReturnShapes) const {
        -:  162:    auto padOp = cast<PadOp>(op);
        -:  163:    Location loc = padOp.getLoc();
        -:  164:    auto lowPad = padOp.getMixedLowPad();
        -:  165:    auto highPad = padOp.getMixedHighPad();
        -:  166:    SmallVector<Value> shapes;
        -:  167:    for (auto dim : llvm::seq<int64_t>(0, padOp.getSourceType().getRank())) {
        -:  168:      // Shape along each dimension is source dim + low pad + high pad.
        -:  169:      SmallVector<Value> mapOperands;
        -:  170:      mapOperands.push_back(
        -:  171:          b.createOrFold<tensor::DimOp>(loc, padOp.getSource(), dim));
        -:  172:      AffineExpr expr = b.getAffineDimExpr(0);
        -:  173:      unsigned numSymbols = 0;
function _ZZNK12_GLOBAL__N_110ReifyPadOp17reifyResultShapesEPN4mlir9OperationERNS1_9OpBuilderERN4llvm11SmallVectorINS7_INS1_5ValueELj6EEELj1EEEENKUlNS1_12OpFoldResultEE_clESC_ called 0 returned 0% blocks executed 0%
    #####:  174:      auto addOpFoldResult = [&](OpFoldResult valueOrAttr) {
    #####:  175:        if (Value v = valueOrAttr.dyn_cast<Value>()) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  176:          expr = expr + b.getAffineSymbolExpr(numSymbols++);
call    0 never executed
call    1 never executed
    #####:  177:          mapOperands.push_back(v);
    #####:  178:          return;
call    0 never executed
        -:  179:        }
    #####:  180:        int64_t staticValue =
    #####:  181:            valueOrAttr.get<Attribute>().cast<IntegerAttr>().getInt();
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  182:        expr = expr + staticValue;
call    0 never executed
        -:  183:      };
        -:  184:      addOpFoldResult(lowPad[dim]);
        -:  185:      addOpFoldResult(highPad[dim]);
        -:  186:      shapes.push_back(applyMapToValues(
        -:  187:          b, loc, AffineMap::get(1, numSymbols, expr), mapOperands)[0]);
        -:  188:    }
        -:  189:    reifiedReturnShapes.emplace_back(std::move(shapes));
        -:  190:    return success();
        -:  191:  }
        -:  192:};
        -:  193:
        -:  194:} // namespace
        -:  195:
function _ZN4mlir6tensor42registerInferTypeOpInterfaceExternalModelsERNS_15DialectRegistryE called 325554 returned 100% blocks executed 100%
   325554:  196:void mlir::tensor::registerInferTypeOpInterfaceExternalModels(
        -:  197:    DialectRegistry &registry) {
function _ZZN4mlir6tensor42registerInferTypeOpInterfaceExternalModelsERNS_15DialectRegistryEENKUlPNS_11MLIRContextEPNS0_13TensorDialectEE_clES4_S6_.isra.0 called 262100 returned 100% blocks executed 100%
   587654:  198:  registry.addExtension(+[](MLIRContext *ctx, TensorDialect *dialect) {
call    0 returned 100%
   262100:  199:    ExpandShapeOp::attachInterface<
   262100:  200:        ReifyExpandOrCollapseShapeOp<tensor::ExpandShapeOp>>(*ctx);
call    0 returned 100%
   262100:  201:    CollapseShapeOp::attachInterface<
   262100:  202:        ReifyExpandOrCollapseShapeOp<tensor::CollapseShapeOp>>(*ctx);
call    0 returned 100%
   262100:  203:    PadOp::attachInterface<ReifyPadOp>(*ctx);
call    0 returned 100%
   262100:  204:  });
   325554:  205:}
