        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/Affine/Utils/ViewLikeInterfaceUtils.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Affine/Utils/CMakeFiles/obj.MLIRAffineUtils.dir/ViewLikeInterfaceUtils.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Affine/Utils/CMakeFiles/obj.MLIRAffineUtils.dir/ViewLikeInterfaceUtils.cpp.gcda
        -:    0:Runs:325594
        -:    1://===- ViewLikeInterfaceUtils.cpp -----------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/Affine/ViewLikeInterfaceUtils.h"
        -:   10:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   11:
        -:   12:using namespace mlir;
        -:   13:
function _ZN4mlir27mergeOffsetsSizesAndStridesERNS_9OpBuilderENS_8LocationEN4llvm8ArrayRefINS_12OpFoldResultEEES6_S6_RKNS3_14SmallBitVectorES6_S6_S6_RNS3_11SmallVectorIS5_Lj6EEESC_SC_ called 0 returned 0% blocks executed 0%
    #####:   14:LogicalResult mlir::mergeOffsetsSizesAndStrides(
        -:   15:    OpBuilder &builder, Location loc, ArrayRef<OpFoldResult> producerOffsets,
        -:   16:    ArrayRef<OpFoldResult> producerSizes,
        -:   17:    ArrayRef<OpFoldResult> producerStrides,
        -:   18:    const llvm::SmallBitVector &droppedProducerDims,
        -:   19:    ArrayRef<OpFoldResult> consumerOffsets,
        -:   20:    ArrayRef<OpFoldResult> consumerSizes,
        -:   21:    ArrayRef<OpFoldResult> consumerStrides,
        -:   22:    SmallVector<OpFoldResult> &combinedOffsets,
        -:   23:    SmallVector<OpFoldResult> &combinedSizes,
        -:   24:    SmallVector<OpFoldResult> &combinedStrides) {
    #####:   25:  combinedOffsets.resize(producerOffsets.size());
call    0 never executed
    #####:   26:  combinedSizes.resize(producerOffsets.size());
call    0 never executed
    #####:   27:  combinedStrides.resize(producerOffsets.size());
call    0 never executed
        -:   28:
    #####:   29:  AffineExpr s0, s1, s2;
    #####:   30:  bindSymbols(builder.getContext(), s0, s1, s2);
call    0 never executed
        -:   31:
    #####:   32:  unsigned consumerPos = 0;
    #####:   33:  for (auto i : llvm::seq<unsigned>(0, producerOffsets.size())) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   34:    if (droppedProducerDims.test(i)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   35:      // For dropped dims, get the values from the producer.
    #####:   36:      combinedOffsets[i] = producerOffsets[i];
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   37:      combinedSizes[i] = producerSizes[i];
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   38:      combinedStrides[i] = producerStrides[i];
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   39:      continue;
        -:   40:    }
    #####:   41:    SmallVector<OpFoldResult> offsetSymbols, strideSymbols;
branch  0 never executed
branch  1 never executed
        -:   42:    // The combined offset is computed as
        -:   43:    //    producer_offset + consumer_offset * producer_strides.
    #####:   44:    combinedOffsets[i] = makeComposedFoldedAffineApply(
branch  0 never executed
branch  1 never executed
    #####:   45:        builder, loc, s0 * s1 + s2,
call    0 never executed
    #####:   46:        {consumerOffsets[consumerPos], producerStrides[i], producerOffsets[i]});
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####:   47:    combinedSizes[i] = consumerSizes[consumerPos];
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   48:    // The combined stride is computed as
        -:   49:    //    consumer_stride * producer_stride.
    #####:   50:    combinedStrides[i] = makeComposedFoldedAffineApply(
branch  0 never executed
branch  1 never executed
        -:   51:        builder, loc, s0 * s1,
    #####:   52:        {consumerStrides[consumerPos], producerStrides[i]});
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
        -:   53:
    #####:   54:    consumerPos++;
        -:   55:  }
    #####:   56:  return success();
        -:   57:}
        -:   58:
function _ZN4mlir27mergeOffsetsSizesAndStridesERNS_9OpBuilderENS_8LocationENS_30OffsetSizeAndStrideOpInterfaceES3_RKN4llvm14SmallBitVectorERNS4_11SmallVectorINS_12OpFoldResultELj6EEESB_SB_ called 0 returned 0% blocks executed 0%
    #####:   59:LogicalResult mlir::mergeOffsetsSizesAndStrides(
        -:   60:    OpBuilder &builder, Location loc, OffsetSizeAndStrideOpInterface producer,
        -:   61:    OffsetSizeAndStrideOpInterface consumer,
        -:   62:    const llvm::SmallBitVector &droppedProducerDims,
        -:   63:    SmallVector<OpFoldResult> &combinedOffsets,
        -:   64:    SmallVector<OpFoldResult> &combinedSizes,
        -:   65:    SmallVector<OpFoldResult> &combinedStrides) {
    #####:   66:  SmallVector<OpFoldResult> consumerOffsets = consumer.getMixedOffsets();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:   67:  SmallVector<OpFoldResult> consumerSizes = consumer.getMixedSizes();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:   68:  SmallVector<OpFoldResult> consumerStrides = consumer.getMixedStrides();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:   69:  SmallVector<OpFoldResult> producerOffsets = producer.getMixedOffsets();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:   70:  SmallVector<OpFoldResult> producerSizes = producer.getMixedSizes();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:   71:  SmallVector<OpFoldResult> producerStrides = producer.getMixedStrides();
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:   72:  return mergeOffsetsSizesAndStrides(
call    0 never executed
        -:   73:      builder, loc, producerOffsets, producerSizes, producerStrides,
        -:   74:      droppedProducerDims, consumerOffsets, consumerSizes, consumerStrides,
    #####:   75:      combinedOffsets, combinedSizes, combinedStrides);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   76:}
