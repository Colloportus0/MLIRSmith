        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Conversion/TosaToLinalg/TosaToLinalgNamedPass.cpp
        -:    0:Graph:../tools/mlir/lib/Conversion/TosaToLinalg/CMakeFiles/obj.MLIRTosaToLinalg.dir/TosaToLinalgNamedPass.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Conversion/TosaToLinalg/CMakeFiles/obj.MLIRTosaToLinalg.dir/TosaToLinalgNamedPass.cpp.gcda
        -:    0:Runs:325560
        -:    1://===- TosaToLinalgPass.cpp - Lowering Tosa to Linalg Dialect -------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This transformation pass legalizes Tosa operations to the Linalg dialect.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Conversion/TosaToLinalg/TosaToLinalg.h"
        -:   14:
        -:   15:#include "mlir/Dialect/Arith/IR/Arith.h"
        -:   16:#include "mlir/Dialect/Func/IR/FuncOps.h"
        -:   17:#include "mlir/Dialect/Linalg/IR/Linalg.h"
        -:   18:#include "mlir/Dialect/Math/IR/Math.h"
        -:   19:#include "mlir/Dialect/SCF/IR/SCF.h"
        -:   20:#include "mlir/Dialect/Tensor/IR/Tensor.h"
        -:   21:#include "mlir/Dialect/Tosa/IR/TosaOps.h"
        -:   22:#include "mlir/Dialect/Tosa/Transforms/Passes.h"
        -:   23:#include "mlir/Dialect/Tosa/Utils/QuantUtils.h"
        -:   24:#include "mlir/IR/PatternMatch.h"
        -:   25:#include "mlir/Pass/PassManager.h"
        -:   26:#include "mlir/Transforms/DialectConversion.h"
        -:   27:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   28:
        -:   29:namespace mlir {
        -:   30:#define GEN_PASS_DEF_TOSATOLINALGNAMED
        -:   31:#include "mlir/Conversion/Passes.h.inc"
        -:   32:} // namespace mlir
        -:   33:
        -:   34:using namespace mlir;
        -:   35:
        -:   36:namespace {
  326569*:   37:struct TosaToLinalgNamed
call    0 never executed
call    1 returned 100%
        -:   38:    : public impl::TosaToLinalgNamedBase<TosaToLinalgNamed> {
        -:   39:public:
function _ZNK12_GLOBAL__N_117TosaToLinalgNamed20getDependentDialectsERN4mlir15DialectRegistryE called 1009 returned 100% blocks executed 100%
     1009:   40:  void getDependentDialects(DialectRegistry &registry) const override {
     1009:   41:    registry
        -:   42:        .insert<arith::ArithDialect, linalg::LinalgDialect, math::MathDialect,
     1009:   43:                tensor::TensorDialect, scf::SCFDialect>();
call    0 returned 100%
     1009:   44:  }
        -:   45:
function _ZN12_GLOBAL__N_117TosaToLinalgNamed14runOnOperationEv called 0 returned 0% blocks executed 0%
    #####:   46:  void runOnOperation() override {
    #####:   47:    RewritePatternSet patterns(&getContext());
call    0 never executed
call    1 never executed
    #####:   48:    ConversionTarget target(getContext());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   49:    target.addLegalDialect<linalg::LinalgDialect, tosa::TosaDialect,
    #####:   50:                           tensor::TensorDialect, scf::SCFDialect>();
call    0 never executed
        -:   51:
        -:   52:    // Not every TOSA op can be legalized to linalg.
    #####:   53:    target.addIllegalOp<tosa::Conv2DOp>();
call    0 never executed
    #####:   54:    target.addIllegalOp<tosa::DepthwiseConv2DOp>();
call    0 never executed
    #####:   55:    target.addIllegalOp<tosa::MaxPool2dOp>();
call    0 never executed
    #####:   56:    target.addIllegalOp<tosa::AvgPool2dOp>();
call    0 never executed
    #####:   57:    target.addIllegalOp<tosa::MatMulOp>();
call    0 never executed
    #####:   58:    target.addIllegalOp<tosa::FullyConnectedOp>();
call    0 never executed
        -:   59:
    #####:   60:    target.markUnknownOpDynamicallyLegal([](Operation *) { return true; });
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   61:
    #####:   62:    FunctionOpInterface func = getOperation();
call    0 never executed
    #####:   63:    mlir::tosa::populateTosaToLinalgNamedConversionPatterns(&patterns);
call    0 never executed
    #####:   64:    if (failed(applyFullConversion(func, target, std::move(patterns))))
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    #####:   65:      signalPassFailure();
call    0 never executed
    #####:   66:  }
        -:   67:};
        -:   68:} // namespace
        -:   69:
function _ZN4mlir4tosa23createTosaToLinalgNamedEv called 326569 returned 100% blocks executed 100%
   326569:   70:std::unique_ptr<Pass> mlir::tosa::createTosaToLinalgNamed() {
   326569:   71:  return std::make_unique<TosaToLinalgNamed>();
call    0 returned 100%
        -:   72:}
