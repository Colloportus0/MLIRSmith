        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/X86Vector/IR/X86VectorDialect.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/X86Vector/IR/CMakeFiles/obj.MLIRX86VectorDialect.dir/X86VectorDialect.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/X86Vector/IR/CMakeFiles/obj.MLIRX86VectorDialect.dir/X86VectorDialect.cpp.gcda
        -:    0:Runs:325556
        -:    1://===- X86VectorDialect.cpp - MLIR X86Vector ops implementation -----------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file implements the X86Vector dialect and its operations.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Dialect/X86Vector/X86VectorDialect.h"
        -:   14:#include "mlir/Dialect/LLVMIR/LLVMTypes.h"
        -:   15:#include "mlir/IR/Builders.h"
        -:   16:#include "mlir/IR/OpImplementation.h"
        -:   17:#include "mlir/IR/TypeUtilities.h"
        -:   18:#include "mlir/Interfaces/InferTypeOpInterface.h"
        -:   19:
        -:   20:using namespace mlir;
        -:   21:
        -:   22:#include "mlir/Dialect/X86Vector/X86VectorDialect.cpp.inc"
        -:   23:
function _ZN4mlir9x86vector16X86VectorDialect10initializeEv called 0 returned 0% blocks executed 0%
    #####:   24:void x86vector::X86VectorDialect::initialize() {
    #####:   25:  addOperations<
        -:   26:#define GET_OP_LIST
        -:   27:#include "mlir/Dialect/X86Vector/X86Vector.cpp.inc"
    #####:   28:      >();
call    0 never executed
call    1 never executed
    #####:   29:}
        -:   30:
function _ZN4mlir9x86vector14MaskCompressOp6verifyEv called 0 returned 0% blocks executed 0%
    #####:   31:LogicalResult x86vector::MaskCompressOp::verify() {
    #####:   32:  if (getSrc() && getConstantSrc())
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:   33:    return emitError("cannot use both src and constant_src");
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:   34:
    #####:   35:  if (getSrc() && (getSrc().getType() != getDst().getType()))
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   36:    return emitError("failed to verify that src and dst have same type");
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:   37:
    #####:   38:  if (getConstantSrc() && (getConstantSrc()->getType() != getDst().getType()))
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    #####:   39:    return emitError(
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   40:        "failed to verify that constant_src and dst have same type");
call    0 never executed
        -:   41:
    #####:   42:  return success();
        -:   43:}
        -:   44:
        -:   45:#define GET_OP_CLASSES
        -:   46:#include "mlir/Dialect/X86Vector/X86Vector.cpp.inc"
