        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/tools/mlir-opt/mlir-opt.cpp
        -:    0:Graph:../tools/mlir/tools/mlir-opt/CMakeFiles/mlir-opt.dir/mlir-opt.cpp.gcno
        -:    0:Data:../tools/mlir/tools/mlir-opt/CMakeFiles/mlir-opt.dir/mlir-opt.cpp.gcda
        -:    0:Runs:325545
        -:    1://===- mlir-opt.cpp - MLIR Optimizer Driver -------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// Main entry function for mlir-opt for when built as standalone binary.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/IR/AsmState.h"
        -:   14:#include "mlir/IR/Dialect.h"
        -:   15:#include "mlir/IR/MLIRContext.h"
        -:   16:#include "mlir/InitAllDialects.h"
        -:   17:#include "mlir/InitAllPasses.h"
        -:   18:#include "mlir/Pass/Pass.h"
        -:   19:#include "mlir/Pass/PassManager.h"
        -:   20:#include "mlir/Support/FileUtilities.h"
        -:   21:#include "mlir/Tools/mlir-opt/MlirOptMain.h"
        -:   22:#include "llvm/Support/CommandLine.h"
        -:   23:#include "llvm/Support/InitLLVM.h"
        -:   24:#include "llvm/Support/SourceMgr.h"
        -:   25:#include "llvm/Support/ToolOutputFile.h"
        -:   26:
        -:   27:using namespace llvm;
        -:   28:using namespace mlir;
        -:   29:
        -:   30:// Defined in the test directory, no public header.
        -:   31:namespace mlir {
        -:   32:void registerConvertToTargetEnvPass();
        -:   33:void registerCloneTestPasses();
        -:   34:void registerPassManagerTestPass();
        -:   35:void registerPrintSpirvAvailabilityPass();
        -:   36:void registerShapeFunctionTestPasses();
        -:   37:void registerSideEffectTestPasses();
        -:   38:void registerSliceAnalysisTestPass();
        -:   39:void registerSymbolTestPasses();
        -:   40:void registerRegionTestPasses();
        -:   41:void registerTestAffineDataCopyPass();
        -:   42:void registerTestAffineLoopUnswitchingPass();
        -:   43:void registerTestAllReduceLoweringPass();
        -:   44:void registerTestFunc();
        -:   45:void registerTestGpuMemoryPromotionPass();
        -:   46:void registerTestLoopPermutationPass();
        -:   47:void registerTestMatchers();
        -:   48:void registerTestOperationEqualPass();
        -:   49:void registerTestPrintDefUsePass();
        -:   50:void registerTestPrintInvalidPass();
        -:   51:void registerTestPrintNestingPass();
        -:   52:void registerTestReducer();
        -:   53:void registerTestSpirvEntryPointABIPass();
        -:   54:void registerTestSpirvModuleCombinerPass();
        -:   55:void registerTestTraitsPass();
        -:   56:void registerTosaTestQuantUtilAPIPass();
        -:   57:void registerVectorizerTestPass();
        -:   58:
        -:   59:namespace test {
        -:   60:void registerCommutativityUtils();
        -:   61:void registerConvertCallOpPass();
        -:   62:void registerInliner();
        -:   63:void registerMemRefBoundCheck();
        -:   64:void registerPatternsTestPass();
        -:   65:void registerSimpleParametricTilingPass();
        -:   66:void registerTestAffineLoopParametricTilingPass();
        -:   67:void registerTestArithEmulateWideIntPass();
        -:   68:void registerTestAliasAnalysisPass();
        -:   69:void registerTestBuiltinAttributeInterfaces();
        -:   70:void registerTestCallGraphPass();
        -:   71:void registerTestConstantFold();
        -:   72:void registerTestControlFlowSink();
        -:   73:void registerTestGpuSerializeToCubinPass();
        -:   74:void registerTestGpuSerializeToHsacoPass();
        -:   75:void registerTestDataLayoutQuery();
        -:   76:void registerTestDeadCodeAnalysisPass();
        -:   77:void registerTestDecomposeCallGraphTypes();
        -:   78:void registerTestDiagnosticsPass();
        -:   79:void registerTestDominancePass();
        -:   80:void registerTestDynamicPipelinePass();
        -:   81:void registerTestExpandMathPass();
        -:   82:void registerTestFooAnalysisPass();
        -:   83:void registerTestComposeSubView();
        -:   84:void registerTestMultiBuffering();
        -:   85:void registerTestIntRangeInference();
        -:   86:void registerTestIRVisitorsPass();
        -:   87:void registerTestGenericIRVisitorsPass();
        -:   88:void registerTestGenericIRVisitorsInterruptPass();
        -:   89:void registerTestInterfaces();
        -:   90:void registerTestLastModifiedPass();
        -:   91:void registerTestLinalgDecomposeOps();
        -:   92:void registerTestLinalgElementwiseFusion();
        -:   93:void registerTestLinalgGreedyFusion();
        -:   94:void registerTestLinalgHoisting();
        -:   95:void registerTestLinalgTransforms();
        -:   96:void registerTestLivenessPass();
        -:   97:void registerTestLoopFusion();
        -:   98:void registerTestLoopMappingPass();
        -:   99:void registerTestLoopUnrollingPass();
        -:  100:void registerTestMatchReductionPass();
        -:  101:void registerTestMathAlgebraicSimplificationPass();
        -:  102:void registerTestMathPolynomialApproximationPass();
        -:  103:void registerTestMemRefDependenceCheck();
        -:  104:void registerTestMemRefStrideCalculation();
        -:  105:void registerTestOpaqueLoc();
        -:  106:void registerTestPadFusion();
        -:  107:void registerTestPDLByteCodePass();
        -:  108:void registerTestPDLLPasses();
        -:  109:void registerTestPreparationPassWithAllowedMemrefResults();
        -:  110:void registerTestRecursiveTypesPass();
        -:  111:void registerTestSCFUtilsPass();
        -:  112:void registerTestShapeMappingPass();
        -:  113:void registerTestSliceAnalysisPass();
        -:  114:void registerTestTensorTransforms();
        -:  115:void registerTestTilingInterface();
        -:  116:void registerTestTopologicalSortAnalysisPass();
        -:  117:void registerTestTransformDialectEraseSchedulePass();
        -:  118:void registerTestTransformDialectInterpreterPass();
        -:  119:void registerTestVectorLowerings();
        -:  120:void registerTestNvgpuLowerings();
        -:  121:} // namespace test
        -:  122:} // namespace mlir
        -:  123:
        -:  124:namespace test {
        -:  125:void registerTestDialect(DialectRegistry &);
        -:  126:void registerTestTransformDialectExtension(DialectRegistry &);
        -:  127:void registerTestDynDialect(DialectRegistry &);
        -:  128:} // namespace test
        -:  129:
        -:  130:#ifdef MLIR_INCLUDE_TESTS
function _Z18registerTestPassesv called 325545 returned 100% blocks executed 100%
   325545:  131:void registerTestPasses() {
   325545:  132:  registerCloneTestPasses();
call    0 returned 100%
   325545:  133:  registerConvertToTargetEnvPass();
call    0 returned 100%
   325545:  134:  registerPassManagerTestPass();
call    0 returned 100%
   325545:  135:  registerPrintSpirvAvailabilityPass();
call    0 returned 100%
   325545:  136:  registerShapeFunctionTestPasses();
call    0 returned 100%
   325545:  137:  registerSideEffectTestPasses();
call    0 returned 100%
   325545:  138:  registerSliceAnalysisTestPass();
call    0 returned 100%
   325545:  139:  registerSymbolTestPasses();
call    0 returned 100%
   325545:  140:  registerRegionTestPasses();
call    0 returned 100%
   325545:  141:  registerTestAffineDataCopyPass();
call    0 returned 100%
   325545:  142:  registerTestAffineLoopUnswitchingPass();
call    0 returned 100%
   325545:  143:  registerTestAllReduceLoweringPass();
call    0 returned 100%
   325545:  144:  registerTestFunc();
call    0 returned 100%
   325545:  145:  registerTestGpuMemoryPromotionPass();
call    0 returned 100%
   325545:  146:  registerTestLoopPermutationPass();
call    0 returned 100%
   325545:  147:  registerTestMatchers();
call    0 returned 100%
   325545:  148:  registerTestOperationEqualPass();
call    0 returned 100%
   325545:  149:  registerTestPrintDefUsePass();
call    0 returned 100%
   325545:  150:  registerTestPrintInvalidPass();
call    0 returned 100%
   325545:  151:  registerTestPrintNestingPass();
call    0 returned 100%
   325545:  152:  registerTestReducer();
call    0 returned 100%
   325545:  153:  registerTestSpirvEntryPointABIPass();
call    0 returned 100%
   325545:  154:  registerTestSpirvModuleCombinerPass();
call    0 returned 100%
   325545:  155:  registerTestTraitsPass();
call    0 returned 100%
   325545:  156:  registerVectorizerTestPass();
call    0 returned 100%
   325545:  157:  registerTosaTestQuantUtilAPIPass();
call    0 returned 100%
        -:  158:
   325545:  159:  mlir::test::registerCommutativityUtils();
call    0 returned 100%
   325545:  160:  mlir::test::registerConvertCallOpPass();
call    0 returned 100%
   325545:  161:  mlir::test::registerInliner();
call    0 returned 100%
   325545:  162:  mlir::test::registerMemRefBoundCheck();
call    0 returned 100%
   325545:  163:  mlir::test::registerPatternsTestPass();
call    0 returned 100%
   325545:  164:  mlir::test::registerSimpleParametricTilingPass();
call    0 returned 100%
   325545:  165:  mlir::test::registerTestAffineLoopParametricTilingPass();
call    0 returned 100%
   325545:  166:  mlir::test::registerTestAliasAnalysisPass();
call    0 returned 100%
   325545:  167:  mlir::test::registerTestArithEmulateWideIntPass();
call    0 returned 100%
   325545:  168:  mlir::test::registerTestBuiltinAttributeInterfaces();
call    0 returned 100%
   325545:  169:  mlir::test::registerTestCallGraphPass();
call    0 returned 100%
   325545:  170:  mlir::test::registerTestConstantFold();
call    0 returned 100%
   325545:  171:  mlir::test::registerTestControlFlowSink();
call    0 returned 100%
   325545:  172:  mlir::test::registerTestDiagnosticsPass();
call    0 returned 100%
        -:  173:#if MLIR_CUDA_CONVERSIONS_ENABLED
   325545:  174:  mlir::test::registerTestGpuSerializeToCubinPass();
call    0 returned 100%
        -:  175:#endif
        -:  176:#if MLIR_ROCM_CONVERSIONS_ENABLED
   325545:  177:  mlir::test::registerTestGpuSerializeToHsacoPass();
call    0 returned 100%
        -:  178:#endif
   325545:  179:  mlir::test::registerTestDecomposeCallGraphTypes();
call    0 returned 100%
   325545:  180:  mlir::test::registerTestDataLayoutQuery();
call    0 returned 100%
   325545:  181:  mlir::test::registerTestDeadCodeAnalysisPass();
call    0 returned 100%
   325545:  182:  mlir::test::registerTestDominancePass();
call    0 returned 100%
   325545:  183:  mlir::test::registerTestDynamicPipelinePass();
call    0 returned 100%
   325545:  184:  mlir::test::registerTestExpandMathPass();
call    0 returned 100%
   325545:  185:  mlir::test::registerTestFooAnalysisPass();
call    0 returned 100%
   325545:  186:  mlir::test::registerTestComposeSubView();
call    0 returned 100%
   325545:  187:  mlir::test::registerTestMultiBuffering();
call    0 returned 100%
   325545:  188:  mlir::test::registerTestIntRangeInference();
call    0 returned 100%
   325545:  189:  mlir::test::registerTestIRVisitorsPass();
call    0 returned 100%
   325545:  190:  mlir::test::registerTestGenericIRVisitorsPass();
call    0 returned 100%
   325545:  191:  mlir::test::registerTestInterfaces();
call    0 returned 100%
   325545:  192:  mlir::test::registerTestLastModifiedPass();
call    0 returned 100%
   325545:  193:  mlir::test::registerTestLinalgDecomposeOps();
call    0 returned 100%
   325545:  194:  mlir::test::registerTestLinalgElementwiseFusion();
call    0 returned 100%
   325545:  195:  mlir::test::registerTestLinalgGreedyFusion();
call    0 returned 100%
   325545:  196:  mlir::test::registerTestLinalgHoisting();
call    0 returned 100%
   325545:  197:  mlir::test::registerTestLinalgTransforms();
call    0 returned 100%
   325545:  198:  mlir::test::registerTestLivenessPass();
call    0 returned 100%
   325545:  199:  mlir::test::registerTestLoopFusion();
call    0 returned 100%
   325545:  200:  mlir::test::registerTestLoopMappingPass();
call    0 returned 100%
   325545:  201:  mlir::test::registerTestLoopUnrollingPass();
call    0 returned 100%
   325545:  202:  mlir::test::registerTestMatchReductionPass();
call    0 returned 100%
   325545:  203:  mlir::test::registerTestMathAlgebraicSimplificationPass();
call    0 returned 100%
   325545:  204:  mlir::test::registerTestMathPolynomialApproximationPass();
call    0 returned 100%
   325545:  205:  mlir::test::registerTestMemRefDependenceCheck();
call    0 returned 100%
   325545:  206:  mlir::test::registerTestMemRefStrideCalculation();
call    0 returned 100%
   325545:  207:  mlir::test::registerTestOpaqueLoc();
call    0 returned 100%
   325545:  208:  mlir::test::registerTestPadFusion();
call    0 returned 100%
   325545:  209:  mlir::test::registerTestPDLByteCodePass();
call    0 returned 100%
   325545:  210:  mlir::test::registerTestPDLLPasses();
call    0 returned 100%
   325545:  211:  mlir::test::registerTestRecursiveTypesPass();
call    0 returned 100%
   325545:  212:  mlir::test::registerTestSCFUtilsPass();
call    0 returned 100%
   325545:  213:  mlir::test::registerTestShapeMappingPass();
call    0 returned 100%
   325545:  214:  mlir::test::registerTestSliceAnalysisPass();
call    0 returned 100%
   325545:  215:  mlir::test::registerTestTensorTransforms();
call    0 returned 100%
   325545:  216:  mlir::test::registerTestTilingInterface();
call    0 returned 100%
   325545:  217:  mlir::test::registerTestTopologicalSortAnalysisPass();
call    0 returned 100%
   325545:  218:  mlir::test::registerTestTransformDialectEraseSchedulePass();
call    0 returned 100%
   325545:  219:  mlir::test::registerTestTransformDialectInterpreterPass();
call    0 returned 100%
   325545:  220:  mlir::test::registerTestVectorLowerings();
call    0 returned 100%
   325545:  221:  mlir::test::registerTestNvgpuLowerings();
call    0 returned 100%
   325545:  222:}
        -:  223:#endif
        -:  224:
function main called 325545 returned 81% blocks executed 100%
   325545:  225:int main(int argc, char **argv) {
   325545:  226:  registerAllPasses();
call    0 returned 100%
        -:  227:#ifdef MLIR_INCLUDE_TESTS
   325545:  228:  registerTestPasses();
call    0 returned 100%
        -:  229:#endif
   325545:  230:  DialectRegistry registry;
call    0 returned 100%
   325545:  231:  registerAllDialects(registry);
call    0 returned 100%
        -:  232:#ifdef MLIR_INCLUDE_TESTS
   325545:  233:  ::test::registerTestDialect(registry);
call    0 returned 100%
   325545:  234:  ::test::registerTestTransformDialectExtension(registry);
call    0 returned 100%
   325545:  235:  ::test::registerTestDynDialect(registry);
call    0 returned 100%
        -:  236:#endif
   588848:  237:  return mlir::asMainReturnCode(
call    0 returned 81%
call    1 returned 100%
        -:  238:      mlir::MlirOptMain(argc, argv, "MLIR modular optimizer driver\n", registry,
        -:  239:                        /*preloadDialectsInContext=*/false));
        -:  240:}
