        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/Transforms/TestCommutativityUtils.cpp
        -:    0:Graph:../tools/mlir/test/lib/Transforms/CMakeFiles/MLIRTestTransforms.dir/TestCommutativityUtils.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Transforms/CMakeFiles/MLIRTestTransforms.dir/TestCommutativityUtils.cpp.gcda
        -:    0:Runs:325561
        -:    1://===- TestCommutativityUtils.cpp - Pass to test the commutativity utility-===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This pass tests the functionality of the commutativity utility pattern.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Transforms/CommutativityUtils.h"
        -:   14:
        -:   15:#include "TestDialect.h"
        -:   16:#include "mlir/Pass/Pass.h"
        -:   17:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   18:
        -:   19:using namespace mlir;
        -:   20:
        -:   21:namespace {
        -:   22:
   388393:   23:struct CommutativityUtils
call    0 returned 100%
call    1 returned 100%
        -:   24:    : public PassWrapper<CommutativityUtils, OperationPass<func::FuncOp>> {
function _ZN12_GLOBAL__N_118CommutativityUtils13resolveTypeIDEv called 326617 returned 100% blocks executed 100%
   326617:   25:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(CommutativityUtils)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   26:
function _ZNK12_GLOBAL__N_118CommutativityUtils11getArgumentEv called 325588 returned 100% blocks executed 100%
   325588:   27:  StringRef getArgument() const final { return "test-commutativity-utils"; }
function _ZNK12_GLOBAL__N_118CommutativityUtils14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:   28:  StringRef getDescription() const final {
   325561:   29:    return "Test the functionality of the commutativity utility";
        -:   30:  }
        -:   31:
function _ZN12_GLOBAL__N_118CommutativityUtils14runOnOperationEv called 878 returned 100% blocks executed 100%
      878:   32:  void runOnOperation() override {
      878:   33:    auto func = getOperation();
call    0 returned 100%
      879:   34:    auto *context = &getContext();
call    0 returned 100%
        -:   35:
      879:   36:    RewritePatternSet patterns(context);
call    0 returned 100%
      879:   37:    populateCommutativityUtilsPatterns(patterns);
call    0 returned 100%
        -:   38:
      878:   39:    (void)applyPatternsAndFoldGreedily(func, std::move(patterns));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
      878:   40:  }
        -:   41:};
        -:   42:} // namespace
        -:   43:
        -:   44:namespace mlir {
        -:   45:namespace test {
function _ZN4mlir4test26registerCommutativityUtilsEv called 325561 returned 100% blocks executed 100%
   325561:   46:void registerCommutativityUtils() { PassRegistration<CommutativityUtils>(); }
call    0 returned 100%
        -:   47:} // namespace test
        -:   48:} // namespace mlir
