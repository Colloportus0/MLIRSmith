        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/IR/TestFunc.cpp
        -:    0:Graph:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestFunc.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/IR/CMakeFiles/MLIRTestIR.dir/TestFunc.cpp.gcda
        -:    0:Runs:325561
        -:    1://===- TestFunc.cpp - Pass to test helpers on function utilities ----------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/IR/BuiltinOps.h"
        -:   10:#include "mlir/IR/FunctionInterfaces.h"
        -:   11:#include "mlir/Pass/Pass.h"
        -:   12:
        -:   13:using namespace mlir;
        -:   14:
        -:   15:namespace {
        -:   16:/// This is a test pass for verifying FunctionOpInterface's insertArgument
        -:   17:/// method.
  326614*:   18:struct TestFuncInsertArg
call    0 never executed
call    1 returned 100%
        -:   19:    : public PassWrapper<TestFuncInsertArg, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_117TestFuncInsertArg13resolveTypeIDEv called 326614 returned 100% blocks executed 100%
   326614:   20:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestFuncInsertArg)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   21:
function _ZNK12_GLOBAL__N_117TestFuncInsertArg11getArgumentEv called 325602 returned 100% blocks executed 100%
   325602:   22:  StringRef getArgument() const final { return "test-func-insert-arg"; }
function _ZNK12_GLOBAL__N_117TestFuncInsertArg14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:   23:  StringRef getDescription() const final { return "Test inserting func args."; }
function _ZN12_GLOBAL__N_117TestFuncInsertArg14runOnOperationEv called 837 returned 100% blocks executed 23%
      837:   24:  void runOnOperation() override {
      837:   25:    auto module = getOperation();
call    0 returned 100%
        -:   26:
      837:   27:    UnknownLoc unknownLoc = UnknownLoc::get(module.getContext());
call    0 returned 100%
call    1 returned 100%
     2691:   28:    for (auto func : module.getOps<FunctionOpInterface>()) {
call    0 returned 100%
branch  1 taken 53% (fallthrough)
branch  2 taken 47%
call    3 returned 100%
call    4 returned 100%
      927:   29:      auto inserts = func->getAttrOfType<ArrayAttr>("test.insert_args");
call    0 returned 100%
     927*:   30:      if (!inserts || inserts.empty())
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
      927:   31:        continue;
    #####:   32:      SmallVector<unsigned, 4> indicesToInsert;
call    0 never executed
    #####:   33:      SmallVector<Type, 4> typesToInsert;
branch  0 never executed
branch  1 never executed
    #####:   34:      SmallVector<DictionaryAttr, 4> attrsToInsert;
branch  0 never executed
branch  1 never executed
    #####:   35:      SmallVector<Location, 4> locsToInsert;
branch  0 never executed
branch  1 never executed
    #####:   36:      for (auto insert : inserts.getAsRange<ArrayAttr>()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   37:        indicesToInsert.push_back(
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   38:            insert[0].cast<IntegerAttr>().getValue().getZExtValue());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   39:        typesToInsert.push_back(insert[1].cast<TypeAttr>().getValue());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   40:        attrsToInsert.push_back(insert.size() > 2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   41:                                    ? insert[2].cast<DictionaryAttr>()
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   42:                                    : DictionaryAttr::get(&getContext()));
call    0 never executed
call    1 never executed
    #####:   43:        locsToInsert.push_back(insert.size() > 3
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
    #####:   44:                                   ? Location(insert[3].cast<LocationAttr>())
call    0 never executed
call    1 never executed
        -:   45:                                   : unknownLoc);
        -:   46:      }
    #####:   47:      func->removeAttr("test.insert_args");
call    0 never executed
    #####:   48:      func.insertArguments(indicesToInsert, typesToInsert, attrsToInsert,
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   49:                           locsToInsert);
        -:   50:    }
      837:   51:  }
        -:   52:};
        -:   53:
        -:   54:/// This is a test pass for verifying FunctionOpInterface's insertResult method.
  326626*:   55:struct TestFuncInsertResult
call    0 never executed
call    1 returned 100%
        -:   56:    : public PassWrapper<TestFuncInsertResult, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_120TestFuncInsertResult13resolveTypeIDEv called 326626 returned 100% blocks executed 100%
   326626:   57:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestFuncInsertResult)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   58:
function _ZNK12_GLOBAL__N_120TestFuncInsertResult11getArgumentEv called 325599 returned 100% blocks executed 100%
   325599:   59:  StringRef getArgument() const final { return "test-func-insert-result"; }
function _ZNK12_GLOBAL__N_120TestFuncInsertResult14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:   60:  StringRef getDescription() const final {
   325561:   61:    return "Test inserting func results.";
        -:   62:  }
function _ZN12_GLOBAL__N_120TestFuncInsertResult14runOnOperationEv called 876 returned 100% blocks executed 24%
      876:   63:  void runOnOperation() override {
      876:   64:    auto module = getOperation();
call    0 returned 100%
        -:   65:
     2812:   66:    for (auto func : module.getOps<FunctionOpInterface>()) {
call    0 returned 100%
branch  1 taken 52% (fallthrough)
branch  2 taken 48%
call    3 returned 100%
call    4 returned 100%
      968:   67:      auto inserts = func->getAttrOfType<ArrayAttr>("test.insert_results");
call    0 returned 100%
     968*:   68:      if (!inserts || inserts.empty())
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
      968:   69:        continue;
    #####:   70:      SmallVector<unsigned, 4> indicesToInsert;
call    0 never executed
    #####:   71:      SmallVector<Type, 4> typesToInsert;
branch  0 never executed
branch  1 never executed
    #####:   72:      SmallVector<DictionaryAttr, 4> attrsToInsert;
branch  0 never executed
branch  1 never executed
    #####:   73:      for (auto insert : inserts.getAsRange<ArrayAttr>()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   74:        indicesToInsert.push_back(
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   75:            insert[0].cast<IntegerAttr>().getValue().getZExtValue());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   76:        typesToInsert.push_back(insert[1].cast<TypeAttr>().getValue());
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:   77:        attrsToInsert.push_back(insert.size() > 2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   78:                                    ? insert[2].cast<DictionaryAttr>()
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   79:                                    : DictionaryAttr::get(&getContext()));
call    0 never executed
call    1 never executed
        -:   80:      }
    #####:   81:      func->removeAttr("test.insert_results");
call    0 never executed
    #####:   82:      func.insertResults(indicesToInsert, typesToInsert, attrsToInsert);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   83:    }
      876:   84:  }
        -:   85:};
        -:   86:
        -:   87:/// This is a test pass for verifying FunctionOpInterface's eraseArgument
        -:   88:/// method.
  326633*:   89:struct TestFuncEraseArg
call    0 never executed
call    1 returned 100%
        -:   90:    : public PassWrapper<TestFuncEraseArg, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_116TestFuncEraseArg13resolveTypeIDEv called 326633 returned 100% blocks executed 100%
   326633:   91:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestFuncEraseArg)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   92:
function _ZNK12_GLOBAL__N_116TestFuncEraseArg11getArgumentEv called 325598 returned 100% blocks executed 100%
   325598:   93:  StringRef getArgument() const final { return "test-func-erase-arg"; }
function _ZNK12_GLOBAL__N_116TestFuncEraseArg14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:   94:  StringRef getDescription() const final { return "Test erasing func args."; }
function _ZN12_GLOBAL__N_116TestFuncEraseArg14runOnOperationEv called 858 returned 100% blocks executed 88%
      858:   95:  void runOnOperation() override {
      858:   96:    auto module = getOperation();
call    0 returned 100%
        -:   97:
     1719:   98:    for (auto func : module.getOps<FunctionOpInterface>()) {
call    0 returned 100%
branch  1 taken 50% (fallthrough)
branch  2 taken 50%
call    3 returned 100%
     1722:   99:      BitVector indicesToErase(func.getNumArguments());
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
     4333:  100:      for (auto argIndex : llvm::seq<int>(0, func.getNumArguments()))
call    0 returned 100%
call    1 returned 100%
branch  2 taken 67% (fallthrough)
branch  3 taken 33%
call    4 returned 100%
     1736:  101:        if (func.getArgAttr(argIndex, "test.erase_this_arg"))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  102:          indicesToErase.set(argIndex);
call    0 never executed
      861:  103:      func.eraseArguments(indicesToErase);
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  104:    }
      858:  105:  }
        -:  106:};
        -:  107:
        -:  108:/// This is a test pass for verifying FunctionOpInterface's eraseResult method.
  326640*:  109:struct TestFuncEraseResult
call    0 never executed
call    1 returned 100%
        -:  110:    : public PassWrapper<TestFuncEraseResult, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_119TestFuncEraseResult13resolveTypeIDEv called 326640 returned 100% blocks executed 100%
   326640:  111:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestFuncEraseResult)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:  112:
function _ZNK12_GLOBAL__N_119TestFuncEraseResult11getArgumentEv called 325601 returned 100% blocks executed 100%
   325601:  113:  StringRef getArgument() const final { return "test-func-erase-result"; }
function _ZNK12_GLOBAL__N_119TestFuncEraseResult14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:  114:  StringRef getDescription() const final {
   325561:  115:    return "Test erasing func results.";
        -:  116:  }
function _ZN12_GLOBAL__N_119TestFuncEraseResult14runOnOperationEv called 886 returned 100% blocks executed 88%
      886:  117:  void runOnOperation() override {
      886:  118:    auto module = getOperation();
call    0 returned 100%
        -:  119:
     1884:  120:    for (auto func : module.getOps<FunctionOpInterface>()) {
call    0 returned 100%
branch  1 taken 53% (fallthrough)
branch  2 taken 47%
call    3 returned 100%
     1996:  121:      BitVector indicesToErase(func.getNumResults());
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
     5180:  122:      for (auto resultIndex : llvm::seq<int>(0, func.getNumResults()))
call    0 returned 100%
call    1 returned 100%
branch  2 taken 68% (fallthrough)
branch  3 taken 32%
call    4 returned 100%
     2091:  123:        if (func.getResultAttr(resultIndex, "test.erase_this_result"))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  124:          indicesToErase.set(resultIndex);
call    0 never executed
      998:  125:      func.eraseResults(indicesToErase);
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:  126:    }
      886:  127:  }
        -:  128:};
        -:  129:
        -:  130:/// This is a test pass for verifying FunctionOpInterface's setType method.
  326636*:  131:struct TestFuncSetType
call    0 never executed
call    1 returned 100%
        -:  132:    : public PassWrapper<TestFuncSetType, OperationPass<ModuleOp>> {
function _ZN12_GLOBAL__N_115TestFuncSetType13resolveTypeIDEv called 326636 returned 100% blocks executed 100%
   326636:  133:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestFuncSetType)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:  134:
function _ZNK12_GLOBAL__N_115TestFuncSetType11getArgumentEv called 325595 returned 100% blocks executed 100%
   325595:  135:  StringRef getArgument() const final { return "test-func-set-type"; }
function _ZNK12_GLOBAL__N_115TestFuncSetType14getDescriptionEv called 325561 returned 100% blocks executed 100%
   325561:  136:  StringRef getDescription() const final {
   325561:  137:    return "Test FunctionOpInterface::setType.";
        -:  138:  }
function _ZN12_GLOBAL__N_115TestFuncSetType14runOnOperationEv called 872 returned 100% blocks executed 74%
      872:  139:  void runOnOperation() override {
      872:  140:    auto module = getOperation();
call    0 returned 100%
      872:  141:    SymbolTable symbolTable(module);
call    0 returned 100%
        -:  142:
     2936:  143:    for (auto func : module.getOps<FunctionOpInterface>()) {
call    0 returned 100%
branch  1 taken 54% (fallthrough)
branch  2 taken 46%
call    3 returned 100%
call    4 returned 100%
     1032:  144:      auto sym = func->getAttrOfType<FlatSymbolRefAttr>("test.set_type_from");
call    0 returned 100%
     1032:  145:      if (!sym)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     1032:  146:        continue;
    #####:  147:      func.setType(symbolTable.lookup<FunctionOpInterface>(sym.getValue())
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
        -:  148:                       .getFunctionType());
        -:  149:    }
      872:  150:  }
        -:  151:};
        -:  152:} // namespace
        -:  153:
        -:  154:namespace mlir {
function _ZN4mlir16registerTestFuncEv called 325561 returned 100% blocks executed 100%
   325561:  155:void registerTestFunc() {
   325561:  156:  PassRegistration<TestFuncInsertArg>();
call    0 returned 100%
        -:  157:
   325561:  158:  PassRegistration<TestFuncInsertResult>();
call    0 returned 100%
        -:  159:
   325561:  160:  PassRegistration<TestFuncEraseArg>();
call    0 returned 100%
        -:  161:
   325561:  162:  PassRegistration<TestFuncEraseResult>();
call    0 returned 100%
        -:  163:
   325561:  164:  PassRegistration<TestFuncSetType>();
call    0 returned 100%
   325561:  165:}
        -:  166:} // namespace mlir
