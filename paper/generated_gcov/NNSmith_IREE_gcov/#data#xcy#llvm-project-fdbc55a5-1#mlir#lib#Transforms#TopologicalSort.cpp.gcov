        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Transforms/TopologicalSort.cpp
        -:    0:Graph:../tools/mlir/lib/Transforms/CMakeFiles/obj.MLIRTransforms.dir/TopologicalSort.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Transforms/CMakeFiles/obj.MLIRTransforms.dir/TopologicalSort.cpp.gcda
        -:    0:Runs:325564
        -:    1://===- TopologicalSort.cpp - Topological sort pass ------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Transforms/Passes.h"
        -:   10:
        -:   11:#include "mlir/IR/RegionKindInterface.h"
        -:   12:#include "mlir/Transforms/TopologicalSortUtils.h"
        -:   13:
        -:   14:namespace mlir {
        -:   15:#define GEN_PASS_DEF_TOPOLOGICALSORT
        -:   16:#include "mlir/Transforms/Passes.h.inc"
        -:   17:} // namespace mlir
        -:   18:
        -:   19:using namespace mlir;
        -:   20:
        -:   21:namespace {
  326607*:   22:struct TopologicalSortPass
call    0 never executed
call    1 returned 100%
        -:   23:    : public impl::TopologicalSortBase<TopologicalSortPass> {
function _ZN12_GLOBAL__N_119TopologicalSortPass14runOnOperationEv called 854 returned 100% blocks executed 75%
      854:   24:  void runOnOperation() override {
        -:   25:    // Topologically sort the regions of the operation without SSA dominance.
function _ZZN12_GLOBAL__N_119TopologicalSortPass14runOnOperationEvENKUlN4mlir19RegionKindInterfaceEE_clES2_.isra.0 called 860 returned 100% blocks executed 88%
     1714:   26:    getOperation()->walk([](RegionKindInterface op) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 returned 100%
     2580:   27:      for (auto &it : llvm::enumerate(op->getRegions())) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
call    4 returned 100%
     860*:   28:        if (op.hasSSADominance(it.index()))
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   29:          continue;
     1720:   30:        for (Block &block : it.value())
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
      860:   31:          sortTopologically(&block);
call    0 returned 100%
        -:   32:      }
      860:   33:    });
      854:   34:  }
        -:   35:};
        -:   36:} // end anonymous namespace
        -:   37:
function _ZN4mlir25createTopologicalSortPassEv called 326607 returned 100% blocks executed 100%
   326607:   38:std::unique_ptr<Pass> mlir::createTopologicalSortPass() {
   326607:   39:  return std::make_unique<TopologicalSortPass>();
call    0 returned 100%
        -:   40:}
