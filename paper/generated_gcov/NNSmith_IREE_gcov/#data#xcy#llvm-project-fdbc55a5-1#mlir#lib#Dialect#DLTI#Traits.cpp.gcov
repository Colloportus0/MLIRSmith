        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/DLTI/Traits.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/DLTI/CMakeFiles/obj.MLIRDLTIDialect.dir/Traits.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/DLTI/CMakeFiles/obj.MLIRDLTIDialect.dir/Traits.cpp.gcda
        -:    0:Runs:325594
        -:    1://===- Traits.cpp - Traits for MLIR DLTI dialect --------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/DLTI/Traits.h"
        -:   10:#include "mlir/Dialect/DLTI/DLTI.h"
        -:   11:#include "mlir/Interfaces/DataLayoutInterfaces.h"
        -:   12:
        -:   13:using namespace mlir;
        -:   14:
function _ZN4mlir4impl35verifyHasDefaultDLTIDataLayoutTraitEPNS_9OperationE called 0 returned 0% blocks executed 0%
    #####:   15:LogicalResult mlir::impl::verifyHasDefaultDLTIDataLayoutTrait(Operation *op) {
        -:   16:  // TODO: consider having trait inheritance so that HasDefaultDLTIDataLayout
        -:   17:  // trait can inherit DataLayoutOpInterface::Trait and enforce the validity of
        -:   18:  // the assertion below.
    #####:   19:  assert(
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
        -:   20:      isa<DataLayoutOpInterface>(op) &&
        -:   21:      "HasDefaultDLTIDataLayout trait unexpectedly attached to an op that does "
        -:   22:      "not implement DataLayoutOpInterface");
    #####:   23:  return success();
        -:   24:}
        -:   25:
function _ZN4mlir4impl17getDataLayoutSpecEPNS_9OperationE called 0 returned 0% blocks executed 0%
    #####:   26:DataLayoutSpecInterface mlir::impl::getDataLayoutSpec(Operation *op) {
    #####:   27:  return op->getAttrOfType<DataLayoutSpecAttr>(
    #####:   28:      DLTIDialect::kDataLayoutAttrName);
call    0 never executed
call    1 never executed
        -:   29:}
