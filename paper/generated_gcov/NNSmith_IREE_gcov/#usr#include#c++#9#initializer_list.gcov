        -:    0:Source:/usr/include/c++/9/initializer_list
        -:    0:Graph:../tools/mlir/lib/Target/LLVMIR/Dialect/LLVMIR/CMakeFiles/obj.MLIRLLVMToLLVMIRTranslation.dir/LLVMToLLVMIRTranslation.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Target/LLVMIR/Dialect/LLVMIR/CMakeFiles/obj.MLIRLLVMToLLVMIRTranslation.dir/LLVMToLLVMIRTranslation.cpp.gcda
        -:    0:Runs:325580
        -:    1:// std::initializer_list support -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2008-2019 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of GCC.
        -:    6://
        -:    7:// GCC is free software; you can redistribute it and/or modify
        -:    8:// it under the terms of the GNU General Public License as published by
        -:    9:// the Free Software Foundation; either version 3, or (at your option)
        -:   10:// any later version.
        -:   11://
        -:   12:// GCC is distributed in the hope that it will be useful,
        -:   13:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:// GNU General Public License for more details.
        -:   16://
        -:   17:// Under Section 7 of GPL version 3, you are granted additional
        -:   18:// permissions described in the GCC Runtime Library Exception, version
        -:   19:// 3.1, as published by the Free Software Foundation.
        -:   20:
        -:   21:// You should have received a copy of the GNU General Public License and
        -:   22:// a copy of the GCC Runtime Library Exception along with this program;
        -:   23:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   24:// <http://www.gnu.org/licenses/>.
        -:   25:
        -:   26:/** @file initializer_list
        -:   27: *  This is a Standard C++ Library header.
        -:   28: */
        -:   29:
        -:   30:#ifndef _INITIALIZER_LIST
        -:   31:#define _INITIALIZER_LIST
        -:   32:
        -:   33:#pragma GCC system_header
        -:   34:
        -:   35:#if __cplusplus < 201103L
        -:   36:# include <bits/c++0x_warning.h>
        -:   37:#else // C++0x
        -:   38:
        -:   39:#pragma GCC visibility push(default)
        -:   40:
        -:   41:#include <bits/c++config.h>
        -:   42:
        -:   43:namespace std
        -:   44:{
        -:   45:  /// initializer_list
        -:   46:  template<class _E>
        -:   47:    class initializer_list
        -:   48:    {
        -:   49:    public:
        -:   50:      typedef _E 		value_type;
        -:   51:      typedef const _E& 	reference;
        -:   52:      typedef const _E& 	const_reference;
        -:   53:      typedef size_t 		size_type;
        -:   54:      typedef const _E* 	iterator;
        -:   55:      typedef const _E* 	const_iterator;
        -:   56:
        -:   57:    private:
        -:   58:      iterator			_M_array;
        -:   59:      size_type			_M_len;
        -:   60:
        -:   61:      // The compiler can call a private constructor.
        -:   62:      constexpr initializer_list(const_iterator __a, size_type __l)
        -:   63:      : _M_array(__a), _M_len(__l) { }
        -:   64:
        -:   65:    public:
        -:   66:      constexpr initializer_list() noexcept
        -:   67:      : _M_array(0), _M_len(0) { }
        -:   68:
        -:   69:      // Number of elements.
        -:   70:      constexpr size_type
    #####:   71:      size() const noexcept { return _M_len; }
        -:   72:
        -:   73:      // First element.
        -:   74:      constexpr const_iterator
    #####:   75:      begin() const noexcept { return _M_array; }
call    0 never executed
        -:   76:
        -:   77:      // One past the last element.
        -:   78:      constexpr const_iterator
    #####:   79:      end() const noexcept { return begin() + size(); }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
branch 27 never executed
branch 28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
call   42 never executed
call   43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
call   56 never executed
call   57 never executed
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
call   64 never executed
call   65 never executed
call   66 never executed
call   67 never executed
call   68 never executed
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
call   75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
call   81 never executed
call   82 never executed
call   83 never executed
call   84 never executed
call   85 never executed
call   86 never executed
call   87 never executed
call   88 never executed
call   89 never executed
call   90 never executed
call   91 never executed
call   92 never executed
call   93 never executed
call   94 never executed
call   95 never executed
call   96 never executed
call   97 never executed
call   98 never executed
call   99 never executed
call   100 never executed
call   101 never executed
call   102 never executed
call   103 never executed
call   104 never executed
call   105 never executed
call   106 never executed
call   107 never executed
call   108 never executed
call   109 never executed
call   110 never executed
call   111 never executed
call   112 never executed
call   113 never executed
call   114 never executed
call   115 never executed
call   116 never executed
call   117 never executed
call   118 never executed
call   119 never executed
call   120 never executed
call   121 never executed
call   122 never executed
call   123 never executed
call   124 never executed
call   125 never executed
call   126 never executed
call   127 never executed
call   128 never executed
        -:   80:    };
        -:   81:
        -:   82:  /**
        -:   83:   *  @brief  Return an iterator pointing to the first element of
        -:   84:   *          the initializer_list.
        -:   85:   *  @param  __ils  Initializer list.
        -:   86:   */
        -:   87:  template<class _Tp>
        -:   88:    constexpr const _Tp*
        -:   89:    begin(initializer_list<_Tp> __ils) noexcept
        -:   90:    { return __ils.begin(); }
        -:   91:
        -:   92:  /**
        -:   93:   *  @brief  Return an iterator pointing to one past the last element
        -:   94:   *          of the initializer_list.
        -:   95:   *  @param  __ils  Initializer list.
        -:   96:   */
        -:   97:  template<class _Tp>
        -:   98:    constexpr const _Tp*
        -:   99:    end(initializer_list<_Tp> __ils) noexcept
        -:  100:    { return __ils.end(); }
        -:  101:}
        -:  102:
        -:  103:#pragma GCC visibility pop
        -:  104:
        -:  105:#endif // C++11
        -:  106:
        -:  107:#endif // _INITIALIZER_LIST
