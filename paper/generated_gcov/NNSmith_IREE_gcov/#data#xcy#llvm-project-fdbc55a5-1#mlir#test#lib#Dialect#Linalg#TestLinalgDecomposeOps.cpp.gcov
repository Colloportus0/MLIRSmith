        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/test/lib/Dialect/Linalg/TestLinalgDecomposeOps.cpp
        -:    0:Graph:../tools/mlir/test/lib/Dialect/Linalg/CMakeFiles/MLIRLinalgTestPasses.dir/TestLinalgDecomposeOps.cpp.gcno
        -:    0:Data:../tools/mlir/test/lib/Dialect/Linalg/CMakeFiles/MLIRLinalgTestPasses.dir/TestLinalgDecomposeOps.cpp.gcda
        -:    0:Runs:325560
        -:    1://===- TestLinalgDecomposeOps.cpp - Test Linalg decomposition  ------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8://
        -:    9:// This file implements a pass for testing decomposition of Linalg ops.
        -:   10://
        -:   11://===----------------------------------------------------------------------===//
        -:   12:
        -:   13:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   14:#include "mlir/Dialect/Linalg/Transforms/Transforms.h"
        -:   15:#include "mlir/Pass/Pass.h"
        -:   16:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   17:
        -:   18:using namespace mlir;
        -:   19:
        -:   20:namespace {
        -:   21:struct TestLinalgDecomposeOps
        -:   22:    : public PassWrapper<TestLinalgDecomposeOps, OperationPass<>> {
function _ZN12_GLOBAL__N_122TestLinalgDecomposeOps13resolveTypeIDEv called 326638 returned 100% blocks executed 100%
   326638:   23:  MLIR_DEFINE_EXPLICIT_INTERNAL_INLINE_TYPE_ID(TestLinalgDecomposeOps)
branch  0 taken 100% (fallthrough)
branch  1 taken 1%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
        -:   24:
   326638:   25:  TestLinalgDecomposeOps() = default;
call    0 returned 100%
    #####:   26:  TestLinalgDecomposeOps(const TestLinalgDecomposeOps &pass) = default;
call    0 never executed
function _ZNK12_GLOBAL__N_122TestLinalgDecomposeOps20getDependentDialectsERN4mlir15DialectRegistryE called 1078 returned 100% blocks executed 100%
     1078:   27:  void getDependentDialects(DialectRegistry &registry) const override {
     1078:   28:    registry.insert<AffineDialect, linalg::LinalgDialect>();
call    0 returned 100%
     1078:   29:  }
function _ZNK12_GLOBAL__N_122TestLinalgDecomposeOps11getArgumentEv called 325610 returned 100% blocks executed 100%
   325610:   30:  StringRef getArgument() const final { return "test-linalg-decompose-ops"; }
function _ZNK12_GLOBAL__N_122TestLinalgDecomposeOps14getDescriptionEv called 325560 returned 100% blocks executed 100%
   325560:   31:  StringRef getDescription() const final {
   325560:   32:    return "Test Linalg decomposition patterns";
        -:   33:  }
        -:   34:
function _ZN12_GLOBAL__N_122TestLinalgDecomposeOps14runOnOperationEv called 884 returned 100% blocks executed 69%
      884:   35:  void runOnOperation() override {
      884:   36:    MLIRContext *context = &this->getContext();
call    0 returned 100%
     1768:   37:    RewritePatternSet decompositionPatterns(context);
call    0 returned 100%
      884:   38:    linalg::populateDecomposeLinalgOpsPattern(decompositionPatterns);
call    0 returned 100%
      884:   39:    if (failed(applyPatternsAndFoldGreedily(
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
      884:   40:            getOperation(), std::move(decompositionPatterns)))) {
call    0 returned 100%
    #####:   41:      return signalPassFailure();
call    0 never executed
call    1 never executed
        -:   42:    }
        -:   43:  }
        -:   44:};
        -:   45:} // namespace
        -:   46:
        -:   47:namespace mlir {
        -:   48:namespace test {
function _ZN4mlir4test30registerTestLinalgDecomposeOpsEv called 325560 returned 100% blocks executed 100%
   325560:   49:void registerTestLinalgDecomposeOps() {
   325560:   50:  PassRegistration<TestLinalgDecomposeOps>();
call    0 returned 100%
   325560:   51:}
        -:   52:} // namespace test
        -:   53:} // namespace mlir
