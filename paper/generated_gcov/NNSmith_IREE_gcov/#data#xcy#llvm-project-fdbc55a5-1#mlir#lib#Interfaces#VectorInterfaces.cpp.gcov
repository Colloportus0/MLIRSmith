        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Interfaces/VectorInterfaces.cpp
        -:    0:Graph:../tools/mlir/lib/Interfaces/CMakeFiles/obj.MLIRVectorInterfaces.dir/VectorInterfaces.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Interfaces/CMakeFiles/obj.MLIRVectorInterfaces.dir/VectorInterfaces.cpp.gcda
        -:    0:Runs:325595
        -:    1://===- VectorInterfaces.cpp - Unrollable vector operations -*- C++ -*-===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Interfaces/VectorInterfaces.h"
        -:   10:
        -:   11:using namespace mlir;
        -:   12:
function _ZN4mlir6vector6detail16transferMaskTypeENS_10VectorTypeENS_9AffineMapE called 0 returned 0% blocks executed 0%
    #####:   13:VectorType mlir::vector::detail::transferMaskType(VectorType vecType,
        -:   14:                                                  AffineMap map) {
    #####:   15:  auto i1Type = IntegerType::get(map.getContext(), 1);
call    0 never executed
call    1 never executed
    #####:   16:  SmallVector<int64_t, 8> shape;
    #####:   17:  for (int64_t i = 0; i < vecType.getRank(); ++i) {
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   18:    // Only result dims have a corresponding dim in the mask.
    #####:   19:    if (map.getResult(i).template isa<AffineDimExpr>()) {
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   20:      shape.push_back(vecType.getDimSize(i));
call    0 never executed
call    1 never executed
        -:   21:    }
        -:   22:  }
    #####:   23:  return VectorType::get(shape, i1Type);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   24:}
        -:   25:
        -:   26://===----------------------------------------------------------------------===//
        -:   27:// VectorUnroll Interfaces
        -:   28://===----------------------------------------------------------------------===//
        -:   29:
        -:   30:/// Include the definitions of the VectorUnroll interfaces.
        -:   31:#include "mlir/Interfaces/VectorInterfaces.cpp.inc"
