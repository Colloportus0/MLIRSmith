        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/IR/IntegerSet.cpp
        -:    0:Graph:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/IntegerSet.cpp.gcno
        -:    0:Data:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/IntegerSet.cpp.gcda
        -:    0:Runs:325565
        -:    1://===- IntegerSet.cpp - MLIR Integer Set class ----------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/IR/IntegerSet.h"
        -:   10:#include "IntegerSetDetail.h"
        -:   11:
        -:   12:using namespace mlir;
        -:   13:using namespace mlir::detail;
        -:   14:
function _ZNK4mlir10IntegerSet10getNumDimsEv called 0 returned 0% blocks executed 0%
    #####:   15:unsigned IntegerSet::getNumDims() const { return set->dimCount; }
function _ZNK4mlir10IntegerSet13getNumSymbolsEv called 0 returned 0% blocks executed 0%
    #####:   16:unsigned IntegerSet::getNumSymbols() const { return set->symbolCount; }
function _ZNK4mlir10IntegerSet12getNumInputsEv called 0 returned 0% blocks executed 0%
    #####:   17:unsigned IntegerSet::getNumInputs() const {
    #####:   18:  return set->dimCount + set->symbolCount;
        -:   19:}
        -:   20:
function _ZNK4mlir10IntegerSet17getNumConstraintsEv called 0 returned 0% blocks executed 0%
    #####:   21:unsigned IntegerSet::getNumConstraints() const {
    #####:   22:  return set->constraints.size();
        -:   23:}
        -:   24:
function _ZNK4mlir10IntegerSet16getNumEqualitiesEv called 0 returned 0% blocks executed 0%
    #####:   25:unsigned IntegerSet::getNumEqualities() const {
    #####:   26:  unsigned numEqualities = 0;
    #####:   27:  for (unsigned i = 0, e = getNumConstraints(); i < e; i++)
branch  0 never executed
branch  1 never executed
    #####:   28:    if (isEq(i))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   29:      ++numEqualities;
    #####:   30:  return numEqualities;
        -:   31:}
        -:   32:
function _ZNK4mlir10IntegerSet18getNumInequalitiesEv called 0 returned 0% blocks executed 0%
    #####:   33:unsigned IntegerSet::getNumInequalities() const {
    #####:   34:  return getNumConstraints() - getNumEqualities();
call    0 never executed
        -:   35:}
        -:   36:
function _ZNK4mlir10IntegerSet17isEmptyIntegerSetEv called 0 returned 0% blocks executed 0%
    #####:   37:bool IntegerSet::isEmptyIntegerSet() const {
    #####:   38:  return *this == getEmptySet(set->dimCount, set->symbolCount, getContext());
        -:   39:}
        -:   40:
function _ZNK4mlir10IntegerSet14getConstraintsEv called 0 returned 0% blocks executed 0%
    #####:   41:ArrayRef<AffineExpr> IntegerSet::getConstraints() const {
    #####:   42:  return set->constraints;
        -:   43:}
        -:   44:
function _ZNK4mlir10IntegerSet13getConstraintEj called 0 returned 0% blocks executed 0%
    #####:   45:AffineExpr IntegerSet::getConstraint(unsigned idx) const {
    #####:   46:  return getConstraints()[idx];
branch  0 never executed
branch  1 never executed
        -:   47:}
        -:   48:
        -:   49:/// Returns the equality bits, which specify whether each of the constraints
        -:   50:/// is an equality or inequality.
function _ZNK4mlir10IntegerSet10getEqFlagsEv called 0 returned 0% blocks executed 0%
    #####:   51:ArrayRef<bool> IntegerSet::getEqFlags() const { return set->eqFlags; }
        -:   52:
        -:   53:/// Returns true if the idx^th constraint is an equality, false if it is an
        -:   54:/// inequality.
function _ZNK4mlir10IntegerSet4isEqEj called 0 returned 0% blocks executed 0%
    #####:   55:bool IntegerSet::isEq(unsigned idx) const { return getEqFlags()[idx]; }
branch  0 never executed
branch  1 never executed
        -:   56:
function _ZNK4mlir10IntegerSet10getContextEv called 0 returned 0% blocks executed 0%
    #####:   57:MLIRContext *IntegerSet::getContext() const {
    #####:   58:  return getConstraint(0).getContext();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   59:}
        -:   60:
        -:   61:/// Walk all of the AffineExpr's in this set. Each node in an expression
        -:   62:/// tree is visited in postorder.
function _ZNK4mlir10IntegerSet9walkExprsEN4llvm12function_refIFvNS_10AffineExprEEEE called 0 returned 0% blocks executed 0%
    #####:   63:void IntegerSet::walkExprs(function_ref<void(AffineExpr)> callback) const {
    #####:   64:  for (auto expr : getConstraints())
branch  0 never executed
branch  1 never executed
    #####:   65:    expr.walk(callback);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   66:}
        -:   67:
function _ZN4mlir10IntegerSet21replaceDimsAndSymbolsEN4llvm8ArrayRefINS_10AffineExprEEES4_jj called 0 returned 0% blocks executed 0%
    #####:   68:IntegerSet IntegerSet::replaceDimsAndSymbols(
        -:   69:    ArrayRef<AffineExpr> dimReplacements, ArrayRef<AffineExpr> symReplacements,
        -:   70:    unsigned numResultDims, unsigned numResultSyms) {
    #####:   71:  SmallVector<AffineExpr, 8> constraints;
branch  0 never executed
branch  1 never executed
    #####:   72:  constraints.reserve(getNumConstraints());
branch  0 never executed
branch  1 never executed
    #####:   73:  for (auto cst : getConstraints())
branch  0 never executed
branch  1 never executed
    #####:   74:    constraints.push_back(
call    0 never executed
call    1 never executed
        -:   75:        cst.replaceDimsAndSymbols(dimReplacements, symReplacements));
        -:   76:
    #####:   77:  return get(numResultDims, numResultSyms, constraints, getEqFlags());
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   78:}
