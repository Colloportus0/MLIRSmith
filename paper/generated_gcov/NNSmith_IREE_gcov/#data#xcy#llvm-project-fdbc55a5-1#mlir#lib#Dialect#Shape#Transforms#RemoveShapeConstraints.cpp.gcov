        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/Shape/Transforms/RemoveShapeConstraints.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/Shape/Transforms/CMakeFiles/obj.MLIRShapeOpsTransforms.dir/RemoveShapeConstraints.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/Shape/Transforms/CMakeFiles/obj.MLIRShapeOpsTransforms.dir/RemoveShapeConstraints.cpp.gcda
        -:    0:Runs:325551
        -:    1://===-- RemoveShapeConstraints.cpp - Remove Shape Cstr and Assuming Ops ---===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/Shape/Transforms/Passes.h"
        -:   10:
        -:   11:#include "mlir/Dialect/Func/IR/FuncOps.h"
        -:   12:#include "mlir/Dialect/Shape/IR/Shape.h"
        -:   13:#include "mlir/Transforms/DialectConversion.h"
        -:   14:#include "mlir/Transforms/GreedyPatternRewriteDriver.h"
        -:   15:
        -:   16:namespace mlir {
        -:   17:#define GEN_PASS_DEF_REMOVESHAPECONSTRAINTS
        -:   18:#include "mlir/Dialect/Shape/Transforms/Passes.h.inc"
        -:   19:} // namespace mlir
        -:   20:
        -:   21:using namespace mlir;
        -:   22:
        -:   23:namespace {
        -:   24:/// Removal patterns.
        -:   25:class RemoveCstrBroadcastableOp
        -:   26:    : public OpRewritePattern<shape::CstrBroadcastableOp> {
        -:   27:public:
        -:   28:  using OpRewritePattern::OpRewritePattern;
        -:   29:
function _ZNK12_GLOBAL__N_125RemoveCstrBroadcastableOp15matchAndRewriteEN4mlir5shape19CstrBroadcastableOpERNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   30:  LogicalResult matchAndRewrite(shape::CstrBroadcastableOp op,
        -:   31:                                PatternRewriter &rewriter) const override {
    #####:   32:    rewriter.replaceOpWithNewOp<shape::ConstWitnessOp>(op.getOperation(), true);
call    0 never executed
    #####:   33:    return success();
        -:   34:  }
        -:   35:};
        -:   36:
        -:   37:class RemoveCstrEqOp : public OpRewritePattern<shape::CstrEqOp> {
        -:   38:public:
        -:   39:  using OpRewritePattern::OpRewritePattern;
        -:   40:
function _ZNK12_GLOBAL__N_114RemoveCstrEqOp15matchAndRewriteEN4mlir5shape8CstrEqOpERNS1_15PatternRewriterE called 0 returned 0% blocks executed 0%
    #####:   41:  LogicalResult matchAndRewrite(shape::CstrEqOp op,
        -:   42:                                PatternRewriter &rewriter) const override {
    #####:   43:    rewriter.replaceOpWithNewOp<shape::ConstWitnessOp>(op.getOperation(), true);
call    0 never executed
    #####:   44:    return success();
        -:   45:  }
        -:   46:};
        -:   47:
        -:   48:/// Removal pass.
   387733:   49:class RemoveShapeConstraintsPass
call    0 returned 100%
call    1 returned 100%
        -:   50:    : public impl::RemoveShapeConstraintsBase<RemoveShapeConstraintsPass> {
        -:   51:
function _ZN12_GLOBAL__N_126RemoveShapeConstraintsPass14runOnOperationEv called 941 returned 99% blocks executed 100%
      941:   52:  void runOnOperation() override {
      941:   53:    MLIRContext &ctx = getContext();
call    0 returned 100%
        -:   54:
      941:   55:    RewritePatternSet patterns(&ctx);
call    0 returned 100%
     1882:   56:    populateRemoveShapeConstraintsPatterns(patterns);
        -:   57:
      938:   58:    (void)applyPatternsAndFoldGreedily(getOperation(), std::move(patterns));
call    0 returned 100%
call    1 returned 100%
call    2 returned 99%
call    3 returned 100%
      933:   59:  }
        -:   60:};
        -:   61:
        -:   62:} // namespace
        -:   63:
function _ZN4mlir38populateRemoveShapeConstraintsPatternsERNS_17RewritePatternSetE called 0 returned 0% blocks executed 0%
     941*:   64:void mlir::populateRemoveShapeConstraintsPatterns(RewritePatternSet &patterns) {
     941*:   65:  patterns.add<RemoveCstrBroadcastableOp, RemoveCstrEqOp>(
     941*:   66:      patterns.getContext());
call    0 never executed
call    1 returned 100%
call    2 returned 100%
    #####:   67:}
        -:   68:
        -:   69:std::unique_ptr<OperationPass<func::FuncOp>>
function _ZN4mlir32createRemoveShapeConstraintsPassEv called 326605 returned 100% blocks executed 100%
   326605:   70:mlir::createRemoveShapeConstraintsPass() {
   326605:   71:  return std::make_unique<RemoveShapeConstraintsPass>();
call    0 returned 100%
        -:   72:}
