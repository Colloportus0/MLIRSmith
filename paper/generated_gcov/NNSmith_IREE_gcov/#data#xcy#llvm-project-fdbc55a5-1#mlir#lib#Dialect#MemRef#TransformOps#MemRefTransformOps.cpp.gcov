        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/Dialect/MemRef/TransformOps/MemRefTransformOps.cpp
        -:    0:Graph:../tools/mlir/lib/Dialect/MemRef/TransformOps/CMakeFiles/obj.MLIRMemRefTransformOps.dir/MemRefTransformOps.cpp.gcno
        -:    0:Data:../tools/mlir/lib/Dialect/MemRef/TransformOps/CMakeFiles/obj.MLIRMemRefTransformOps.dir/MemRefTransformOps.cpp.gcda
        -:    0:Runs:325549
        -:    1://===- MemRefTransformOps.cpp - Implementation of Memref transform ops ----===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/Dialect/MemRef/TransformOps/MemRefTransformOps.h"
        -:   10:#include "mlir/Dialect/Affine/IR/AffineOps.h"
        -:   11:#include "mlir/Dialect/Arith/IR/Arith.h"
        -:   12:#include "mlir/Dialect/MemRef/IR/MemRef.h"
        -:   13:#include "mlir/Dialect/MemRef/Transforms/Passes.h"
        -:   14:#include "mlir/Dialect/PDL/IR/PDL.h"
        -:   15:#include "mlir/Dialect/Transform/IR/TransformDialect.h"
        -:   16:#include "mlir/Dialect/Transform/IR/TransformInterfaces.h"
        -:   17:
        -:   18:using namespace mlir;
        -:   19:
        -:   20://===----------------------------------------------------------------------===//
        -:   21:// MemRefMultiBufferOp
        -:   22://===----------------------------------------------------------------------===//
        -:   23:
        -:   24:DiagnosedSilenceableFailure
function _ZN4mlir9transform19MemRefMultiBufferOp10applyToOneENS_6memref7AllocOpERN4llvm11SmallVectorIPNS_9OperationELj6EEERNS0_14TransformStateE called 0 returned 0% blocks executed 0%
    #####:   25:transform::MemRefMultiBufferOp::applyToOne(memref::AllocOp target,
        -:   26:                                           SmallVector<Operation *> &results,
        -:   27:                                           transform::TransformState &state) {
    #####:   28:  auto newBuffer = memref::multiBuffer(target, getFactor());
call    0 never executed
call    1 never executed
    #####:   29:  if (failed(newBuffer)) {
branch  0 never executed
branch  1 never executed
    #####:   30:    Diagnostic diag(target->getLoc(), DiagnosticSeverity::Note);
call    0 never executed
    #####:   31:    diag << "op failed to multibuffer";
call    0 never executed
    #####:   32:    return DiagnosedSilenceableFailure::silenceableFailure(std::move(diag));
call    0 never executed
call    1 never executed
        -:   33:  }
        -:   34:
    #####:   35:  results.push_back(newBuffer.value());
call    0 never executed
    #####:   36:  return DiagnosedSilenceableFailure(success());
        -:   37:}
        -:   38:
        -:   39://===----------------------------------------------------------------------===//
        -:   40:// Transform op registration
        -:   41://===----------------------------------------------------------------------===//
        -:   42:
        -:   43:namespace {
   587646:   44:class MemRefTransformDialectExtension
call    0 returned 100%
call    1 returned 100%
        -:   45:    : public transform::TransformDialectExtension<
        -:   46:          MemRefTransformDialectExtension> {
        -:   47:public:
        -:   48:  using Base::Base;
        -:   49:
function _ZN12_GLOBAL__N_131MemRefTransformDialectExtension4initEv called 325549 returned 100% blocks executed 100%
   325549:   50:  void init() {
   325549:   51:    declareDependentDialect<pdl::PDLDialect>();
call    0 returned 100%
   325549:   52:    declareGeneratedDialect<AffineDialect>();
call    0 returned 100%
   325549:   53:    declareGeneratedDialect<arith::ArithDialect>();
call    0 returned 100%
        -:   54:
   325549:   55:    registerTransformOps<
        -:   56:#define GET_OP_LIST
        -:   57:#include "mlir/Dialect/MemRef/TransformOps/MemRefTransformOps.cpp.inc"
   325549:   58:        >();
call    0 returned 100%
   325549:   59:  }
        -:   60:};
        -:   61:} // namespace
        -:   62:
        -:   63:#define GET_OP_CLASSES
        -:   64:#include "mlir/Dialect/MemRef/TransformOps/MemRefTransformOps.cpp.inc"
        -:   65:
function _ZN4mlir6memref33registerTransformDialectExtensionERNS_15DialectRegistryE called 325549 returned 100% blocks executed 100%
   325549:   66:void mlir::memref::registerTransformDialectExtension(
        -:   67:    DialectRegistry &registry) {
   325549:   68:  registry.addExtensions<MemRefTransformDialectExtension>();
call    0 returned 100%
   325549:   69:}
