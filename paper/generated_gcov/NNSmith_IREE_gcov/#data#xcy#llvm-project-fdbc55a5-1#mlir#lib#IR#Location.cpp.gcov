        -:    0:Source:/data/xcy/llvm-project-fdbc55a5-1/mlir/lib/IR/Location.cpp
        -:    0:Graph:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/Location.cpp.gcno
        -:    0:Data:../tools/mlir/lib/IR/CMakeFiles/obj.MLIRIR.dir/Location.cpp.gcda
        -:    0:Runs:325565
        -:    1://===- Location.cpp - MLIR Location Classes -------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#include "mlir/IR/Location.h"
        -:   10:#include "mlir/IR/BuiltinDialect.h"
        -:   11:#include "mlir/IR/Visitors.h"
        -:   12:#include "llvm/ADT/SetVector.h"
        -:   13:#include "llvm/ADT/TypeSwitch.h"
        -:   14:
        -:   15:using namespace mlir;
        -:   16:using namespace mlir::detail;
        -:   17:
        -:   18://===----------------------------------------------------------------------===//
        -:   19:/// Tablegen Attribute Definitions
        -:   20://===----------------------------------------------------------------------===//
        -:   21:
        -:   22:#define GET_ATTRDEF_CLASSES
        -:   23:#include "mlir/IR/BuiltinLocationAttributes.cpp.inc"
        -:   24:
        -:   25://===----------------------------------------------------------------------===//
        -:   26:// BuiltinDialect
        -:   27://===----------------------------------------------------------------------===//
        -:   28:
function _ZN4mlir14BuiltinDialect26registerLocationAttributesEv called 524218 returned 100% blocks executed 100%
   524218:   29:void BuiltinDialect::registerLocationAttributes() {
   524218:   30:  addAttributes<
        -:   31:#define GET_ATTRDEF_LIST
        -:   32:#include "mlir/IR/BuiltinLocationAttributes.cpp.inc"
   524218:   33:      >();
call    0 returned 100%
   524218:   34:}
        -:   35:
        -:   36://===----------------------------------------------------------------------===//
        -:   37:// LocationAttr
        -:   38://===----------------------------------------------------------------------===//
        -:   39:
function _ZN4mlir12LocationAttr4walkEN4llvm12function_refIFNS_10WalkResultENS_8LocationEEEE called 247431 returned 100% blocks executed 92%
   247431:   40:WalkResult LocationAttr::walk(function_ref<WalkResult(Location)> walkFn) {
   247431:   41:  if (walkFn(*this).wasInterrupted())
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 returned 100%
branch  3 taken 95% (fallthrough)
branch  4 taken 5%
   235064:   42:    return WalkResult::interrupt();
        -:   43:
    12367:   44:  return TypeSwitch<LocationAttr, WalkResult>(*this)
call    0 returned 100%
function _ZZN4mlir12LocationAttr4walkEN4llvm12function_refIFNS_10WalkResultENS_8LocationEEEEENKUlNS_11CallSiteLocEE_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   45:      .Case([&](CallSiteLoc callLoc) -> WalkResult {
    #####:   46:        if (callLoc.getCallee()->walk(walkFn).wasInterrupted())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   47:          return WalkResult::interrupt();
    #####:   48:        return callLoc.getCaller()->walk(walkFn);
call    0 never executed
    12367:   49:      })
call    0 returned 100%
function _ZZN4mlir12LocationAttr4walkEN4llvm12function_refIFNS_10WalkResultENS_8LocationEEEEENKUlNS_8FusedLocEE0_clES7_.isra.0 called 0 returned 0% blocks executed 0%
    #####:   50:      .Case([&](FusedLoc fusedLoc) -> WalkResult {
    #####:   51:        for (Location subLoc : fusedLoc.getLocations())
branch  0 never executed
branch  1 never executed
    #####:   52:          if (subLoc->walk(walkFn).wasInterrupted())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   53:            return WalkResult::interrupt();
    #####:   54:        return WalkResult::advance();
    12367:   55:      })
call    0 returned 100%
    #####:   56:      .Case([&](NameLoc nameLoc) -> WalkResult {
    #####:   57:        return nameLoc.getChildLoc()->walk(walkFn);
call    0 never executed
branch  1 never executed
branch  2 never executed
    12367:   58:      })
call    0 returned 100%
function _ZZN4mlir12LocationAttr4walkEN4llvm12function_refIFNS_10WalkResultENS_8LocationEEEEENKUlNS_9OpaqueLocEE2_clES7_.isra.0 called 1584 returned 100% blocks executed 100%
     1584:   59:      .Case([&](OpaqueLoc opaqueLoc) -> WalkResult {
     1584:   60:        return opaqueLoc.getFallbackLocation()->walk(walkFn);
call    0 returned 100%
    12367:   61:      })
call    0 returned 100%
branch  1 taken 13% (fallthrough)
branch  2 taken 87%
    13951:   62:      .Default(WalkResult::advance());
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
        -:   63:}
        -:   64:
        -:   65:/// Methods for support type inquiry through isa, cast, and dyn_cast.
function _ZN4mlir12LocationAttr7classofENS_9AttributeE called 1441448 returned 100% blocks executed 100%
 1441448*:   66:bool LocationAttr::classof(Attribute attr) {
 1441448*:   67:  return attr.isa<CallSiteLoc, FileLineColLoc, FusedLoc, NameLoc, OpaqueLoc,
call    0 never executed
call    1 returned 100%
    #####:   68:                  UnknownLoc>();
branch  0 never executed
branch  1 never executed
        -:   69:}
        -:   70:
        -:   71://===----------------------------------------------------------------------===//
        -:   72:// CallSiteLoc
        -:   73://===----------------------------------------------------------------------===//
        -:   74:
function _ZN4mlir11CallSiteLoc3getENS_8LocationEN4llvm8ArrayRefIS1_EE called 0 returned 0% blocks executed 0%
    #####:   75:CallSiteLoc CallSiteLoc::get(Location name, ArrayRef<Location> frames) {
    #####:   76:  assert(!frames.empty() && "required at least 1 call frame");
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:   77:  Location caller = frames.back();
call    0 never executed
    #####:   78:  for (auto frame : llvm::reverse(frames.drop_back()))
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:   79:    caller = CallSiteLoc::get(frame, caller);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   80:  return CallSiteLoc::get(name, caller);
call    0 never executed
        -:   81:}
        -:   82:
function _ZNK4mlir11CallSiteLoc24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS2_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:   83:void CallSiteLoc::walkImmediateSubElements(
        -:   84:    function_ref<void(Attribute)> walkAttrsFn,
        -:   85:    function_ref<void(Type)> walkTypesFn) const {
    #####:   86:  walkAttrsFn(getCallee());
call    0 never executed
call    1 never executed
    #####:   87:  walkAttrsFn(getCaller());
call    0 never executed
call    1 never executed
    #####:   88:}
        -:   89:
        -:   90:Attribute
function _ZNK4mlir11CallSiteLoc27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS2_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:   91:CallSiteLoc::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:   92:                                         ArrayRef<Type> replTypes) const {
    #####:   93:  return get(replAttrs[0].cast<LocationAttr>(),
    #####:   94:             replAttrs[1].cast<LocationAttr>());
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
        -:   95:}
        -:   96:
        -:   97://===----------------------------------------------------------------------===//
        -:   98:// FusedLoc
        -:   99://===----------------------------------------------------------------------===//
        -:  100:
function _ZN4mlir8FusedLoc3getEN4llvm8ArrayRefINS_8LocationEEENS_9AttributeEPNS_11MLIRContextE called 0 returned 0% blocks executed 0%
    #####:  101:Location FusedLoc::get(ArrayRef<Location> locs, Attribute metadata,
        -:  102:                       MLIRContext *context) {
        -:  103:  // Unique the set of locations to be fused.
    #####:  104:  llvm::SmallSetVector<Location, 4> decomposedLocs;
call    0 never executed
    #####:  105:  for (auto loc : locs) {
branch  0 never executed
branch  1 never executed
        -:  106:    // If the location is a fused location we decompose it if it has no
        -:  107:    // metadata or the metadata is the same as the top level metadata.
    #####:  108:    if (auto fusedLoc = llvm::dyn_cast<FusedLoc>(loc)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  109:      if (fusedLoc.getMetadata() == metadata) {
branch  0 never executed
branch  1 never executed
        -:  110:        // UnknownLoc's have already been removed from FusedLocs so we can
        -:  111:        // simply add all of the internal locations.
    #####:  112:        decomposedLocs.insert(fusedLoc.getLocations().begin(),
call    0 never executed
    #####:  113:                              fusedLoc.getLocations().end());
call    0 never executed
    #####:  114:        continue;
        -:  115:      }
        -:  116:    }
        -:  117:    // Otherwise, only add known locations to the set.
    #####:  118:    if (!loc.isa<UnknownLoc>())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  119:      decomposedLocs.insert(loc);
call    0 never executed
        -:  120:  }
    #####:  121:  locs = decomposedLocs.getArrayRef();
branch  0 never executed
branch  1 never executed
        -:  122:
        -:  123:  // Handle the simple cases of less than two locations. Ensure the metadata (if
        -:  124:  // provided) is not dropped.
    #####:  125:  if (locs.empty()) {
branch  0 never executed
branch  1 never executed
    #####:  126:    if (!metadata)
branch  0 never executed
branch  1 never executed
    #####:  127:      return UnknownLoc::get(context);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  128:    // TODO: Investigate ASAN failure when using implicit conversion from
        -:  129:    // Location to ArrayRef<Location> below.
    #####:  130:    return Base::get(context, ArrayRef<Location>{UnknownLoc::get(context)},
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  131:                     metadata);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  132:  }
    #####:  133:  if (locs.size() == 1 && !metadata)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  134:    return locs.front();
        -:  135:
    #####:  136:  return Base::get(context, locs, metadata);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  137:}
        -:  138:
function _ZNK4mlir8FusedLoc24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS2_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  139:void FusedLoc::walkImmediateSubElements(
        -:  140:    function_ref<void(Attribute)> walkAttrsFn,
        -:  141:    function_ref<void(Type)> walkTypesFn) const {
    #####:  142:  for (Attribute attr : getLocations())
branch  0 never executed
branch  1 never executed
call    2 never executed
    #####:  143:    walkAttrsFn(attr);
call    0 never executed
    #####:  144:  walkAttrsFn(getMetadata());
call    0 never executed
    #####:  145:}
        -:  146:
        -:  147:Attribute
function _ZNK4mlir8FusedLoc27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS2_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  148:FusedLoc::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:  149:                                      ArrayRef<Type> replTypes) const {
    #####:  150:  SmallVector<Location> newLocs;
branch  0 never executed
branch  1 never executed
    #####:  151:  newLocs.reserve(replAttrs.size() - 1);
branch  0 never executed
branch  1 never executed
    #####:  152:  for (Attribute attr : replAttrs.drop_back())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  153:    newLocs.push_back(attr.cast<LocationAttr>());
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:  154:  return get(getContext(), newLocs, replAttrs.back());
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
        -:  155:}
        -:  156:
        -:  157://===----------------------------------------------------------------------===//
        -:  158:// NameLoc
        -:  159://===----------------------------------------------------------------------===//
        -:  160:
function _ZNK4mlir7NameLoc24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS2_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
    #####:  161:void NameLoc::walkImmediateSubElements(
        -:  162:    function_ref<void(Attribute)> walkAttrsFn,
        -:  163:    function_ref<void(Type)> walkTypesFn) const {
    #####:  164:  walkAttrsFn(getName());
call    0 never executed
call    1 never executed
    #####:  165:  walkAttrsFn(getChildLoc());
call    0 never executed
call    1 never executed
    #####:  166:}
        -:  167:
function _ZNK4mlir7NameLoc27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS2_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  168:Attribute NameLoc::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:  169:                                               ArrayRef<Type> replTypes) const {
    #####:  170:  return get(replAttrs[0].cast<StringAttr>(),
    #####:  171:             replAttrs[1].cast<LocationAttr>());
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
        -:  172:}
        -:  173:
        -:  174://===----------------------------------------------------------------------===//
        -:  175:// OpaqueLoc
        -:  176://===----------------------------------------------------------------------===//
        -:  177:
function _ZNK4mlir9OpaqueLoc24walkImmediateSubElementsEN4llvm12function_refIFvNS_9AttributeEEEENS2_IFvNS_4TypeEEEE called 0 returned 0% blocks executed 0%
     289*:  178:void OpaqueLoc::walkImmediateSubElements(
        -:  179:    function_ref<void(Attribute)> walkAttrsFn,
        -:  180:    function_ref<void(Type)> walkTypesFn) const {
     289*:  181:  walkAttrsFn(getFallbackLocation());
call    0 returned 100%
call    1 never executed
    #####:  182:}
        -:  183:
        -:  184:Attribute
function _ZNK4mlir9OpaqueLoc27replaceImmediateSubElementsEN4llvm8ArrayRefINS_9AttributeEEENS2_INS_4TypeEEE called 0 returned 0% blocks executed 0%
    #####:  185:OpaqueLoc::replaceImmediateSubElements(ArrayRef<Attribute> replAttrs,
        -:  186:                                       ArrayRef<Type> replTypes) const {
    #####:  187:  return get(getUnderlyingLocation(), getUnderlyingTypeID(),
    #####:  188:             replAttrs[0].cast<LocationAttr>());
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
        -:  189:}
