{
    "covered_op_connections": [
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.shl",
                "index.shrs",
                "index.shru"
            ],
            "to": "affine.apply"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.and",
                "index.castu",
                "index.shrs",
                "index.xor",
                "memref.alloc",
                "tensor.empty",
                "vector.extract"
            ],
            "to": "affine.for"
        },
        {
            "froms": [
                "arith.constant"
            ],
            "to": "affine.if"
        },
        {
            "froms": [
                "arith.constant",
                "memref.alloc"
            ],
            "to": "affine.load"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivs",
                "index.ceildivu",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.shl",
                "index.sizeof"
            ],
            "to": "affine.max"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.ceildivs",
                "index.divs",
                "index.divu",
                "index.maxs",
                "index.shrs",
                "index.sub",
                "tensor.rank"
            ],
            "to": "affine.min"
        },
        {
            "froms": [
                "affine.parallel",
                "arith.constant",
                "bufferization.clone",
                "memref.alloc",
                "scf.if"
            ],
            "to": "affine.store"
        },
        {
            "froms": [
                "affine.apply",
                "affine.parallel",
                "arith.constant",
                "bufferization.clone",
                "bufferization.to_memref",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivu",
                "index.maxs",
                "index.maxu",
                "index.shrs",
                "index.shru",
                "index.sub",
                "index.xor",
                "memref.alloc",
                "scf.execute_region"
            ],
            "to": "affine.vector_load"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "bufferization.to_memref",
                "index.casts",
                "index.ceildivu",
                "index.floordivs",
                "index.mul",
                "index.shl",
                "index.shru",
                "index.sizeof",
                "memref.alloc",
                "memref.alloca_scope",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.flat_transpose",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "affine.vector_store"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.addf"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if"
            ],
            "to": "arith.addi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.execute_region",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.andi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.execute_region",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "arith.ceildivsi"
        },
        {
            "froms": [
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.cmpf"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "scf.execute_region",
                "scf.if",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.cmpi"
        },
        {
            "to": "arith.constant"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.divf"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "index.bool.constant",
                "vector.multi_reduction"
            ],
            "to": "arith.divsi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.divui"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.execute_region",
                "vector.multi_reduction"
            ],
            "to": "arith.floordivsi"
        },
        {
            "froms": [
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.maxf"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "vector.multi_reduction"
            ],
            "to": "arith.maxsi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.maxui"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.minf"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "scf.if"
            ],
            "to": "arith.minsi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "index.bool.constant",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "arith.minui"
        },
        {
            "froms": [
                "arith.constant",
                "scf.if"
            ],
            "to": "arith.mulf"
        },
        {
            "froms": [
                "arith.constant",
                "scf.execute_region",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "arith.muli"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant"
            ],
            "to": "arith.negf"
        },
        {
            "froms": [
                "arith.constant"
            ],
            "to": "arith.ori"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.if",
                "tensor.extract"
            ],
            "to": "arith.remf"
        },
        {
            "froms": [
                "arith.constant",
                "vector.multi_reduction"
            ],
            "to": "arith.remsi"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "scf.execute_region",
                "scf.if",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.remui"
        },
        {
            "froms": [
                "arith.constant",
                "scf.execute_region",
                "scf.if",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.shli"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "scf.execute_region",
                "vector.multi_reduction"
            ],
            "to": "arith.shrsi"
        },
        {
            "froms": [
                "arith.constant",
                "tensor.extract",
                "vector.multi_reduction"
            ],
            "to": "arith.shrui"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "vector.multi_reduction"
            ],
            "to": "arith.subi"
        },
        {
            "froms": [
                "arith.constant",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "arith.xori"
        },
        {
            "froms": [
                "bufferization.clone",
                "bufferization.to_memref",
                "memref.alloc",
                "scf.execute_region"
            ],
            "to": "bufferization.clone"
        },
        {
            "froms": [
                "tensor.collapse_shape",
                "tensor.empty"
            ],
            "to": "bufferization.dealloc_tensor"
        },
        {
            "froms": [
                "bufferization.to_tensor",
                "linalg.broadcast",
                "tensor.empty"
            ],
            "to": "bufferization.to_memref"
        },
        {
            "froms": [
                "bufferization.clone",
                "bufferization.to_memref",
                "memref.alloc",
                "scf.if"
            ],
            "to": "bufferization.to_tensor"
        },
        {
            "froms": [
                "arith.constant",
                "memref.alloc",
                "tensor.empty"
            ],
            "to": "func.call"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.maxs",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sub",
                "index.xor",
                "tensor.rank"
            ],
            "to": "index.add"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.shl",
                "index.shrs",
                "index.sizeof",
                "index.xor"
            ],
            "to": "index.and"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.ceildivs",
                "index.sub",
                "vector.multi_reduction"
            ],
            "to": "index.casts"
        },
        {
            "froms": [
                "affine.apply",
                "affine.min",
                "arith.constant",
                "index.add",
                "index.ceildivs",
                "index.maxu",
                "index.shl",
                "tensor.extract"
            ],
            "to": "index.castu"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivu",
                "index.floordivs",
                "index.mul",
                "index.shrs",
                "index.shru"
            ],
            "to": "index.ceildivs"
        },
        {
            "froms": [
                "affine.min",
                "arith.constant",
                "index.add",
                "index.maxs",
                "index.shl",
                "index.shrs",
                "index.sub",
                "index.xor"
            ],
            "to": "index.ceildivu"
        },
        {
            "froms": [
                "affine.max",
                "arith.constant",
                "index.and",
                "index.divs",
                "index.maxs",
                "index.maxu",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sub"
            ],
            "to": "index.divs"
        },
        {
            "froms": [
                "affine.apply",
                "affine.min",
                "arith.constant",
                "index.add",
                "index.ceildivu",
                "index.divs",
                "index.floordivs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor"
            ],
            "to": "index.divu"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.ceildivs",
                "index.ceildivu",
                "index.floordivs",
                "index.shl",
                "index.sub",
                "index.xor"
            ],
            "to": "index.floordivs"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.maxs",
                "index.shrs",
                "index.shru",
                "index.sub"
            ],
            "to": "index.maxs"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.maxs",
                "index.mul",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.xor"
            ],
            "to": "index.maxu"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.maxu",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sub",
                "tensor.dim"
            ],
            "to": "index.mul"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.divs",
                "index.maxs",
                "index.mul",
                "index.shl",
                "index.sizeof",
                "tensor.dim"
            ],
            "to": "index.or"
        },
        {
            "froms": [
                "affine.min",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.maxs",
                "index.or",
                "index.shru",
                "index.sub",
                "index.xor"
            ],
            "to": "index.shl"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.shl",
                "index.shrs",
                "index.sizeof",
                "index.xor"
            ],
            "to": "index.shrs"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.maxs",
                "index.maxu",
                "index.shl",
                "index.shrs",
                "index.sizeof",
                "tensor.dim"
            ],
            "to": "index.shru"
        },
        {
            "froms": [
                "affine.apply",
                "affine.max",
                "affine.min",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.divs",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.sub"
            ],
            "to": "index.sub"
        },
        {
            "froms": [
                "arith.constant",
                "index.and",
                "index.ceildivs",
                "index.divs",
                "index.divu",
                "index.maxs",
                "index.shrs",
                "index.sub",
                "index.xor"
            ],
            "to": "index.xor"
        },
        {
            "froms": [
                "bufferization.to_tensor",
                "linalg.dot",
                "memref.alloc",
                "scf.execute_region",
                "tensor.empty",
                "tensor.expand_shape"
            ],
            "to": "linalg.broadcast"
        },
        {
            "froms": [
                "linalg.copy",
                "linalg.dot",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "linalg.copy"
        },
        {
            "froms": [
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "linalg.copy",
                "memref.alloc",
                "scf.execute_region",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.splat"
            ],
            "to": "linalg.dot"
        },
        {
            "froms": [
                "memref.alloc",
                "tensor.empty"
            ],
            "to": "linalg.generic"
        },
        {
            "froms": [
                "linalg.dot",
                "memref.alloc",
                "tensor.empty"
            ],
            "to": "linalg.map"
        },
        {
            "froms": [
                "linalg.transpose",
                "memref.alloc",
                "scf.if",
                "tensor.empty",
                "tensor.expand_shape"
            ],
            "to": "linalg.matmul"
        },
        {
            "froms": [
                "bufferization.clone",
                "memref.alloc",
                "tensor.empty"
            ],
            "to": "linalg.transpose"
        },
        {
            "froms": [
                "arith.constant",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.extract"
            ],
            "to": "math.absf"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.generate",
                "tensor.splat"
            ],
            "to": "math.absi"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.expand_shape"
            ],
            "to": "math.atan"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "math.atan2"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.broadcast",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements",
                "tensor.generate",
                "vector.multi_reduction"
            ],
            "to": "math.ceil"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.from_elements",
                "vector.multi_reduction"
            ],
            "to": "math.copysign"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.broadcast",
                "linalg.dot",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements"
            ],
            "to": "math.cos"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "bufferization.to_tensor",
                "tensor.empty",
                "vector.multi_reduction"
            ],
            "to": "math.ctlz"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_tensor",
                "linalg.transpose",
                "tensor.empty",
                "vector.multi_reduction"
            ],
            "to": "math.ctpop"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "math.cttz"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "linalg.dot",
                "scf.if",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.extract",
                "tensor.generate"
            ],
            "to": "math.exp"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.broadcast",
                "linalg.dot",
                "linalg.transpose",
                "tensor.empty"
            ],
            "to": "math.exp2"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_tensor",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements"
            ],
            "to": "math.expm1"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "math.floor"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_tensor",
                "linalg.copy",
                "linalg.dot",
                "scf.if",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements"
            ],
            "to": "math.fma"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements"
            ],
            "to": "math.fpowi"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_tensor",
                "index.bool.constant",
                "tensor.empty",
                "tensor.extract",
                "tensor.splat"
            ],
            "to": "math.ipowi"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.copy",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "math.log"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty"
            ],
            "to": "math.log10"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.broadcast",
                "linalg.dot",
                "tensor.collapse_shape",
                "tensor.empty"
            ],
            "to": "math.log1p"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements"
            ],
            "to": "math.log2"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements"
            ],
            "to": "math.powf"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.from_elements",
                "tensor.generate"
            ],
            "to": "math.round"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "linalg.copy",
                "linalg.dot",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements"
            ],
            "to": "math.roundeven"
        },
        {
            "froms": [
                "arith.constant",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate"
            ],
            "to": "math.rsqrt"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "linalg.transpose",
                "tensor.cast",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements"
            ],
            "to": "math.sqrt"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "linalg.transpose",
                "scf.if",
                "tensor.empty"
            ],
            "to": "math.tan"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "tensor.empty"
            ],
            "to": "math.tanh"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.shrs",
                "index.xor"
            ],
            "to": "memref.alloc"
        },
        {
            "froms": [
                "arith.constant",
                "index.shl"
            ],
            "to": "memref.alloca"
        },
        {
            "froms": [
                "affine.parallel",
                "bufferization.clone",
                "memref.alloc"
            ],
            "to": "memref.assume_alignment"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "memref.alloc",
                "tensor.extract"
            ],
            "to": "memref.atomic_rmw"
        },
        {
            "froms": [
                "affine.parallel",
                "memref.alloc",
                "scf.if"
            ],
            "to": "memref.cast"
        },
        {
            "froms": [
                "bufferization.to_memref",
                "memref.alloc"
            ],
            "to": "memref.copy"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.clone",
                "memref.alloc"
            ],
            "to": "memref.load"
        },
        {
            "froms": [
                "memref.alloc",
                "scf.execute_region"
            ],
            "to": "memref.realloc"
        },
        {
            "froms": [
                "affine.parallel",
                "arith.constant",
                "bufferization.clone",
                "memref.alloc",
                "vector.multi_reduction"
            ],
            "to": "memref.store"
        },
        {
            "froms": [
                "linalg.dot",
                "memref.alloc",
                "scf.execute_region",
                "tensor.empty",
                "tensor.generate",
                "tensor.splat"
            ],
            "to": "memref.tensor_store"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "scf.if"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.casts",
                "index.divu",
                "index.shrs"
            ],
            "to": "scf.index_switch"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.and",
                "index.ceildivu",
                "index.maxs",
                "index.mul",
                "memref.alloc",
                "tensor.dim",
                "tensor.empty"
            ],
            "to": "scf.parallel"
        },
        {
            "froms": [
                "arith.constant",
                "memref.alloc",
                "tensor.empty",
                "vector.broadcast"
            ],
            "to": "scf.while"
        },
        {
            "froms": [
                "bufferization.to_tensor",
                "linalg.dot",
                "tensor.empty"
            ],
            "to": "tensor.cast"
        },
        {
            "froms": [
                "bufferization.to_tensor",
                "scf.execute_region",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements"
            ],
            "to": "tensor.collapse_shape"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.copy",
                "tensor.empty"
            ],
            "to": "tensor.dim"
        },
        {
            "froms": [
                "arith.constant",
                "index.and",
                "index.mul"
            ],
            "to": "tensor.empty"
        },
        {
            "froms": [
                "bufferization.to_tensor",
                "scf.execute_region",
                "tensor.empty",
                "tensor.from_elements",
                "tensor.splat"
            ],
            "to": "tensor.expand_shape"
        },
        {
            "froms": [
                "arith.constant",
                "tensor.empty"
            ],
            "to": "tensor.extract"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "index.bool.constant",
                "scf.if"
            ],
            "to": "tensor.from_elements"
        },
        {
            "froms": [
                "arith.constant",
                "index.add",
                "index.maxs",
                "index.maxu"
            ],
            "to": "tensor.generate"
        },
        {
            "froms": [
                "arith.constant",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "vector.multi_reduction"
            ],
            "to": "tensor.insert"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "linalg.dot",
                "scf.execute_region",
                "tensor.empty",
                "tensor.splat"
            ],
            "to": "tensor.pack"
        },
        {
            "froms": [
                "linalg.broadcast",
                "tensor.empty",
                "tensor.expand_shape"
            ],
            "to": "tensor.rank"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "scf.if",
                "vector.multi_reduction"
            ],
            "to": "tensor.splat"
        },
        {
            "froms": [
                "arith.constant",
                "linalg.dot",
                "scf.execute_region",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.from_elements"
            ],
            "to": "tensor.unpack"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.bitcast"
        },
        {
            "froms": [
                "affine.load",
                "arith.constant",
                "index.bool.constant"
            ],
            "to": "vector.broadcast"
        },
        {
            "froms": [
                "affine.vector_load",
                "arith.constant",
                "bufferization.clone",
                "bufferization.to_memref",
                "memref.alloc",
                "scf.execute_region",
                "scf.if",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.flat_transpose",
                "vector.load",
                "vector.maskedload"
            ],
            "to": "vector.compressstore"
        },
        {
            "froms": [
                "affine.vector_load",
                "arith.constant",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction"
            ],
            "to": "vector.contract"
        },
        {
            "froms": [
                "affine.apply",
                "arith.constant",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.ceildivu",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor"
            ],
            "to": "vector.create_mask"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.extract"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.fma",
                "vector.load",
                "vector.maskedload"
            ],
            "to": "vector.extract_strided_slice"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.flat_transpose"
        },
        {
            "froms": [
                "vector.broadcast",
                "vector.fma"
            ],
            "to": "vector.fma"
        },
        {
            "froms": [
                "affine.vector_load",
                "arith.constant",
                "bufferization.to_memref",
                "index.add",
                "index.and",
                "index.maxs",
                "index.or",
                "index.shrs",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.transpose",
                "memref.alloc",
                "memref.alloca_scope",
                "tensor.empty",
                "tensor.rank",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load"
            ],
            "to": "vector.gather"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "tensor.extract",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction"
            ],
            "to": "vector.insert"
        },
        {
            "froms": [
                "affine.load",
                "affine.vector_load",
                "arith.constant",
                "index.add",
                "index.ceildivu",
                "index.floordivs",
                "index.mul",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction"
            ],
            "to": "vector.insertelement"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_memref",
                "memref.alloc",
                "scf.if"
            ],
            "to": "vector.load"
        },
        {
            "froms": [
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.flat_transpose"
            ],
            "to": "vector.mask"
        },
        {
            "froms": [
                "affine.parallel",
                "affine.vector_load",
                "arith.constant",
                "bufferization.clone",
                "bufferization.to_memref",
                "memref.alloc",
                "scf.if",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.flat_transpose",
                "vector.maskedload"
            ],
            "to": "vector.maskedload"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.matrix_multiply"
        },
        {
            "froms": [
                "arith.constant",
                "index.bool.constant",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction"
            ],
            "to": "vector.multi_reduction"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.outerproduct"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.load",
                "vector.maskedload"
            ],
            "to": "vector.print"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.reduction"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload"
            ],
            "to": "vector.scan"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.clone",
                "bufferization.to_memref",
                "memref.alloc",
                "vector.broadcast",
                "vector.extract",
                "vector.flat_transpose",
                "vector.maskedload"
            ],
            "to": "vector.scatter"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.shuffle"
        },
        {
            "froms": [
                "arith.constant",
                "index.mul"
            ],
            "to": "vector.splat"
        },
        {
            "froms": [
                "arith.constant",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "index.add",
                "index.and",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.shrs",
                "linalg.copy",
                "memref.alloc",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements"
            ],
            "to": "vector.transfer_read"
        },
        {
            "froms": [
                "affine.apply",
                "affine.min",
                "arith.constant",
                "index.add",
                "index.casts",
                "index.ceildivs",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.shrs",
                "index.sub",
                "linalg.copy",
                "memref.alloc",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.empty",
                "vector.broadcast"
            ],
            "to": "vector.transfer_write"
        },
        {
            "froms": [
                "affine.vector_load",
                "vector.bitcast",
                "vector.broadcast",
                "vector.create_mask",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply"
            ],
            "to": "vector.transpose"
        },
        {
            "froms": [
                "arith.constant"
            ],
            "to": "vector.warp_execute_on_lane_0"
        }
    ],
    "covered_op_nests": [
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.if",
                "affine.max",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.mulf",
                "arith.ori",
                "arith.remf",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divu",
                "index.floordivs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shru",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.map",
                "linalg.matmul",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.ipowi",
                "math.log",
                "math.log10",
                "math.log1p",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.sqrt",
                "math.tanh",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.realloc",
                "memref.tensor_store",
                "scf.execute_region",
                "tensor.cast",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.rank",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.flat_transpose",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.reduction",
                "vector.scatter",
                "vector.splat",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose"
            ],
            "parent": "affine.if"
        },
        {
            "children": [
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.divsi",
                "arith.maxsi",
                "arith.muli",
                "index.castu",
                "index.ceildivu",
                "index.mul",
                "index.or",
                "math.atan2",
                "math.ceil",
                "math.cttz",
                "math.sqrt",
                "math.tanh",
                "tensor.dim",
                "tensor.empty",
                "tensor.extract",
                "vector.compressstore",
                "vector.fma",
                "vector.scan",
                "vector.scatter"
            ],
            "parent": "affine.parallel"
        },
        {
            "children": [
                "func.func"
            ],
            "parent": "builtin.module"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.if",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.minui",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.map",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log10",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.parallel",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.dim",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.rank",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "func.func"
        },
        {
            "children": [
                "affine.store",
                "affine.vector_store",
                "arith.addf",
                "index.shrs",
                "math.atan2",
                "math.cos",
                "math.ctlz",
                "math.fma",
                "math.round",
                "math.rsqrt",
                "tensor.extract",
                "tensor.from_elements",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.transfer_write"
            ],
            "parent": "linalg.generic"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxu",
                "index.mul",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "linalg.map"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.minui",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log10",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.parallel",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.dim",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose"
            ],
            "parent": "memref.alloca_scope"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_store",
                "arith.addf",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.minf",
                "arith.minsi",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divu",
                "index.floordivs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.dot",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan2",
                "math.ceil",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log1p",
                "math.log2",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.if",
                "scf.index_switch",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.splat",
                "tensor.unpack",
                "vector.compressstore",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose"
            ],
            "parent": "scf.execute_region"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.if",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.minui",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.map",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log10",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.parallel",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.dim",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.transpose",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "scf.if"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.if",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.maxui",
                "arith.minf",
                "arith.minui",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.floordivs",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.map",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log10",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.dim",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.rank",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "scf.index_switch"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.if",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "arith.addf",
                "arith.addi",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divui",
                "arith.maxf",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.remf",
                "arith.remui",
                "arith.shrui",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.shrs",
                "index.shru",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.ceil",
                "math.copysign",
                "math.ctlz",
                "math.exp",
                "math.fpowi",
                "math.ipowi",
                "math.log10",
                "math.log1p",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "memref.alloc",
                "memref.atomic_rmw",
                "memref.copy",
                "memref.load",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.empty",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.rank",
                "tensor.splat",
                "tensor.unpack",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.flat_transpose",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.splat",
                "vector.transfer_read",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "scf.parallel"
        },
        {
            "children": [
                "affine.max",
                "affine.store",
                "affine.vector_store",
                "arith.addf",
                "arith.ceildivsi",
                "arith.negf",
                "arith.remf",
                "arith.subi",
                "index.casts",
                "index.divs",
                "index.maxu",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "memref.store",
                "tensor.insert",
                "vector.gather",
                "vector.scan"
            ],
            "parent": "scf.reduce"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.load",
                "affine.max",
                "affine.min",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addf",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxsi",
                "arith.maxui",
                "arith.minf",
                "arith.minsi",
                "arith.mulf",
                "arith.muli",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_memref",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.ceildivu",
                "index.divs",
                "index.divu",
                "index.maxs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shrs",
                "index.shru",
                "index.sizeof",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.generic",
                "linalg.matmul",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ceil",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log10",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.rsqrt",
                "math.sqrt",
                "math.tan",
                "math.tanh",
                "memref.alloc",
                "memref.alloca_scope",
                "memref.assume_alignment",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.realloc",
                "memref.store",
                "memref.tensor_store",
                "scf.execute_region",
                "scf.if",
                "scf.index_switch",
                "scf.parallel",
                "scf.while",
                "tensor.cast",
                "tensor.collapse_shape",
                "tensor.dim",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.insert",
                "tensor.pack",
                "tensor.rank",
                "tensor.splat",
                "tensor.unpack",
                "vector.bitcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.insert",
                "vector.insertelement",
                "vector.load",
                "vector.mask",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.scatter",
                "vector.shuffle",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.transpose",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "scf.while"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.store",
                "affine.vector_load",
                "arith.addf",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxui",
                "arith.minf",
                "arith.minui",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remui",
                "arith.shli",
                "arith.shrui",
                "arith.subi",
                "bufferization.clone",
                "bufferization.to_tensor",
                "index.add",
                "index.and",
                "index.bool.constant",
                "index.casts",
                "index.castu",
                "index.ceildivu",
                "index.divs",
                "index.mul",
                "index.sub",
                "linalg.broadcast",
                "math.absf",
                "math.copysign",
                "math.cos",
                "math.ctlz",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.floor",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log2",
                "math.sqrt",
                "math.tanh",
                "memref.cast",
                "memref.load",
                "memref.store",
                "memref.tensor_store",
                "scf.index_switch",
                "tensor.empty",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.generate",
                "tensor.insert",
                "tensor.pack",
                "tensor.splat",
                "vector.bitcast",
                "vector.compressstore",
                "vector.contract",
                "vector.extract",
                "vector.gather",
                "vector.insert",
                "vector.load",
                "vector.maskedload",
                "vector.outerproduct",
                "vector.print",
                "vector.reduction",
                "vector.scan",
                "vector.shuffle",
                "vector.transfer_read",
                "vector.transfer_write",
                "vector.warp_execute_on_lane_0"
            ],
            "parent": "tensor.generate"
        },
        {
            "children": [
                "affine.apply",
                "affine.for",
                "affine.load",
                "affine.parallel",
                "affine.store",
                "affine.vector_load",
                "affine.vector_store",
                "arith.addi",
                "arith.andi",
                "arith.ceildivsi",
                "arith.cmpf",
                "arith.cmpi",
                "arith.constant",
                "arith.divf",
                "arith.divsi",
                "arith.divui",
                "arith.floordivsi",
                "arith.maxf",
                "arith.maxui",
                "arith.minsi",
                "arith.mulf",
                "arith.negf",
                "arith.ori",
                "arith.remf",
                "arith.remsi",
                "arith.remui",
                "arith.shli",
                "arith.shrsi",
                "arith.shrui",
                "arith.subi",
                "arith.xori",
                "bufferization.clone",
                "bufferization.dealloc_tensor",
                "bufferization.to_tensor",
                "func.call",
                "index.add",
                "index.and",
                "index.casts",
                "index.castu",
                "index.ceildivs",
                "index.divu",
                "index.floordivs",
                "index.maxu",
                "index.mul",
                "index.or",
                "index.shl",
                "index.shrs",
                "index.shru",
                "index.sub",
                "index.xor",
                "linalg.broadcast",
                "linalg.copy",
                "linalg.dot",
                "linalg.transpose",
                "math.absf",
                "math.absi",
                "math.atan",
                "math.atan2",
                "math.ctlz",
                "math.ctpop",
                "math.cttz",
                "math.exp",
                "math.exp2",
                "math.expm1",
                "math.fma",
                "math.fpowi",
                "math.ipowi",
                "math.log",
                "math.log1p",
                "math.log2",
                "math.powf",
                "math.round",
                "math.roundeven",
                "math.sqrt",
                "math.tan",
                "memref.alloc",
                "memref.atomic_rmw",
                "memref.cast",
                "memref.copy",
                "memref.load",
                "memref.tensor_store",
                "scf.index_switch",
                "scf.while",
                "tensor.cast",
                "tensor.dim",
                "tensor.empty",
                "tensor.expand_shape",
                "tensor.extract",
                "tensor.from_elements",
                "tensor.pack",
                "tensor.splat",
                "vector.bitcast",
                "vector.broadcast",
                "vector.compressstore",
                "vector.contract",
                "vector.create_mask",
                "vector.extract",
                "vector.extract_strided_slice",
                "vector.flat_transpose",
                "vector.fma",
                "vector.gather",
                "vector.load",
                "vector.maskedload",
                "vector.matrix_multiply",
                "vector.multi_reduction",
                "vector.outerproduct",
                "vector.reduction",
                "vector.scan",
                "vector.transfer_read",
                "vector.transpose"
            ],
            "parent": "vector.warp_execute_on_lane0"
        }
    ],
    "covered_ops": [
        "affine.apply",
        "affine.for",
        "affine.if",
        "affine.load",
        "affine.max",
        "affine.min",
        "affine.parallel",
        "affine.store",
        "affine.vector_load",
        "affine.vector_store",
        "arith.addf",
        "arith.addi",
        "arith.andi",
        "arith.ceildivsi",
        "arith.cmpf",
        "arith.cmpi",
        "arith.constant",
        "arith.divf",
        "arith.divsi",
        "arith.divui",
        "arith.floordivsi",
        "arith.maxf",
        "arith.maxsi",
        "arith.maxui",
        "arith.minf",
        "arith.minsi",
        "arith.minui",
        "arith.mulf",
        "arith.muli",
        "arith.negf",
        "arith.ori",
        "arith.remf",
        "arith.remsi",
        "arith.remui",
        "arith.shli",
        "arith.shrsi",
        "arith.shrui",
        "arith.subi",
        "arith.xori",
        "bufferization.clone",
        "bufferization.dealloc_tensor",
        "bufferization.to_memref",
        "bufferization.to_tensor",
        "func.call",
        "func.func",
        "index.add",
        "index.and",
        "index.bool.constant",
        "index.casts",
        "index.castu",
        "index.ceildivs",
        "index.ceildivu",
        "index.divs",
        "index.divu",
        "index.floordivs",
        "index.maxs",
        "index.maxu",
        "index.mul",
        "index.or",
        "index.shl",
        "index.shrs",
        "index.shru",
        "index.sizeof",
        "index.sub",
        "index.xor",
        "linalg.broadcast",
        "linalg.copy",
        "linalg.dot",
        "linalg.generic",
        "linalg.map",
        "linalg.matmul",
        "linalg.transpose",
        "math.absf",
        "math.absi",
        "math.atan",
        "math.atan2",
        "math.ceil",
        "math.copysign",
        "math.cos",
        "math.ctlz",
        "math.ctpop",
        "math.cttz",
        "math.exp",
        "math.exp2",
        "math.expm1",
        "math.floor",
        "math.fma",
        "math.fpowi",
        "math.ipowi",
        "math.log",
        "math.log10",
        "math.log1p",
        "math.log2",
        "math.powf",
        "math.round",
        "math.roundeven",
        "math.rsqrt",
        "math.sqrt",
        "math.tan",
        "math.tanh",
        "memref.alloc",
        "memref.alloca",
        "memref.alloca_scope",
        "memref.assume_alignment",
        "memref.atomic_rmw",
        "memref.cast",
        "memref.copy",
        "memref.load",
        "memref.realloc",
        "memref.store",
        "memref.tensor_store",
        "scf.execute_region",
        "scf.if",
        "scf.index_switch",
        "scf.parallel",
        "scf.while",
        "tensor.cast",
        "tensor.collapse_shape",
        "tensor.dim",
        "tensor.empty",
        "tensor.expand_shape",
        "tensor.extract",
        "tensor.from_elements",
        "tensor.generate",
        "tensor.insert",
        "tensor.pack",
        "tensor.rank",
        "tensor.splat",
        "tensor.unpack",
        "vector.bitcast",
        "vector.broadcast",
        "vector.compressstore",
        "vector.contract",
        "vector.create_mask",
        "vector.extract",
        "vector.extract_strided_slice",
        "vector.flat_transpose",
        "vector.fma",
        "vector.gather",
        "vector.insert",
        "vector.insertelement",
        "vector.load",
        "vector.mask",
        "vector.maskedload",
        "vector.matrix_multiply",
        "vector.multi_reduction",
        "vector.outerproduct",
        "vector.print",
        "vector.reduction",
        "vector.scan",
        "vector.scatter",
        "vector.shuffle",
        "vector.splat",
        "vector.transfer_read",
        "vector.transfer_write",
        "vector.transpose",
        "vector.warp_execute_on_lane_0"
    ]
}
